{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "maticAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "linkAmount",
          "type": "uint256"
        }
      ],
      "name": "SwapCompleted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "ChainlinkPegSwap",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ERC677_Link",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MaticLinkSwap",
      "outputs": [
        {
          "internalType": "contract UniV3WmaticLinkSwap",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "checkLinkPerMatic",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLatestPrice",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pegswap",
      "outputs": [
        {
          "internalType": "contract IPegSwap",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "poolFee",
      "outputs": [
        {
          "internalType": "uint24",
          "name": "",
          "type": "uint24"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "swap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "swapRouter",
      "outputs": [
        {
          "internalType": "contract ISwapRouter",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testConsumerExampleCall",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testPriceConversions",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testSwapOutPut",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "fuzzAmount",
          "type": "uint256"
        }
      ],
      "name": "testSwapOutputWithFuzz",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testWrapAndSwapFailFromExternalCall",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testcheckLinkPerMatic",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "wrapAndSwap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60c06040526007805460ff19166001179055600880546001600160a01b03191673e592427a0aece92de3edee1f18e0157c0586156417905534801561004357600080fd5b506007805462010000600160b01b031916755787befdc0ecd210dfa948264631cd53e68f7802000017905560016009553060a081905273aa1dc356dc4b18f30c347798fd5379f3d77abc5b6080819052906137eb6100c1600039600081816102750152610ab10152600081816102d10152610c5201526137eb6000f3fe6080604052600436106101145760003560e01c80638f987edb116100a0578063ec75ba4a11610064578063ec75ba4a14610297578063f009451e146102bf578063f2b1904f146102f3578063f9f56a8d1461031b578063fa7626d41461033057600080fd5b80638f987edb146101d1578063ba414fa6146101e6578063c31c9c071461020b578063c815875914610243578063e224ea0c1461026357600080fd5b80631188826b116100e75780631188826b146101825780632f065a2b146101975780634e49906d1461019f5780638119c065146101b45780638e15f473146101bc57600080fd5b806301f415b014610119578063073485b714610119578063089fe6aa146101415780630a9254e41461016b575b600080fd5b34801561012557600080fd5b5061012e61034a565b6040519081526020015b60405180910390f35b34801561014d57600080fd5b50610157610bb881565b60405162ffffff9091168152602001610138565b34801561017757600080fd5b50610180610389565b005b34801561018e57600080fd5b506101806104ce565b61012e610706565b3480156101ab57600080fd5b50610180610826565b61012e61098d565b3480156101c857600080fd5b5061012e610ded565b3480156101dd57600080fd5b50610180610e72565b3480156101f257600080fd5b506101fb610fa3565b6040519015158152602001610138565b34801561021757600080fd5b5060085461022b906001600160a01b031681565b6040516001600160a01b039091168152602001610138565b34801561024f57600080fd5b5061018061025e3660046121af565b6110c4565b34801561026f57600080fd5b5061022b7f000000000000000000000000000000000000000000000000000000000000000081565b3480156102a357600080fd5b5061022b73b0897686c545045afc77cf20ec7a532e3120e0f181565b3480156102cb57600080fd5b5061022b7f000000000000000000000000000000000000000000000000000000000000000081565b3480156102ff57600080fd5b5061022b73aa1dc356dc4b18f30c347798fd5379f3d77abc5b81565b34801561032757600080fd5b506101806114d7565b34801561033c57600080fd5b506007546101fb9060ff1681565b60006402540be40061035a610ded565b61036491906121de565b61037690670de0b6b3a76400006121de565b610384906305f5e100612200565b905090565b60405161039590612195565b604051809103906000f0801580156103b1573d6000803e3d6000fd5b50600a80546001600160a01b0319166001600160a01b039290921691821790556040516103dd906121a2565b6001600160a01b039091168152602001604051809103906000f080158015610409573d6000803e3d6000fd5b50600b80546001600160a01b0319166001600160a01b039290921691909117905561044873aa1dc356dc4b18f30c347798fd5379f3d77abc5b806118e5565b600754610478906201000090046001600160a01b0316735787befdc0ecd210dfa948264631cd53e68f78026118e5565b61049673b0897686c545045afc77cf20ec7a532e3120e0f1806118e5565b6008546104c0906001600160a01b031673e592427a0aece92de3edee1f18e0157c058615646118e5565b6104cc610bb8806119e9565b565b600b5460405163ca669fa760e01b81526001600160a01b0390911660048201526000805160206136d08339815191529063ca669fa790602401600060405180830381600087803b15801561052157600080fd5b505af1158015610535573d6000803e3d6000fd5b5050600b5460405163c88a5e6d60e01b81526001600160a01b03909116600482015269152d02c7e14af680000060248201526000805160206136d0833981519152925063c88a5e6d9150604401600060405180830381600087803b15801561059c57600080fd5b505af11580156105b0573d6000803e3d6000fd5b5050600b5460405163b5682a4960e01b815269152d02c7e14af67fffff60048201526001600160a01b03909116925063b5682a4991506024016020604051808303816000875af1158015610608573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061062c9190612217565b5061064f6040518060600160405280602881526020016136a86028913947611ac8565b6106e4604051806060016040528060248152602001613737602491396040516370a0823160e01b815230600482015273b0897686c545045afc77cf20ec7a532e3120e0f1906370a08231906024015b602060405180830381865afa1580156106bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106df9190612217565b611ac8565b6104cc6040518060600160405280602581526020016136f06025913947611ac8565b60003330146107305760405162461bcd60e51b815260040161072790612230565b60405180910390fd5b730d500b1d8e8ef31e21c99d1db9a6444d3adf12706001600160a01b031663d0e30db0346040518263ffffffff1660e01b81526004016000604051808303818588803b15801561077f57600080fd5b505af1158015610793573d6000803e3d6000fd5b505060405163a9059cbb60e01b8152336004820152346024820152730d500b1d8e8ef31e21c99d1db9a6444d3adf1270935063a9059cbb925060440190506020604051808303816000875af11580156107f0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108149190612261565b50600061082034611b0d565b92915050565b6000610830610ded565b90506108886040518060400160405280600a815260200169018902634b7359034b9960b51b8152508260405180604001604052806011815260200170506f6c79676f6e206d617469632077656960781b815250611cce565b6108be60008211604051806040016040528060118152602001700283934b1b2903932ba3ab937399018109607d1b815250611d15565b60006108cf6402540be400836121de565b6108e190670de0b6b3a76400006121de565b6108ef906305f5e100612200565b90506109136040518060600160405280602c815260200161375b602c913982611ac8565b61094f6040518060600160405280602281526020016137156022913961093a6064846121de565b610945906003612200565b6106df908461228a565b60408051602081019091526000815261098990670de0b6b3a764000061097f8469152d02c7e14af6800000612200565b6106df91906121de565b5050565b6000610997611d5a565b670de0b6b3a76400003410156109bf5760405162461bcd60e51b81526004016107279061229d565b69152d02c7e14af68000003410610a315760405162461bcd60e51b815260206004820152603060248201527f4d73672e76616c75652068617320746f206265206c657373207468616e20313060448201526f303030302065746820286d617469632960801b6064820152608401610727565b60405163095ea7b360e01b8152306004820152346024820152730d500b1d8e8ef31e21c99d1db9a6444d3adf12709063095ea7b3906044016020604051808303816000875af1158015610a88573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aac9190612261565b5060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316632f065a2b346040518263ffffffff1660e01b815260040160206040518083038185885af1158015610b0f573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610b349190612217565b905060008111610b775760405162461bcd60e51b815260206004820152600e60248201526d0537761702072657475726e7320360941b6044820152606401610727565b60405163095ea7b360e01b815273aa1dc356dc4b18f30c347798fd5379f3d77abc5b6004820152602481018290527353e0bca35ec356bd5dddfebbd1fc0fd03fabad399063095ea7b3906044016020604051808303816000875af1158015610be3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c079190612261565b50604051632b7f092360e01b8152600481018290527353e0bca35ec356bd5dddfebbd1fc0fd03fabad39602482015273b0897686c545045afc77cf20ec7a532e3120e0f160448201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632b7f092390606401600060405180830381600087803b158015610c9e57600080fd5b505af1158015610cb2573d6000803e3d6000fd5b50506040516370a0823160e01b815230600482015273b0897686c545045afc77cf20ec7a532e3120e0f1925063a9059cbb9150339083906370a0823190602401602060405180830381865afa158015610d0f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d339190612217565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015610d7e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610da29190612261565b50604080513481526020810183905233917f68c14902a77c0b779e8d12c5eadac21e74962f4e4efaa8a01582d13b3945ae7f910160405180910390a29050610dea6001600955565b90565b600080600760029054906101000a90046001600160a01b03166001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610e43573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e67919061230a565b509195945050505050565b604051610e7e90612195565b604051809103906000f080158015610e9a573d6000803e3d6000fd5b50600a80546001600160a01b0319166001600160a01b039290921691909117905560405163f28dceb360e01b81526000805160206136d08339815191529063f28dceb390610eea90600401612230565b600060405180830381600087803b158015610f0457600080fd5b505af1158015610f18573d6000803e3d6000fd5b50505050600a60009054906101000a90046001600160a01b03166001600160a01b0316632f065a2b69152d02c7e14af67fffff6040518263ffffffff1660e01b815260040160206040518083038185885af1158015610f7b573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610fa09190612217565b50565b600754600090610100900460ff1615610fc55750600754610100900460ff1690565b60006000805160206136d08339815191523b156110bf57604080516000805160206136d0833981519152602082018190526519985a5b195960d21b82840152825180830384018152606083019093526000929091611047917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc49160800161237e565b60408051601f1981840301815290829052611061916123af565b6000604051808303816000865af19150503d806000811461109e576040519150601f19603f3d011682016040523d82523d6000602084013e6110a3565b606091505b50915050808060200190518101906110bb9190612261565b9150505b919050565b60405163ca669fa760e01b81523060048201526000805160206136d08339815191529063ca669fa790602401600060405180830381600087803b15801561110a57600080fd5b505af115801561111e573d6000803e3d6000fd5b505060405163c88a5e6d60e01b81523060048201526d314dc6448d9338c15b0a0000000060248201526000805160206136d0833981519152925063c88a5e6d9150604401600060405180830381600087803b15801561117c57600080fd5b505af1158015611190573d6000803e3d6000fd5b505050506111ce60405180604001604052806018815260200177021b7b73a3930b1ba1036b0ba34b1902130b630b731b29d160451b81525082611ac8565b6000670de0b6b3a76400008210156112c25760405163f28dceb360e01b81526000805160206136d08339815191529063f28dceb39061120f9060040161229d565b600060405180830381600087803b15801561122957600080fd5b505af115801561123d573d6000803e3d6000fd5b50505050600a60009054906101000a90046001600160a01b03166001600160a01b0316638119c065836040518263ffffffff1660e01b815260040160206040518083038185885af1158015611296573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906112bb9190612217565b90506113d0565b69152d02c7e14af68000008210156113d057600a60009054906101000a90046001600160a01b03166001600160a01b0316638119c065836040518263ffffffff1660e01b815260040160206040518083038185885af1158015611329573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061134e9190612217565b6040516370a0823160e01b81523060048201529091506113d090829073b0897686c545045afc77cf20ec7a532e3120e0f1906370a08231906024015b602060405180830381865afa1580156113a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113cb9190612217565b6119e9565b69152d02c7e14af6800000821115610989577f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b031663f48448146040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561144057600080fd5b505af1158015611454573d6000803e3d6000fd5b50505050600a60009054906101000a90046001600160a01b03166001600160a01b0316638119c065836040518263ffffffff1660e01b815260040160206040518083038185885af11580156114ad573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906114d29190612217565b505050565b60405163ca669fa760e01b81523060048201526000805160206136d08339815191529063ca669fa790602401600060405180830381600087803b15801561151d57600080fd5b505af1158015611531573d6000803e3d6000fd5b505060405163c88a5e6d60e01b81523060048201526c0c9f2c9cd04674edea4000000060248201526000805160206136d0833981519152925063c88a5e6d9150604401600060405180830381600087803b15801561158e57600080fd5b505af11580156115a2573d6000803e3d6000fd5b505050506115e060405180604001604052806018815260200177021b7b73a3930b1ba1036b0ba34b1902130b630b731b29d160451b81525047611ac8565b60405163f28dceb360e01b81526000805160206136d08339815191529063f28dceb39061160f9060040161229d565b600060405180830381600087803b15801561162957600080fd5b505af115801561163d573d6000803e3d6000fd5b505050506000600a60009054906101000a90046001600160a01b03166001600160a01b0316638119c06560016040518263ffffffff1660e01b815260040160206040518083038185885af1158015611699573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906116be9190612217565b9050600a60009054906101000a90046001600160a01b03166001600160a01b0316638119c065690878678326eac90000006040518263ffffffff1660e01b815260040160206040518083038185885af115801561171f573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906117449190612217565b905061177160405180604001604052806009815260200168105b5bdd5b9d13dd5d60ba1b81525082611ac8565b6117926040518060600160405280602f8152602001613787602f9139611db3565b6117cc60405180604001604052806018815260200177021b7b73a3930b1ba1036b0ba34b1902130b630b731b29d160451b81525047611ac8565b604080518082018252601a81527f436f6e7472616374203637374c696e6b2042616c616e63653a20000000000000602082015290516370a0823160e01b815230600482015261183a919073b0897686c545045afc77cf20ec7a532e3120e0f1906370a082319060240161069e565b6040516370a0823160e01b815230600482015261187790829073b0897686c545045afc77cf20ec7a532e3120e0f1906370a082319060240161138a565b604080518082018252601a81527f436f6e7472616374203637374c696e6b2042616c616e63653a20000000000000602082015290516370a0823160e01b8152306004820152610fa0919073b0897686c545045afc77cf20ec7a532e3120e0f1906370a082319060240161069e565b806001600160a01b0316826001600160a01b031614610989577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f5060405161196b9060208082526025908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b616464604082015264726573735d60d81b606082015260800190565b60405180910390a17f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f816040516119a291906123cb565b60405180910390a17f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f826040516119d9919061240f565b60405180910390a1610989611df6565b808214610989577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051611a5a9060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a881604051611a919190612439565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a8826040516119d99190612471565b6109898282604051602401611ade9291906124c7565b60408051601f198184030181529190526020810180516001600160e01b03166309710a9d60e41b179052611ef6565b6000611b2f730d500b1d8e8ef31e21c99d1db9a6444d3adf1270333085611f17565b600854611b5b90730d500b1d8e8ef31e21c99d1db9a6444d3adf1270906001600160a01b031684612021565b6000670de0b6b3a764000083611b6f61034a565b611b799190612200565b611b8391906121de565b905060006064611b94836005612200565b611b9e91906121de565b611ba8908361228a565b6040805161010081018252730d500b1d8e8ef31e21c99d1db9a6444d3adf127081527353e0bca35ec356bd5dddfebbd1fc0fd03fabad3960208201908152610bb88284019081523360608401908152426080850190815260a085018b815260c08601888152600060e08801908152600854985163414bf38960e01b815288516001600160a01b039081166004830152975188166024820152955162ffffff166044870152935186166064860152915160848501525160a48401525160c483015251821660e4820152939450909291169063414bf38990610104016020604051808303816000875af1158015611ca1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cc59190612217565b95945050505050565b6114d2838383604051602401611ce6939291906124e9565b60408051601f198184030181529190526020810180516001600160e01b031663a3f5c73960e01b179052611ef6565b81610989577f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf358381604051611d49919061251e565b60405180910390a161098982612121565b600260095403611dac5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610727565b6002600955565b610fa081604051602401611dc7919061254d565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b179052611ef6565b6000805160206136d08339815191523b15611ee557604080516000805160206136d0833981519152602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f1981840301815290829052611e84929160200161237e565b60408051601f1981840301815290829052611e9e916123af565b6000604051808303816000865af19150503d8060008114611edb576040519150601f19603f3d011682016040523d82523d6000602084013e611ee0565b606091505b505050505b6007805461ff001916610100179055565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180516001600160e01b03166323b872dd60e01b1790529151600092839290881691611f7b91906123af565b6000604051808303816000865af19150503d8060008114611fb8576040519150601f19603f3d011682016040523d82523d6000602084013e611fbd565b606091505b5091509150818015611fe7575080511580611fe7575080806020019051810190611fe79190612261565b6120195760405162461bcd60e51b815260206004820152600360248201526229aa2360e91b6044820152606401610727565b505050505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663095ea7b360e01b179052915160009283929087169161207d91906123af565b6000604051808303816000865af19150503d80600081146120ba576040519150601f19603f3d011682016040523d82523d6000602084013e6120bf565b606091505b50915091508180156120e95750805115806120e95750808060200190518101906120e99190612261565b61211a5760405162461bcd60e51b8152602060048201526002602482015261534160f01b6044820152606401610727565b5050505050565b80610fa0577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506040516121859060208082526017908201527f4572726f723a20417373657274696f6e204661696c6564000000000000000000604082015260600190565b60405180910390a1610fa0611df6565b610f208061256183390190565b6102278061348183390190565b6000602082840312156121c157600080fd5b5035919050565b634e487b7160e01b600052601160045260246000fd5b6000826121fb57634e487b7160e01b600052601260045260246000fd5b500490565b8082028115828204841417610820576108206121c8565b60006020828403121561222957600080fd5b5051919050565b602081526000610820602083016011815270119d5b98dd1a5bdb88191a5cd8589b1959607a1b602082015260400190565b60006020828403121561227357600080fd5b8151801515811461228357600080fd5b9392505050565b81810381811115610820576108206121c8565b60208152600061082060208301602d81527f4d73672e76616c75652068617320746f20626520686967686572207468616e2060208201526c312065746820286d617469632960981b604082015260600190565b805169ffffffffffffffffffff811681146110bf57600080fd5b600080600080600060a0868803121561232257600080fd5b61232b866122f0565b945060208601519350604086015192506060860151915061234e608087016122f0565b90509295509295909350565b60005b8381101561237557818101518382015260200161235d565b50506000910152565b6001600160e01b03198316815281516000906123a181600485016020870161235a565b919091016004019392505050565b600082516123c181846020870161235a565b9190910192915050565b6040815260006123f560408301600a8152690808115e1c1958dd195960b21b602082015260400190565b6001600160a01b0393909316602092909201919091525090565b6040815260006123f560408301600a815269080808081058dd1d585b60b21b602082015260400190565b60408152600061246360408301600a8152690808115e1c1958dd195960b21b602082015260400190565b905082602083015292915050565b60408152600061246360408301600a815269080808081058dd1d585b60b21b602082015260400190565b600081518084526124b381602086016020860161235a565b601f01601f19169290920160200192915050565b6040815260006124da604083018561249b565b90508260208301529392505050565b6060815260006124fc606083018661249b565b8460208401528281036040840152612514818561249b565b9695505050505050565b60408152600560408201526422b93937b960d91b6060820152608060208201526000612283608083018461249b565b602081526000612283602083018461249b56fe60c0604052600180546001600160a01b03191673e592427a0aece92de3edee1f18e0157c0586156417905534801561003657600080fd5b50600080546001600160a01b031916735787befdc0ecd210dfa948264631cd53e68f780217905560016002553060a05273aa1dc356dc4b18f30c347798fd5379f3d77abc5b60805260805160a051610e6f6100b16000396000818161015701526104e60152600081816101b301526106870152610e6f6000f3fe6080604052600436106100915760003560e01c8063c31c9c0711610059578063c31c9c071461010d578063e224ea0c14610145578063ec75ba4a14610179578063f009451e146101a1578063f2b1904f146101d557600080fd5b8063073485b714610096578063089fe6aa146100be5780632f065a2b146100e85780638119c065146100f05780638e15f473146100f8575b600080fd5b3480156100a257600080fd5b506100ab6101fd565b6040519081526020015b60405180910390f35b3480156100ca57600080fd5b506100d4610bb881565b60405162ffffff90911681526020016100b5565b6100ab61023c565b6100ab61037c565b34801561010457600080fd5b506100ab610822565b34801561011957600080fd5b5060015461012d906001600160a01b031681565b6040516001600160a01b0390911681526020016100b5565b34801561015157600080fd5b5061012d7f000000000000000000000000000000000000000000000000000000000000000081565b34801561018557600080fd5b5061012d73b0897686c545045afc77cf20ec7a532e3120e0f181565b3480156101ad57600080fd5b5061012d7f000000000000000000000000000000000000000000000000000000000000000081565b3480156101e157600080fd5b5061012d73aa1dc356dc4b18f30c347798fd5379f3d77abc5b81565b60006402540be40061020d610822565b6102179190610c90565b61022990670de0b6b3a7640000610c90565b610237906305f5e100610cb2565b905090565b60003330146102865760405162461bcd60e51b8152602060048201526011602482015270119d5b98dd1a5bdb88191a5cd8589b1959607a1b60448201526064015b60405180910390fd5b730d500b1d8e8ef31e21c99d1db9a6444d3adf12706001600160a01b031663d0e30db0346040518263ffffffff1660e01b81526004016000604051808303818588803b1580156102d557600080fd5b505af11580156102e9573d6000803e3d6000fd5b505060405163a9059cbb60e01b8152336004820152346024820152730d500b1d8e8ef31e21c99d1db9a6444d3adf1270935063a9059cbb925060440190506020604051808303816000875af1158015610346573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061036a9190610cc9565b5060006103763461089b565b92915050565b6000610386610a19565b670de0b6b3a76400003410156103f45760405162461bcd60e51b815260206004820152602d60248201527f4d73672e76616c75652068617320746f20626520686967686572207468616e2060448201526c312065746820286d617469632960981b606482015260840161027d565b69152d02c7e14af680000034106104665760405162461bcd60e51b815260206004820152603060248201527f4d73672e76616c75652068617320746f206265206c657373207468616e20313060448201526f303030302065746820286d617469632960801b606482015260840161027d565b60405163095ea7b360e01b8152306004820152346024820152730d500b1d8e8ef31e21c99d1db9a6444d3adf12709063095ea7b3906044016020604051808303816000875af11580156104bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104e19190610cc9565b5060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316632f065a2b346040518263ffffffff1660e01b815260040160206040518083038185885af1158015610544573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906105699190610cf2565b9050600081116105ac5760405162461bcd60e51b815260206004820152600e60248201526d0537761702072657475726e7320360941b604482015260640161027d565b60405163095ea7b360e01b815273aa1dc356dc4b18f30c347798fd5379f3d77abc5b6004820152602481018290527353e0bca35ec356bd5dddfebbd1fc0fd03fabad399063095ea7b3906044016020604051808303816000875af1158015610618573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061063c9190610cc9565b50604051632b7f092360e01b8152600481018290527353e0bca35ec356bd5dddfebbd1fc0fd03fabad39602482015273b0897686c545045afc77cf20ec7a532e3120e0f160448201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632b7f092390606401600060405180830381600087803b1580156106d357600080fd5b505af11580156106e7573d6000803e3d6000fd5b50506040516370a0823160e01b815230600482015273b0897686c545045afc77cf20ec7a532e3120e0f1925063a9059cbb9150339083906370a0823190602401602060405180830381865afa158015610744573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107689190610cf2565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af11580156107b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107d79190610cc9565b50604080513481526020810183905233917f68c14902a77c0b779e8d12c5eadac21e74962f4e4efaa8a01582d13b3945ae7f910160405180910390a2905061081f6001600255565b90565b6000805460408051633fabe5a360e21b8152905183926001600160a01b03169163feaf968c9160048083019260a09291908290030181865afa15801561086c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108909190610d2a565b509195945050505050565b60006108bd730d500b1d8e8ef31e21c99d1db9a6444d3adf1270333085610a70565b6001546108e990730d500b1d8e8ef31e21c99d1db9a6444d3adf1270906001600160a01b031684610b7a565b6000670de0b6b3a7640000836108fd6101fd565b6109079190610cb2565b6109119190610c90565b905060006064610922836005610cb2565b61092c9190610c90565b6109369083610d7a565b6040805161010081018252730d500b1d8e8ef31e21c99d1db9a6444d3adf127081527353e0bca35ec356bd5dddfebbd1fc0fd03fabad396020820152610bb88183015233606082015242608082015260a0810187905260c08101839052600060e0820152600154915163414bf38960e01b8152929350916001600160a01b039091169063414bf389906109cd908490600401610d8d565b6020604051808303816000875af11580156109ec573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a109190610cf2565b95945050505050565b6002805403610a6a5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161027d565b60028055565b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180516001600160e01b03166323b872dd60e01b1790529151600092839290881691610ad49190610e0a565b6000604051808303816000865af19150503d8060008114610b11576040519150601f19603f3d011682016040523d82523d6000602084013e610b16565b606091505b5091509150818015610b40575080511580610b40575080806020019051810190610b409190610cc9565b610b725760405162461bcd60e51b815260206004820152600360248201526229aa2360e91b604482015260640161027d565b505050505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663095ea7b360e01b1790529151600092839290871691610bd69190610e0a565b6000604051808303816000865af19150503d8060008114610c13576040519150601f19603f3d011682016040523d82523d6000602084013e610c18565b606091505b5091509150818015610c42575080511580610c42575080806020019051810190610c429190610cc9565b610c735760405162461bcd60e51b8152602060048201526002602482015261534160f01b604482015260640161027d565b5050505050565b634e487b7160e01b600052601160045260246000fd5b600082610cad57634e487b7160e01b600052601260045260246000fd5b500490565b808202811582820484141761037657610376610c7a565b600060208284031215610cdb57600080fd5b81518015158114610ceb57600080fd5b9392505050565b600060208284031215610d0457600080fd5b5051919050565b805169ffffffffffffffffffff81168114610d2557600080fd5b919050565b600080600080600060a08688031215610d4257600080fd5b610d4b86610d0b565b9450602086015193506040860151925060608601519150610d6e60808701610d0b565b90509295509295909350565b8181038181111561037657610376610c7a565b60006101008201905060018060a01b0380845116835280602085015116602084015262ffffff6040850151166040840152806060850151166060840152506080830151608083015260a083015160a083015260c083015160c083015260e0830151610e0360e08401826001600160a01b03169052565b5092915050565b6000825160005b81811015610e2b5760208186018101518583015201610e11565b50600092019182525091905056fea2646970667358221220e50de90acfcab82fdd0870e5b000242da86825246a4ceaec41dbe0774e5c275c64736f6c6343000811003360a060405234801561001057600080fd5b5060405161022738038061022783398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b608051610197610090600039600081816040015260a501526101976000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806330688ab81461003b578063b5682a491461007f575b600080fd5b6100627f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b61009261008d36600461012f565b6100a0565b604051908152602001610076565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638119c065846040518263ffffffff1660e01b815260040160206040518083038185885af1158015610103573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906101289190610148565b9392505050565b60006020828403121561014157600080fd5b5035919050565b60006020828403121561015a57600080fd5b505191905056fea2646970667358221220bb12eda1e44c8d490c12d4684b7a943ddced2b0b408033e40cf536caebff5cd864736f6c63430008110033436f6e73756d65724578616d706c65207374617274696e67206d617469632062616c616e63653a200000000000000000000000007109709ecfa91a80626ff3989d68f67f5b1dd12d436f6e73756d65724578616d706c652066696e616c206d617469632062616c616e63653a206d696e696d756d20707269636520746f206e6f742072657665727420737761703a20436f6e73756d65724578616d706c652066696e616c206c696e6b2062616c616e63653a20636861696e6c696e6b20707269636520617070726f78696d6174696f6e207065722031653138207765693a204f70657261746573207377617028292066756e6374696f6e206f6e20737761704d61746963466f724c696e6b363737a2646970667358221220c4548042ddca1a6ca2cb63507ca5de75750a05f278c1490d21fc2061508bf5a664736f6c63430008110033",
    "sourceMap": "158:3869:22:-:0;;;1572:26:0;;;-1:-1:-1;;1572:26:0;1594:4;1572:26;;;973:88:21;;;-1:-1:-1;;;;;;973:88:21;1018:42;973:88;;;158:3869:22;;;;;;;;;-1:-1:-1;1768:9:21;:101;;-1:-1:-1;;;;;;1768:101:21;;;;;-1:-1:-1;1821:7:14;:22;1488:4:20;1444:50;;;;1188:42;1505:36;;;;1188:42;158:3869:22;;-1:-1:-1;158:3869:22;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "158:3869:22:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2193:136;;;;;;;;;;;;;:::i;:::-;;;160:25:23;;;148:2;133:18;2193:136:22;;;;;;;;1493:37:21;;;;;;;;;;;;1526:4;1493:37;;;;;370:8:23;358:21;;;340:40;;328:2;313:18;1493:37:21;196:190:23;320:529:22;;;;;;;;;;;;;:::i;:::-;;854:443;;;;;;;;;;;;;:::i;2235:332:21:-;;;:::i;2339:510:22:-;;;;;;;;;;;;;:::i;1863:1351:20:-;;;:::i;4890:209:21:-;;;;;;;;;;;;;:::i;3804:220:22:-;;;;;;;;;;;;;:::i;1819:584:0:-;;;;;;;;;;;;;:::i;:::-;;;736:14:23;;729:22;711:41;;699:2;684:18;1819:584:0;571:187:23;973:88:21;;;;;;;;;;-1:-1:-1;973:88:21;;;;-1:-1:-1;;;;;973:88:21;;;;;;-1:-1:-1;;;;;948:32:23;;;930:51;;918:2;903:18;973:88:21;763:224:23;2916:877:22;;;;;;;;;;-1:-1:-1;2916:877:22;;;;;:::i;:::-;;:::i;1040:50:20:-;;;;;;;;;;;;;;;1239:88;;;;;;;;;;;;1285:42;1239:88;;1000:33;;;;;;;;;;;;;;;1142:88;;;;;;;;;;;;1188:42;1142:88;;1303:878:22;;;;;;;;;;;;;:::i;1572:26:0:-;;;;;;;;;;-1:-1:-1;1572:26:0;;;;;;;;2193:136:22;2248:7;2309:4;2291:16;:14;:16::i;:::-;2283:30;;;;:::i;:::-;2275:39;;:4;:39;:::i;:::-;2274:47;;2318:3;2274:47;:::i;:::-;2266:56;;2193:136;:::o;320:529::-;376:24;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;354:19:22;:46;;-1:-1:-1;;;;;;354:46:22;-1:-1:-1;;;;;354:46:22;;;;;;;;;421:50;;;;;:::i;:::-;-1:-1:-1;;;;;948:32:23;;;930:51;;918:2;903:18;421:50:22;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;410:8:22;:61;;-1:-1:-1;;;;;;410:61:22;-1:-1:-1;;;;;410:61:22;;;;;;;;;;481:79;1188:42:20;;481:8:22;:79::i;:::-;587:9;;570:72;;587:9;;;-1:-1:-1;;;;;587:9:22;599:42;570:8;:72::i;:::-;652:74;1285:42:20;683::22;652:8;:74::i;:::-;753:10;;736:73;;-1:-1:-1;;;;;753:10:22;766:42;736:8;:73::i;:::-;819:23;1526:4:21;;819:8:22;:23::i;:::-;320:529::o;854:443::-;923:8;;906:27;;-1:-1:-1;;;906:27:22;;-1:-1:-1;;;;;923:8:22;;;906:27;;;930:51:23;-1:-1:-1;;;;;;;;;;;906:8:22;;;903:18:23;;906:27:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;959:8:22;;943:32;;-1:-1:-1;;;943:32:22;;-1:-1:-1;;;;;959:8:22;;;943:32;;;2580:51:23;970:4:22;2647:18:23;;;2640:34;-1:-1:-1;;;;;;;;;;;943:7:22;-1:-1:-1;943:7:22;;-1:-1:-1;2553:18:23;;943:32:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;985:8:22;;:25;;-1:-1:-1;;;985:25:22;;1003:6;985:25;;;160::23;-1:-1:-1;;;;;985:8:22;;;;-1:-1:-1;985:17:22;;-1:-1:-1;133:18:23;;985:25:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1020:78;;;;;;;;;;;;;;;;;;1076:21;1020:11;:78::i;:::-;1108:97;;;;;;;;;;;;;;;;;;1160:44;;-1:-1:-1;;;1160:44:22;;1198:4;1160:44;;;930:51:23;1227:42:21;;1160:29:22;;903:18:23;;1160:44:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1108:11;:97::i;:::-;1215:75;;;;;;;;;;;;;;;;;;1268:21;1215:11;:75::i;2235:332:21:-;2284:7;2311:10;2331:4;2311:25;2303:55;;;;-1:-1:-1;;;2303:55:21;;;;;;;:::i;:::-;;;;;;;;;1384:42;-1:-1:-1;;;;;2369:23:21;;2400:9;2369:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2423:47:21;;-1:-1:-1;;;2423:47:21;;2448:10;2423:47;;;2580:51:23;2460:9:21;2647:18:23;;;2640:34;1384:42:21;;-1:-1:-1;2423:24:21;;-1:-1:-1;2553:18:23;;;-1:-1:-1;2423:47:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2481:17;2501:31;2522:9;2501:20;:31::i;:::-;2481:51;2235:332;-1:-1:-1;;2235:332:21:o;2339:510:22:-;2387:13;2411:16;:14;:16::i;:::-;2387:41;;2438:53;;;;;;;;;;;;;;-1:-1:-1;;;2438:53:22;;;2464:5;2438:53;;;;;;;;;;;;;-1:-1:-1;;;2438:53:22;;;:11;:53::i;:::-;2501:42;2520:1;2512:5;:9;2501:42;;;;;;;;;;;;;-1:-1:-1;;;2501:42:22;;;:10;:42::i;:::-;2553:19;2585:10;2591:4;2585:5;:10;:::i;:::-;2577:19;;:4;:19;:::i;:::-;2576:27;;2600:3;2576:27;:::i;:::-;2553:51;;2614:72;;;;;;;;;;;;;;;;;;2673:11;2614;:72::i;:::-;2696:87;;;;;;;;;;;;;;;;;;2762:17;2776:3;2763:11;2762:17;:::i;:::-;2761:21;;2781:1;2761:21;:::i;:::-;2747:35;;:11;:35;:::i;2696:87::-;2793:48;;;;;;;;;-1:-1:-1;2793:48:22;;;;2836:4;2810:22;2811:11;2827:4;2810:22;:::i;:::-;2809:31;;;;:::i;2793:48::-;2377:472;;2339:510::o;1863:1351:20:-;1918:7;2261:21:14;:19;:21::i;:::-;1958:4:20::1;1945:9;:17;;1937:75;;;;-1:-1:-1::0;;;1937:75:20::1;;;;;;;:::i;:::-;2043:4;2031:9;:16;2023:77;;;::::0;-1:-1:-1;;;2023:77:20;;4949:2:23;2023:77:20::1;::::0;::::1;4931:21:23::0;4988:2;4968:18;;;4961:30;5027:34;5007:18;;;5000:62;-1:-1:-1;;;5078:18:23;;;5071:46;5134:19;;2023:77:20::1;4747:412:23::0;2023:77:20::1;2207:48;::::0;-1:-1:-1;;;2207:48:20;;2238:4:::1;2207:48;::::0;::::1;2580:51:23::0;2245:9:20::1;2647:18:23::0;;;2640:34;1384:42:21::1;::::0;2207:22:20::1;::::0;2553:18:23;;2207:48:20::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2336:21;2361:13;-1:-1:-1::0;;;;;2361:25:20::1;;2394:9;2361:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2336:70;;2535:1;2519:13;:17;2511:44;;;::::0;-1:-1:-1;;;2511:44:20;;5366:2:23;2511:44:20::1;::::0;::::1;5348:21:23::0;5405:2;5385:18;;;5378:30;-1:-1:-1;;;5424:18:23;;;5417:44;5478:18;;2511:44:20::1;5164:338:23::0;2511:44:20::1;2652:61;::::0;-1:-1:-1;;;2652:61:20;;1188:42:::1;2652:61;::::0;::::1;2580:51:23::0;2647:18;;;2640:34;;;1308:42:21::1;::::0;2652:28:20::1;::::0;2553:18:23;;2652:61:20::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;2825:54:20::1;::::0;-1:-1:-1;;;2825:54:20;;::::1;::::0;::::1;5709:25:23::0;;;1308:42:21::1;5788:18:23::0;;;5781:43;1285:42:20::1;5840:18:23::0;;;5833:43;2825:7:20::1;-1:-1:-1::0;;;;;2825:12:20::1;::::0;::::1;::::0;5682:18:23;;2825:54:20::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;3024:44:20::1;::::0;-1:-1:-1;;;3024:44:20;;3062:4:::1;3024:44;::::0;::::1;930:51:23::0;1285:42:20::1;::::0;-1:-1:-1;2983:28:20::1;::::0;-1:-1:-1;3012:10:20::1;::::0;1285:42;;3024:29:::1;::::0;903:18:23;;3024:44:20::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2983:86;::::0;-1:-1:-1;;;;;;2983:86:20::1;::::0;;;;;;-1:-1:-1;;;;;2598:32:23;;;2983:86:20::1;::::0;::::1;2580:51:23::0;2647:18;;;2640:34;2553:18;;2983:86:20::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;3124:51:20::1;::::0;;3150:9:::1;6061:25:23::0;;6117:2;6102:18;;6095:34;;;3138:10:20::1;::::0;3124:51:::1;::::0;6034:18:23;3124:51:20::1;;;;;;;3193:13:::0;-1:-1:-1;2303:20:14;1716:1;2809:7;:22;2629:209;2303:20;1863:1351:20;:::o;4890:209:21:-;4937:3;4983:9;5037;;;;;;;;;-1:-1:-1;;;;;5037:9:21;-1:-1:-1;;;;;5037:25:21;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;4953:111:21;;4890:209;-1:-1:-1;;;;;4890:209:21:o;3804:220:22:-;3889:24;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3867:19:22;:46;;-1:-1:-1;;;;;;3867:46:22;-1:-1:-1;;;;;3867:46:22;;;;;;;;;;3923:36;;-1:-1:-1;;;3923:36:22;;-1:-1:-1;;;;;;;;;;;3923:15:22;;;:36;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3969:19;;;;;;;;;-1:-1:-1;;;;;3969:19:22;-1:-1:-1;;;;;3969:31:22;;4008:6;3969:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3804:220::o;1819:584:0:-;1873:7;;1853:4;;1873:7;;;;;1869:528;;;-1:-1:-1;1903:7:0;;;;;;;;1819:584::o;1869:528::-;1941:17;-1:-1:-1;;;;;;;;;;;2978:55:0;3059:16;1980:374;;2196:43;;;-1:-1:-1;;;;;;;;;;;2196:43:0;;;2580:51:23;;;-1:-1:-1;;;2647:18:23;;;2640:34;2196:43:0;;;;;;;;;2553:18:23;;;2196:43:0;;;-1:-1:-1;;1671:64:0;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:0;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:0:o;2916:877:22:-;2984:23;;-1:-1:-1;;;2984:23:22;;3001:4;2984:23;;;930:51:23;-1:-1:-1;;;;;;;;;;;2984:8:22;;;903:18:23;;2984:23:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3017:28:22;;-1:-1:-1;;;3017:28:22;;3033:4;3017:28;;;2580:51:23;3040:4:22;2647:18:23;;;2640:34;-1:-1:-1;;;;;;;;;;;3017:7:22;-1:-1:-1;3017:7:22;;-1:-1:-1;2553:18:23;;3017:28:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3055:51;;;;;;;;;;;;;;-1:-1:-1;;;3055:51:22;;;3095:10;3055:11;:51::i;:::-;3116:17;3160:4;3147:10;:17;3143:420;;;3180:64;;-1:-1:-1;;;3180:64:22;;-1:-1:-1;;;;;;;;;;;3180:15:22;;;:64;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3271:19;;;;;;;;;-1:-1:-1;;;;;3271:19:22;-1:-1:-1;;;;;3271:24:22;;3303:10;3271:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3259:57;;3143:420;;;3371:4;3357:10;:18;3353:210;;;3402:19;;;;;;;;;-1:-1:-1;;;;;3402:19:22;-1:-1:-1;;;;;3402:24:22;;3434:10;3402:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3494:44;;-1:-1:-1;;;3494:44:22;;3532:4;3494:44;;;930:51:23;3390:57:22;;-1:-1:-1;3474:65:22;;3390:57;;1227:42:21;;3494:29:22;;903:18:23;;3494:44:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3474:8;:65::i;:::-;3581:4;3568:10;:17;3564:222;;;284:28:1;276:37;;-1:-1:-1;;;;;3687:15:22;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3730:19;;;;;;;;;-1:-1:-1;;;;;3730:19:22;-1:-1:-1;;;;;3730:24:22;;3762:10;3730:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;2916:877:22:o;1303:878::-;1346:23;;-1:-1:-1;;;1346:23:22;;1363:4;1346:23;;;930:51:23;-1:-1:-1;;;;;;;;;;;1346:8:22;;;903:18:23;;1346:23:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1379:28:22;;-1:-1:-1;;;1379:28:22;;1395:4;1379:28;;;2580:51:23;1402:4:22;2647:18:23;;;2640:34;-1:-1:-1;;;;;;;;;;;1379:7:22;-1:-1:-1;1379:7:22;;-1:-1:-1;2553:18:23;;1379:28:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1417:62;;;;;;;;;;;;;;-1:-1:-1;;;1417:62:22;;;1457:21;1417:11;:62::i;:::-;1489:64;;-1:-1:-1;;;1489:64:22;;-1:-1:-1;;;;;;;;;;;1489:15:22;;;:64;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1563:17;1583:19;;;;;;;;;-1:-1:-1;;;;;1583:19:22;-1:-1:-1;;;;;1583:24:22;;1615:1;1583:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1563:56;;1652:19;;;;;;;;;-1:-1:-1;;;;;1652:19:22;-1:-1:-1;;;;;1652:24:22;;1683:8;1652:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1640:54;;1704:35;;;;;;;;;;;;;;-1:-1:-1;;;1704:35:22;;;1729:9;1704:11;:35::i;:::-;1749:62;;;;;;;;;;;;;;;;;;:11;:62::i;:::-;1821;;;;;;;;;;;;;;-1:-1:-1;;;1821:62:22;;;1861:21;1821:11;:62::i;:::-;1893:87;;;;;;;;;;;;;;;;1935:44;;-1:-1:-1;;;1935:44:22;;1973:4;1935:44;;;930:51:23;1893:87:22;;;1227:42:21;;1935:29:22;;903:18:23;;1935:44:22;763:224:23;1893:87:22;2010:44;;-1:-1:-1;;;2010:44:22;;2048:4;2010:44;;;930:51:23;1990:65:22;;1999:9;;1227:42:21;;2010:29:22;;903:18:23;;2010:44:22;763:224:23;1990:65:22;2073:87;;;;;;;;;;;;;;;;2115:44;;-1:-1:-1;;;2115:44:22;;2153:4;2115:44;;;930:51:23;2073:87:22;;;1227:42:21;;2115:29:22;;903:18:23;;2115:44:22;763:224:23;3615:277:0;3683:1;-1:-1:-1;;;;;3678:6:0;:1;-1:-1:-1;;;;;3678:6:0;;3674:212;;3705:44;;;;;9418:2:23;9400:21;;;9457:2;9437:18;;;9430:30;9496:34;9491:2;9476:18;;9469:62;-1:-1:-1;;;9562:2:23;9547:18;;9540:35;9607:3;9592:19;;9216:401;3705:44:0;;;;;;;;3768:34;3800:1;3768:34;;;;;;:::i;:::-;;;;;;;;3821;3853:1;3821:34;;;;;;:::i;:::-;;;;;;;;3869:6;:4;:6::i;5202:262::-;5264:1;5259;:6;5255:203;;5286:41;;;;;10910:2:23;10892:21;;;10949:2;10929:18;;;10922:30;10988:34;10983:2;10968:18;;10961:62;-1:-1:-1;;;11054:2:23;11039:18;;11032:32;11096:3;11081:19;;10708:398;5286:41:0;;;;;;;;5346:31;5375:1;5346:31;;;;;;:::i;:::-;;;;;;;;5396;5425:1;5396:31;;;;;;:::i;6548:139:11:-;6612:68;6672:2;6676;6628:51;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;6628:51:11;;;;;;;;;;;;;;-1:-1:-1;;;;;6628:51:11;-1:-1:-1;;;6628:51:11;;;6612:15;:68::i;3088:1491:21:-;3154:17;3306:76;1384:42;3346:10;3366:4;3373:8;3306:31;:76::i;:::-;3486:10;;3443:65;;1384:42;;-1:-1:-1;;;;;3486:10:21;3499:8;3443:26;:65::i;:::-;3595:14;3649:4;3637:8;3614:19;:17;:19::i;:::-;3613:32;;;;:::i;:::-;3612:41;;;;:::i;:::-;3595:58;-1:-1:-1;3755:14:21;3797:3;3785:10;3595:58;3794:1;3785:10;:::i;:::-;3784:16;;;;:::i;:::-;3774:27;;:6;:27;:::i;:::-;3964:486;;;;;;;;1384:42;3964:486;;1308:42;3964:486;;;;;;1526:4;3964:486;;;;;;4135:10;3964:486;;;;;;4174:15;3964:486;;;;;;;;;;;;;;;;;;-1:-1:-1;3964:486:21;;;;;;4536:10;;:35;;-1:-1:-1;;;4536:35:21;;12678:13:23;;-1:-1:-1;;;;;12674:22:23;;;4536:35:21;;;12656:41:23;12739:24;;12735:33;;12713:20;;;12706:63;12811:24;;12837:8;12807:39;12785:20;;;12778:69;12889:24;;12885:33;;12863:20;;;12856:63;12957:24;;12935:20;;;12928:54;13020:24;12998:20;;;12991:54;13083:24;13061:20;;;13054:54;13150:24;13146:33;;13124:20;;;13117:63;3964:486:21;;-1:-1:-1;3964:486:21;;4536:10;;;:27;;12590:19:23;;4536:35:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4524:47;3088:1491;-1:-1:-1;;;;;3088:1491:21:o;11006:168:11:-;11088:79;11155:2;11159;11163;11104:62;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;11104:62:11;;;;;;;;;;;;;;-1:-1:-1;;;;;11104:62:11;-1:-1:-1;;;11104:62:11;;;11088:15;:79::i;3418:191:0:-;3497:9;3492:111;;3527:30;3553:3;3527:30;;;;;;:::i;:::-;;;;;;;;3571:21;3582:9;3571:10;:21::i;2336:287:14:-;1759:1;2468:7;;:19;2460:63;;;;-1:-1:-1;;;2460:63:14;;14303:2:23;2460:63:14;;;14285:21:23;14342:2;14322:18;;;14315:30;14381:33;14361:18;;;14354:61;14432:18;;2460:63:14;14101:355:23;2460:63:14;1759:1;2598:7;:18;2336:287::o;5630:121:11:-;5685:59;5740:2;5701:42;;;;;;;;:::i;:::-;;;;-1:-1:-1;;5701:42:11;;;;;;;;;;;;;;-1:-1:-1;;;;;5701:42:11;-1:-1:-1;;;5701:42:11;;;5685:15;:59::i;2410:424:0:-;-1:-1:-1;;;;;;;;;;;2978:55:0;3059:16;2445:359;;2645:67;;;-1:-1:-1;;;;;;;;;;;2645:67:0;;;14888:51:23;;;-1:-1:-1;;;14955:18:23;;;14948:34;;;;2705:4:0;14998:18:23;;;14991:34;2482:11:0;;1671:64;2579:43;;14861:18:23;;2645:67:0;;;-1:-1:-1;;2645:67:0;;;;;;;;;;2534:196;;;2645:67;2534:196;;:::i;:::-;;;;-1:-1:-1;;2534:196:0;;;;;;;;;;2499:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2445:359:0;2813:7;:14;;-1:-1:-1;;2813:14:0;;;;;2410:424::o;181:376:11:-;275:14;;131:42;448:2;435:16;;251:21;;275:14;435:16;131:42;484:5;473:68;464:77;;401:150;;181:376;:::o;561:358:18:-;759:69;;;-1:-1:-1;;;;;15294:15:23;;;759:69:18;;;15276:34:23;15346:15;;;15326:18;;;15319:43;15378:18;;;;15371:34;;;759:69:18;;;;;;;;;;15211:18:23;;;;759:69:18;;;;;;;-1:-1:-1;;;;;759:69:18;-1:-1:-1;;;759:69:18;;;748:81;;-1:-1:-1;;;;748:10:18;;;;:81;;759:69;748:81;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;700:129;;;;847:7;:57;;;;-1:-1:-1;859:11:18;;:16;;:44;;;890:4;879:24;;;;;;;;;;;;:::i;:::-;839:73;;;;-1:-1:-1;;;839:73:18;;15618:2:23;839:73:18;;;15600:21:23;15657:1;15637:18;;;15630:29;-1:-1:-1;;;15675:18:23;;;15668:33;15718:18;;839:73:18;15416:326:23;839:73:18;690:229;;561:358;;;;:::o;1873:307::-;2032:58;;;-1:-1:-1;;;;;2598:32:23;;;2032:58:18;;;2580:51:23;2647:18;;;;2640:34;;;2032:58:18;;;;;;;;;;2553:18:23;;;;2032:58:18;;;;;;;-1:-1:-1;;;;;2032:58:18;-1:-1:-1;;;2032:58:18;;;2021:70;;-1:-1:-1;;;;2021:10:18;;;;:70;;2032:58;2021:70;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1985:106;;;;2109:7;:57;;;;-1:-1:-1;2121:11:18;;:16;;:44;;;2152:4;2141:24;;;;;;;;;;;;:::i;:::-;2101:72;;;;-1:-1:-1;;;2101:72:18;;15949:2:23;2101:72:18;;;15931:21:23;15988:1;15968:18;;;15961:29;-1:-1:-1;;;16006:18:23;;;15999:32;16048:18;;2101:72:18;15747:325:23;2101:72:18;1975:205;;1873:307;;;:::o;3255:157:0:-;3315:9;3310:96;;3345:30;;;;;16279:2:23;16261:21;;;16318:2;16298:18;;;16291:30;16357:25;16352:2;16337:18;;16330:53;16415:2;16400:18;;16077:347;3345:30:0;;;;;;;;3389:6;:4;:6::i;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;992:180:23:-;1051:6;1104:2;1092:9;1083:7;1079:23;1075:32;1072:52;;;1120:1;1117;1110:12;1072:52;-1:-1:-1;1143:23:23;;992:180;-1:-1:-1;992:180:23:o;1848:127::-;1909:10;1904:3;1900:20;1897:1;1890:31;1940:4;1937:1;1930:15;1964:4;1961:1;1954:15;1980:217;2020:1;2046;2036:132;;2090:10;2085:3;2081:20;2078:1;2071:31;2125:4;2122:1;2115:15;2153:4;2150:1;2143:15;2036:132;-1:-1:-1;2182:9:23;;1980:217::o;2202:168::-;2275:9;;;2306;;2323:15;;;2317:22;;2303:37;2293:71;;2344:18;;:::i;2897:184::-;2967:6;3020:2;3008:9;2999:7;2995:23;2991:32;2988:52;;;3036:1;3033;3026:12;2988:52;-1:-1:-1;3059:16:23;;2897:184;-1:-1:-1;2897:184:23:o;3257:277::-;3459:2;3448:9;3441:21;3422:4;3479:49;3524:2;3513:9;3509:18;3163:2;3151:15;;-1:-1:-1;;;3191:4:23;3182:14;;3175:43;3243:2;3234:12;;3086:166;3818:277;3885:6;3938:2;3926:9;3917:7;3913:23;3909:32;3906:52;;;3954:1;3951;3944:12;3906:52;3986:9;3980:16;4039:5;4032:13;4025:21;4018:5;4015:32;4005:60;;4061:1;4058;4051:12;4005:60;4084:5;3818:277;-1:-1:-1;;;3818:277:23:o;4100:128::-;4167:9;;;4188:11;;;4185:37;;;4202:18;;:::i;4465:277::-;4667:2;4656:9;4649:21;4630:4;4687:49;4732:2;4721:9;4717:18;4310:2;4298:15;;4345:34;4338:4;4329:14;;4322:58;-1:-1:-1;;;4405:2:23;4396:12;;4389:37;4451:2;4442:12;;4233:227;6140:179;6218:13;;6271:22;6260:34;;6250:45;;6240:73;;6309:1;6306;6299:12;6324:473;6427:6;6435;6443;6451;6459;6512:3;6500:9;6491:7;6487:23;6483:33;6480:53;;;6529:1;6526;6519:12;6480:53;6552:39;6581:9;6552:39;:::i;:::-;6542:49;;6631:2;6620:9;6616:18;6610:25;6600:35;;6675:2;6664:9;6660:18;6654:25;6644:35;;6719:2;6708:9;6704:18;6698:25;6688:35;;6742:49;6786:3;6775:9;6771:19;6742:49;:::i;:::-;6732:59;;6324:473;;;;;;;;:::o;7362:250::-;7447:1;7457:113;7471:6;7468:1;7465:13;7457:113;;;7547:11;;;7541:18;7528:11;;;7521:39;7493:2;7486:10;7457:113;;;-1:-1:-1;;7604:1:23;7586:16;;7579:27;7362:250::o;7617:384::-;-1:-1:-1;;;;;;7802:33:23;;7790:46;;7859:13;;7772:3;;7881:74;7859:13;7944:1;7935:11;;7928:4;7916:17;;7881:74;:::i;:::-;7975:16;;;;7993:1;7971:24;;7617:384;-1:-1:-1;;;7617:384:23:o;8006:287::-;8135:3;8173:6;8167:13;8189:66;8248:6;8243:3;8236:4;8228:6;8224:17;8189:66;:::i;:::-;8271:16;;;;;8006:287;-1:-1:-1;;8006:287:23:o;9786:374::-;10016:2;10005:9;9998:21;9979:4;10036:49;10081:2;10070:9;10066:18;9699:2;9687:15;;-1:-1:-1;;;9727:4:23;9718:14;;9711:36;9772:2;9763:12;;9622:159;10036:49;-1:-1:-1;;;;;10121:32:23;;;;10116:2;10101:18;;;;10094:60;;;;-1:-1:-1;10028:57:23;9786:374::o;10329:::-;10559:2;10548:9;10541:21;10522:4;10579:49;10624:2;10613:9;10609:18;10242:2;10230:15;;-1:-1:-1;;;10270:4:23;10261:14;;10254:36;10315:2;10306:12;;10165:159;11111:348;11341:2;11330:9;11323:21;11304:4;11361:49;11406:2;11395:9;11391:18;9699:2;9687:15;;-1:-1:-1;;;9727:4:23;9718:14;;9711:36;9772:2;9763:12;;9622:159;11361:49;11353:57;;11446:6;11441:2;11430:9;11426:18;11419:34;11111:348;;;;:::o;11464:::-;11694:2;11683:9;11676:21;11657:4;11714:49;11759:2;11748:9;11744:18;10242:2;10230:15;;-1:-1:-1;;;10270:4:23;10261:14;;10254:36;10315:2;10306:12;;10165:159;11817:271;11859:3;11897:5;11891:12;11924:6;11919:3;11912:19;11940:76;12009:6;12002:4;11997:3;11993:14;11986:4;11979:5;11975:16;11940:76;:::i;:::-;12070:2;12049:15;-1:-1:-1;;12045:29:23;12036:39;;;;12077:4;12032:50;;11817:271;-1:-1:-1;;11817:271:23:o;12093:291::-;12270:2;12259:9;12252:21;12233:4;12290:45;12331:2;12320:9;12316:18;12308:6;12290:45;:::i;:::-;12282:53;;12371:6;12366:2;12355:9;12351:18;12344:34;12093:291;;;;;:::o;13191:454::-;13416:2;13405:9;13398:21;13379:4;13442:45;13483:2;13472:9;13468:18;13460:6;13442:45;:::i;:::-;13523:6;13518:2;13507:9;13503:18;13496:34;13578:9;13570:6;13566:22;13561:2;13550:9;13546:18;13539:50;13606:33;13632:6;13624;13606:33;:::i;:::-;13598:41;13191:454;-1:-1:-1;;;;;;13191:454:23:o;13650:446::-;13900:2;13889:9;13882:21;13939:1;13934:2;13923:9;13919:18;13912:29;-1:-1:-1;;;13972:2:23;13961:9;13957:18;13950:35;14023:3;14016:4;14005:9;14001:20;13994:33;13863:4;14044:46;14085:3;14074:9;14070:19;14062:6;14044:46;:::i;14461:220::-;14610:2;14599:9;14592:21;14573:4;14630:45;14671:2;14660:9;14656:18;14648:6;14630:45;:::i",
    "linkReferences": {},
    "immutableReferences": {
      "25211": [
        {
          "start": 721,
          "length": 32
        },
        {
          "start": 3154,
          "length": 32
        }
      ],
      "25214": [
        {
          "start": 629,
          "length": 32
        },
        {
          "start": 2737,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "ChainlinkPegSwap()": "f2b1904f",
    "ERC677_Link()": "ec75ba4a",
    "IS_TEST()": "fa7626d4",
    "MaticLinkSwap()": "e224ea0c",
    "checkLinkPerMatic()": "073485b7",
    "failed()": "ba414fa6",
    "getLatestPrice()": "8e15f473",
    "pegswap()": "f009451e",
    "poolFee()": "089fe6aa",
    "setUp()": "0a9254e4",
    "swap()": "8119c065",
    "swapRouter()": "c31c9c07",
    "testConsumerExampleCall()": "1188826b",
    "testPriceConversions()": "4e49906d",
    "testSwapOutPut()": "f9f56a8d",
    "testSwapOutputWithFuzz(uint256)": "c8158759",
    "testWrapAndSwapFailFromExternalCall()": "8f987edb",
    "testcheckLinkPerMatic()": "01f415b0",
    "wrapAndSwap()": "2f065a2b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maticAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"linkAmount\",\"type\":\"uint256\"}],\"name\":\"SwapCompleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ChainlinkPegSwap\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ERC677_Link\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MaticLinkSwap\",\"outputs\":[{\"internalType\":\"contract UniV3WmaticLinkSwap\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"checkLinkPerMatic\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLatestPrice\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pegswap\",\"outputs\":[{\"internalType\":\"contract IPegSwap\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolFee\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapRouter\",\"outputs\":[{\"internalType\":\"contract ISwapRouter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testConsumerExampleCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testPriceConversions\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testSwapOutPut\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fuzzAmount\",\"type\":\"uint256\"}],\"name\":\"testSwapOutputWithFuzz\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testWrapAndSwapFailFromExternalCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testcheckLinkPerMatic\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wrapAndSwap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"swap()\":{\"details\":\"call this function with a msg.value greater than 0 to swap matic for 677Link\",\"params\":{\"\":\"(msg.value) requires to be greater than 0 and less than 1e23 (100000Eth)\"},\"returns\":{\"_0\":\"swapAmountOut of token returned from operations\"}},\"wrapAndSwap()\":{\"details\":\"this function is called by MaticLinkSwap contract to wrap matic and launch a Uni v3 single swap\",\"returns\":{\"_0\":\"amountOut the amount of token sent back after wrapping to wmatic and then swapping for bridged_Link\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"swap()\":{\"notice\":\"Swaps matic for erc677 Link in one function\"},\"wrapAndSwap()\":{\"notice\":\"Uses IWmatic interface to deposit matic for wrapped matic, finally swaps wrapped matic for bridged_Link\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/Swap.t.sol\":\"testMaticFor677LinkSwap\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@uniswap/=lib/uniswap/\",\":ds-test/=lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":std/=lib/forge-std/src/\",\":uniswap/=lib/uniswap/\"]},\"sources\":{\"lib/ds-test/src/test.sol\":{\"keccak256\":\"0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5\",\"dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr\"]},\"lib/forge-std/src/Common.sol\":{\"keccak256\":\"0x1c92c530e5f0fcd895d48829ae786d63b87b02eaa203767813ffb39651d0b9b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75e17c301cf9072de9031b82821bb655e0d718ae16dd4de42f5a1355390697fd\",\"dweb:/ipfs/Qma61YBx9XAmRoRyjLWzUz65rDmRv9ARt79c1QDrMVZeGN\"]},\"lib/forge-std/src/Components.sol\":{\"keccak256\":\"0xd3b8ba6df58174d5d650a668dfa49eeee28b2b855514b9e793e1c0b69d747149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cce2b2ca79d5ce993b91358ed3d588396295e0aba9bb923481c1ffa5058a0dcd\",\"dweb:/ipfs/QmPNymteQmLWk7SqQhNsF6Rbc3xFPY7xGb4fBKravHLXD3\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0xde2bdee8e0e530de3269da50ebba83f4f90dde817971488980b720281e3cde4d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb3f05bb06b654db43f4ce38e22aa7e2296ee00615df5329623c08c9ac030f8d\",\"dweb:/ipfs/QmdKwTpFsTiDFmc8zGwbPRu8mDs4oiKdZvzSj3WpiiGaez\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0x4f1d3f61cd32fcf27d6667d8030ea92fa35a694d40f38110429f479b357f0f1b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2557b9c5268bc65dce2c8a119444de155ad4af5f736674043368911b38dd25f0\",\"dweb:/ipfs/QmarAugdxU3EGABpjJyLShX4mNt9mrNPCHFgcHyrW8Bxhu\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x2291ee8f379552b86f34d98acb248d50442c7d4ab94aed03f1c8ddb6aea6852d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ca6ca6fe35692428b507008b24e4ec4ba0cabaf58110fd0b4456a42e0166bdc\",\"dweb:/ipfs/QmUcSeXfYMyusrWxEdPRMeWFYhf9qD6YJaZXCVo29F4eus\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0xb0da85ce6999940eba6190a26c15b9bc7aede57123891287e1b30f80333a9cf5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d287fd41de40ef992588f7a9531e66d1e9f8e4f3f194b9e721ac576d4613964a\",\"dweb:/ipfs/QmbFYYjoc8WGLKVfDe4rscYPwdGq48incbwRQNoLtcMMjn\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x216818221765c43713791708d7dc83fcd5ada81766c9d4ce54551528c191a59f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3f03d0ef065ce600e5922f3e9c92f0f54ff7c12895a250fa97d83e9ee38e7e2b\",\"dweb:/ipfs/QmX59m9mNRNEhjhEZnxbDirniesi26pnDaNzF5hPB4A3E8\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xf4442ded918d167635adc30ba3c451d45666c89b38e0eec2adaf0857b49a72f7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b4cb181bd626fe852a36f9b1cf2d79ef0fa9d2bf2cbf0ec86f33f5bf492c0b69\",\"dweb:/ipfs/QmaZKevWdZbjoTB7qtzKjP3dZhiUGymJc4Wb9qkNMewxjB\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x225cc1ec33efd35c90e78aec0792ed9751cd6217e646271172421e96e2e2cc0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c6adbd216e40ca2387835b8618c82e7153cb826023d38943bbb0c2e992644aa\",\"dweb:/ipfs/QmZeejwEkm7iH9NHih7dPbuNqivuFn27EkgJesgByzS9wD\"]},\"lib/forge-std/src/test.sol\":{\"keccak256\":\"0x2c0b297174fd07a4d375836c4aa183c2b0269b86113a6795ea0c3450561758be\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d78a4a81a9a2325b567ff9f2f96cb89080a8884883d50c4fe1dcdae46471f93e\",\"dweb:/ipfs/QmSzJ9ep7YhV4hPZPPqenDHvTWHSKKKgUKUjBadKqUdaFP\"]},\"lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x03a26b0ce85afee2c16f3232bd123286b849ca576778781cf6e8bbf51cb7570a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13a4f5cec214760f14abaedfc0a1860d80c2267386fa62dc77e8eee51ec84d71\",\"dweb:/ipfs/QmWmEKeofHqLnNEeCivhzTepo1k5xZZqzMxyyyzNBYiYBW\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"lib/uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]},\"lib/uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":{\"keccak256\":\"0x9af98b0908c96320ca6d08b22f0efca864742f6adbe5794cafe2d1d2e808b0cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://da1d1e81e5bf534f0bf2934b3193db6cb1933f91ec006d2b88e9ad10a617a2d2\",\"dweb:/ipfs/QmcPBk47QLMFWcX2y2S9eMFsJgoYWBd3R8ey55Bgmv6w6v\"]},\"src/ConsumerExample.sol\":{\"keccak256\":\"0x4b0f9457699e426e35adb20e84c18ea54d9bdc6f80bbf878a772ebe9e18840e7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5f1017246ab4258a175b65ab3f40c81b73c3995dd93f8c2038cd78afd3fe64e7\",\"dweb:/ipfs/QmRw8mPi8yWzDoYXusTS9p4m1xRrj2KjZSSLvgoitupDKg\"]},\"src/SwapMaticToLink677.sol\":{\"keccak256\":\"0x19d4d916c5a30d315d8cf916fbbeda68a9d860e7bb3ffe8d54940be7901b0624\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8a16a77dee605fd186b6fd3495ede9974a9fbcd791b27a2f6f250a11a82d36f7\",\"dweb:/ipfs/QmXHNzTPV7tDAKxzbUYNH1VG8aVvtmWoGRT9Trnjq1ojhh\"]},\"src/UniV3WmaticLinkSwap.sol\":{\"keccak256\":\"0xcd476e5f0bef3e49effa0b96dbee0477430041603e2d3007b0c172f53698cb7e\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5f1c3d80fb36bdee178a04d9a670cd532266d08908d63fee647a8249840b0a2c\",\"dweb:/ipfs/QmRxrM7vGTtrxjLT8sSTjUrBf7gRUQqk5cXXQod8rpMwAh\"]},\"test/Swap.t.sol\":{\"keccak256\":\"0x644e2fa154a188257c02367a2d76fffe5a7c2b7fbfbf022eef117975ee6465b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3bc6f12903e42aee99e9d79ad845ca6ba0a06b3a3ac229e776a1af7ef4dd1d65\",\"dweb:/ipfs/QmdgESEivEmXbxZ7xHd7BvXZbJxXxEyufZy915rs1dPSB1\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "caller",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "maticAmount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "linkAmount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SwapCompleted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ChainlinkPegSwap",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ERC677_Link",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MaticLinkSwap",
          "outputs": [
            {
              "internalType": "contract UniV3WmaticLinkSwap",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "checkLinkPerMatic",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getLatestPrice",
          "outputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "pegswap",
          "outputs": [
            {
              "internalType": "contract IPegSwap",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "poolFee",
          "outputs": [
            {
              "internalType": "uint24",
              "name": "",
              "type": "uint24"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "function",
          "name": "swap",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "swapRouter",
          "outputs": [
            {
              "internalType": "contract ISwapRouter",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testConsumerExampleCall"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testPriceConversions"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testSwapOutPut"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "fuzzAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testSwapOutputWithFuzz"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testWrapAndSwapFailFromExternalCall"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "testcheckLinkPerMatic",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "function",
          "name": "wrapAndSwap",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "swap()": {
            "details": "call this function with a msg.value greater than 0 to swap matic for 677Link",
            "params": {
              "": "(msg.value) requires to be greater than 0 and less than 1e23 (100000Eth)"
            },
            "returns": {
              "_0": "swapAmountOut of token returned from operations"
            }
          },
          "wrapAndSwap()": {
            "details": "this function is called by MaticLinkSwap contract to wrap matic and launch a Uni v3 single swap",
            "returns": {
              "_0": "amountOut the amount of token sent back after wrapping to wmatic and then swapping for bridged_Link"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "swap()": {
            "notice": "Swaps matic for erc677 Link in one function"
          },
          "wrapAndSwap()": {
            "notice": "Uses IWmatic interface to deposit matic for wrapped matic, finally swaps wrapped matic for bridged_Link"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":@uniswap/=lib/uniswap/",
        ":ds-test/=lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        ":std/=lib/forge-std/src/",
        ":uniswap/=lib/uniswap/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/Swap.t.sol": "testMaticFor677LinkSwap"
      },
      "libraries": {}
    },
    "sources": {
      "lib/ds-test/src/test.sol": {
        "keccak256": "0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54",
        "urls": [
          "bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5",
          "dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Common.sol": {
        "keccak256": "0x1c92c530e5f0fcd895d48829ae786d63b87b02eaa203767813ffb39651d0b9b4",
        "urls": [
          "bzz-raw://75e17c301cf9072de9031b82821bb655e0d718ae16dd4de42f5a1355390697fd",
          "dweb:/ipfs/Qma61YBx9XAmRoRyjLWzUz65rDmRv9ARt79c1QDrMVZeGN"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Components.sol": {
        "keccak256": "0xd3b8ba6df58174d5d650a668dfa49eeee28b2b855514b9e793e1c0b69d747149",
        "urls": [
          "bzz-raw://cce2b2ca79d5ce993b91358ed3d588396295e0aba9bb923481c1ffa5058a0dcd",
          "dweb:/ipfs/QmPNymteQmLWk7SqQhNsF6Rbc3xFPY7xGb4fBKravHLXD3"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0xde2bdee8e0e530de3269da50ebba83f4f90dde817971488980b720281e3cde4d",
        "urls": [
          "bzz-raw://cb3f05bb06b654db43f4ce38e22aa7e2296ee00615df5329623c08c9ac030f8d",
          "dweb:/ipfs/QmdKwTpFsTiDFmc8zGwbPRu8mDs4oiKdZvzSj3WpiiGaez"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0x4f1d3f61cd32fcf27d6667d8030ea92fa35a694d40f38110429f479b357f0f1b",
        "urls": [
          "bzz-raw://2557b9c5268bc65dce2c8a119444de155ad4af5f736674043368911b38dd25f0",
          "dweb:/ipfs/QmarAugdxU3EGABpjJyLShX4mNt9mrNPCHFgcHyrW8Bxhu"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x2291ee8f379552b86f34d98acb248d50442c7d4ab94aed03f1c8ddb6aea6852d",
        "urls": [
          "bzz-raw://1ca6ca6fe35692428b507008b24e4ec4ba0cabaf58110fd0b4456a42e0166bdc",
          "dweb:/ipfs/QmUcSeXfYMyusrWxEdPRMeWFYhf9qD6YJaZXCVo29F4eus"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0xb0da85ce6999940eba6190a26c15b9bc7aede57123891287e1b30f80333a9cf5",
        "urls": [
          "bzz-raw://d287fd41de40ef992588f7a9531e66d1e9f8e4f3f194b9e721ac576d4613964a",
          "dweb:/ipfs/QmbFYYjoc8WGLKVfDe4rscYPwdGq48incbwRQNoLtcMMjn"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0x216818221765c43713791708d7dc83fcd5ada81766c9d4ce54551528c191a59f",
        "urls": [
          "bzz-raw://3f03d0ef065ce600e5922f3e9c92f0f54ff7c12895a250fa97d83e9ee38e7e2b",
          "dweb:/ipfs/QmX59m9mNRNEhjhEZnxbDirniesi26pnDaNzF5hPB4A3E8"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0xf4442ded918d167635adc30ba3c451d45666c89b38e0eec2adaf0857b49a72f7",
        "urls": [
          "bzz-raw://b4cb181bd626fe852a36f9b1cf2d79ef0fa9d2bf2cbf0ec86f33f5bf492c0b69",
          "dweb:/ipfs/QmaZKevWdZbjoTB7qtzKjP3dZhiUGymJc4Wb9qkNMewxjB"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0x225cc1ec33efd35c90e78aec0792ed9751cd6217e646271172421e96e2e2cc0f",
        "urls": [
          "bzz-raw://6c6adbd216e40ca2387835b8618c82e7153cb826023d38943bbb0c2e992644aa",
          "dweb:/ipfs/QmZeejwEkm7iH9NHih7dPbuNqivuFn27EkgJesgByzS9wD"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/test.sol": {
        "keccak256": "0x2c0b297174fd07a4d375836c4aa183c2b0269b86113a6795ea0c3450561758be",
        "urls": [
          "bzz-raw://d78a4a81a9a2325b567ff9f2f96cb89080a8884883d50c4fe1dcdae46471f93e",
          "dweb:/ipfs/QmSzJ9ep7YhV4hPZPPqenDHvTWHSKKKgUKUjBadKqUdaFP"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol": {
        "keccak256": "0x03a26b0ce85afee2c16f3232bd123286b849ca576778781cf6e8bbf51cb7570a",
        "urls": [
          "bzz-raw://13a4f5cec214760f14abaedfc0a1860d80c2267386fa62dc77e8eee51ec84d71",
          "dweb:/ipfs/QmWmEKeofHqLnNEeCivhzTepo1k5xZZqzMxyyyzNBYiYBW"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "lib/uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
        "keccak256": "0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69",
        "urls": [
          "bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652",
          "dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
        "keccak256": "0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975",
        "urls": [
          "bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53",
          "dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/uniswap/v3-periphery/contracts/libraries/TransferHelper.sol": {
        "keccak256": "0x9af98b0908c96320ca6d08b22f0efca864742f6adbe5794cafe2d1d2e808b0cd",
        "urls": [
          "bzz-raw://da1d1e81e5bf534f0bf2934b3193db6cb1933f91ec006d2b88e9ad10a617a2d2",
          "dweb:/ipfs/QmcPBk47QLMFWcX2y2S9eMFsJgoYWBd3R8ey55Bgmv6w6v"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/ConsumerExample.sol": {
        "keccak256": "0x4b0f9457699e426e35adb20e84c18ea54d9bdc6f80bbf878a772ebe9e18840e7",
        "urls": [
          "bzz-raw://5f1017246ab4258a175b65ab3f40c81b73c3995dd93f8c2038cd78afd3fe64e7",
          "dweb:/ipfs/QmRw8mPi8yWzDoYXusTS9p4m1xRrj2KjZSSLvgoitupDKg"
        ],
        "license": "MIT"
      },
      "src/SwapMaticToLink677.sol": {
        "keccak256": "0x19d4d916c5a30d315d8cf916fbbeda68a9d860e7bb3ffe8d54940be7901b0624",
        "urls": [
          "bzz-raw://8a16a77dee605fd186b6fd3495ede9974a9fbcd791b27a2f6f250a11a82d36f7",
          "dweb:/ipfs/QmXHNzTPV7tDAKxzbUYNH1VG8aVvtmWoGRT9Trnjq1ojhh"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/UniV3WmaticLinkSwap.sol": {
        "keccak256": "0xcd476e5f0bef3e49effa0b96dbee0477430041603e2d3007b0c172f53698cb7e",
        "urls": [
          "bzz-raw://5f1c3d80fb36bdee178a04d9a670cd532266d08908d63fee647a8249840b0a2c",
          "dweb:/ipfs/QmRxrM7vGTtrxjLT8sSTjUrBf7gRUQqk5cXXQod8rpMwAh"
        ],
        "license": "GPL-2.0-or-later"
      },
      "test/Swap.t.sol": {
        "keccak256": "0x644e2fa154a188257c02367a2d76fffe5a7c2b7fbfbf022eef117975ee6465b3",
        "urls": [
          "bzz-raw://3bc6f12903e42aee99e9d79ad845ca6ba0a06b3a3ac229e776a1af7ef4dd1d65",
          "dweb:/ipfs/QmdgESEivEmXbxZ7xHd7BvXZbJxXxEyufZy915rs1dPSB1"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/Swap.t.sol",
    "id": 26048,
    "exportedSymbols": {
      "AggregatorV3Interface": [
        25362
      ],
      "CommonBase": [
        1841
      ],
      "ConsumerContract": [
        25179
      ],
      "DSTest": [
        1786
      ],
      "IERC20": [
        24850
      ],
      "IPegSwap": [
        25195
      ],
      "ISwapMaticToLink": [
        25143
      ],
      "ISwapRouter": [
        24964
      ],
      "IUniswapV3SwapCallback": [
        24864
      ],
      "IWMatic": [
        25348
      ],
      "ReentrancyGuard": [
        24772
      ],
      "StdAssertions": [
        2667
      ],
      "SwapMaticToLink677": [
        25337
      ],
      "Test": [
        24707
      ],
      "TestBase": [
        24702
      ],
      "TransferHelper": [
        25135
      ],
      "UniV3WmaticLinkSwap": [
        25560
      ],
      "Vm": [
        8560
      ],
      "console": [
        16624
      ],
      "console2": [
        24689
      ],
      "testMaticFor677LinkSwap": [
        26047
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:3998:22",
    "nodes": [
      {
        "id": 25562,
        "nodeType": "PragmaDirective",
        "src": "32:23:22",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".6"
        ]
      },
      {
        "id": 25563,
        "nodeType": "ImportDirective",
        "src": "57:22:22",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/test.sol",
        "file": "std/test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 26048,
        "sourceUnit": 24708,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 25564,
        "nodeType": "ImportDirective",
        "src": "80:39:22",
        "nodes": [],
        "absolutePath": "src/SwapMaticToLink677.sol",
        "file": "../src/SwapMaticToLink677.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 26048,
        "sourceUnit": 25338,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 25565,
        "nodeType": "ImportDirective",
        "src": "120:36:22",
        "nodes": [],
        "absolutePath": "src/ConsumerExample.sol",
        "file": "../src/ConsumerExample.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 26048,
        "sourceUnit": 25180,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 26047,
        "nodeType": "ContractDefinition",
        "src": "158:3869:22",
        "nodes": [
          {
            "id": 25572,
            "nodeType": "VariableDeclaration",
            "src": "229:46:22",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "swapMaticForLink677",
            "nameLocation": "256:19:22",
            "scope": 26047,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_SwapMaticToLink677_$25337",
              "typeString": "contract SwapMaticToLink677"
            },
            "typeName": {
              "id": 25571,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 25570,
                "name": "SwapMaticToLink677",
                "nameLocations": [
                  "229:18:22"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 25337,
                "src": "229:18:22"
              },
              "referencedDeclaration": 25337,
              "src": "229:18:22",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SwapMaticToLink677_$25337",
                "typeString": "contract SwapMaticToLink677"
              }
            },
            "visibility": "private"
          },
          {
            "id": 25575,
            "nodeType": "VariableDeclaration",
            "src": "281:33:22",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "consumer",
            "nameLocation": "306:8:22",
            "scope": 26047,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ConsumerContract_$25179",
              "typeString": "contract ConsumerContract"
            },
            "typeName": {
              "id": 25574,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 25573,
                "name": "ConsumerContract",
                "nameLocations": [
                  "281:16:22"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 25179,
                "src": "281:16:22"
              },
              "referencedDeclaration": 25179,
              "src": "281:16:22",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ConsumerContract_$25179",
                "typeString": "contract ConsumerContract"
              }
            },
            "visibility": "private"
          },
          {
            "id": 25634,
            "nodeType": "FunctionDefinition",
            "src": "320:529:22",
            "nodes": [],
            "body": {
              "id": 25633,
              "nodeType": "Block",
              "src": "344:505:22",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 25583,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 25578,
                      "name": "swapMaticForLink677",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25572,
                      "src": "354:19:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SwapMaticToLink677_$25337",
                        "typeString": "contract SwapMaticToLink677"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 25581,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "376:22:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_SwapMaticToLink677_$25337_$",
                          "typeString": "function () returns (contract SwapMaticToLink677)"
                        },
                        "typeName": {
                          "id": 25580,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 25579,
                            "name": "SwapMaticToLink677",
                            "nameLocations": [
                              "380:18:22"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 25337,
                            "src": "380:18:22"
                          },
                          "referencedDeclaration": 25337,
                          "src": "380:18:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SwapMaticToLink677_$25337",
                            "typeString": "contract SwapMaticToLink677"
                          }
                        }
                      },
                      "id": 25582,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "376:24:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SwapMaticToLink677_$25337",
                        "typeString": "contract SwapMaticToLink677"
                      }
                    },
                    "src": "354:46:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SwapMaticToLink677_$25337",
                      "typeString": "contract SwapMaticToLink677"
                    }
                  },
                  "id": 25584,
                  "nodeType": "ExpressionStatement",
                  "src": "354:46:22"
                },
                {
                  "expression": {
                    "id": 25594,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 25585,
                      "name": "consumer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25575,
                      "src": "410:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ConsumerContract_$25179",
                        "typeString": "contract ConsumerContract"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 25591,
                              "name": "swapMaticForLink677",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25572,
                              "src": "450:19:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_SwapMaticToLink677_$25337",
                                "typeString": "contract SwapMaticToLink677"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_SwapMaticToLink677_$25337",
                                "typeString": "contract SwapMaticToLink677"
                              }
                            ],
                            "id": 25590,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "442:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 25589,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "442:7:22",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 25592,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "442:28:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 25588,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "421:20:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_ConsumerContract_$25179_$",
                          "typeString": "function (address) returns (contract ConsumerContract)"
                        },
                        "typeName": {
                          "id": 25587,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 25586,
                            "name": "ConsumerContract",
                            "nameLocations": [
                              "425:16:22"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 25179,
                            "src": "425:16:22"
                          },
                          "referencedDeclaration": 25179,
                          "src": "425:16:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ConsumerContract_$25179",
                            "typeString": "contract ConsumerContract"
                          }
                        }
                      },
                      "id": 25593,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "421:50:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ConsumerContract_$25179",
                        "typeString": "contract ConsumerContract"
                      }
                    },
                    "src": "410:61:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ConsumerContract_$25179",
                      "typeString": "contract ConsumerContract"
                    }
                  },
                  "id": 25595,
                  "nodeType": "ExpressionStatement",
                  "src": "410:61:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 25599,
                            "name": "ChainlinkPegSwap",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25217,
                            "src": "498:16:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 25598,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "490:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 25597,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "490:7:22",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25600,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "490:25:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "307841413144433335366463344231386633304333343737393846443533373946334437374142433562",
                        "id": 25601,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "517:42:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "value": "0xAA1DC356dc4B18f30C347798FD5379F3D77ABC5b"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 25596,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 320,
                      "src": "481:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 25602,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "481:79:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25603,
                  "nodeType": "ExpressionStatement",
                  "src": "481:79:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 25607,
                            "name": "priceFeed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25365,
                            "src": "587:9:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AggregatorV3Interface_$25362",
                              "typeString": "contract AggregatorV3Interface"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AggregatorV3Interface_$25362",
                              "typeString": "contract AggregatorV3Interface"
                            }
                          ],
                          "id": 25606,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "579:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 25605,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "579:7:22",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25608,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "579:18:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "307835373837426566446330454364323130446661393438323634363331434435334536384637383032",
                        "id": 25609,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "599:42:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "value": "0x5787BefDc0ECd210Dfa948264631CD53E68F7802"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 25604,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 320,
                      "src": "570:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 25610,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "570:72:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25611,
                  "nodeType": "ExpressionStatement",
                  "src": "570:72:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 25615,
                            "name": "ERC677_Link",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25220,
                            "src": "669:11:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 25614,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "661:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 25613,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "661:7:22",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25616,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "661:20:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "307862303839373638366335343530343561466337374346323065433741353332453331323045304631",
                        "id": 25617,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "683:42:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "value": "0xb0897686c545045aFc77CF20eC7A532E3120E0F1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 25612,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 320,
                      "src": "652:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 25618,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "652:74:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25619,
                  "nodeType": "ExpressionStatement",
                  "src": "652:74:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 25623,
                            "name": "swapRouter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25371,
                            "src": "753:10:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISwapRouter_$24964",
                              "typeString": "contract ISwapRouter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ISwapRouter_$24964",
                              "typeString": "contract ISwapRouter"
                            }
                          ],
                          "id": 25622,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "745:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 25621,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "745:7:22",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25624,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "745:19:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "307845353932343237413041456365393244653345646565314631384530313537433035383631353634",
                        "id": 25625,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "766:42:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "value": "0xE592427A0AEce92De3Edee1F18E0157C05861564"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 25620,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 320,
                      "src": "736:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 25626,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "736:73:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25627,
                  "nodeType": "ExpressionStatement",
                  "src": "736:73:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25629,
                        "name": "poolFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25383,
                        "src": "828:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      {
                        "hexValue": "33303030",
                        "id": 25630,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "837:4:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3000_by_1",
                          "typeString": "int_const 3000"
                        },
                        "value": "3000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        {
                          "typeIdentifier": "t_rational_3000_by_1",
                          "typeString": "int_const 3000"
                        }
                      ],
                      "id": 25628,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "819:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 25631,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "819:23:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25632,
                  "nodeType": "ExpressionStatement",
                  "src": "819:23:22"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "329:5:22",
            "parameters": {
              "id": 25576,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "334:2:22"
            },
            "returnParameters": {
              "id": 25577,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "344:0:22"
            },
            "scope": 26047,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 25702,
            "nodeType": "FunctionDefinition",
            "src": "854:443:22",
            "nodes": [],
            "body": {
              "id": 25701,
              "nodeType": "Block",
              "src": "896:401:22",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 25642,
                            "name": "consumer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25575,
                            "src": "923:8:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ConsumerContract_$25179",
                              "typeString": "contract ConsumerContract"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ConsumerContract_$25179",
                              "typeString": "contract ConsumerContract"
                            }
                          ],
                          "id": 25641,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "915:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 25640,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "915:7:22",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25643,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "915:17:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 25637,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "906:2:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8560",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 25639,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "909:5:22",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8283,
                      "src": "906:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 25644,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "906:27:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25645,
                  "nodeType": "ExpressionStatement",
                  "src": "906:27:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 25651,
                            "name": "consumer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25575,
                            "src": "959:8:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ConsumerContract_$25179",
                              "typeString": "contract ConsumerContract"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ConsumerContract_$25179",
                              "typeString": "contract ConsumerContract"
                            }
                          ],
                          "id": 25650,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "951:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 25649,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "951:7:22",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25652,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "951:17:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31653233",
                        "id": 25653,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "970:4:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000000"
                        },
                        "value": "1e23"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 25646,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "943:2:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8560",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 25648,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "946:4:22",
                      "memberName": "deal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8312,
                      "src": "943:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 25654,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "943:32:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25655,
                  "nodeType": "ExpressionStatement",
                  "src": "943:32:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_99999999999999999999999_by_1",
                          "typeString": "int_const 99999999999999999999999"
                        },
                        "id": 25661,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "31653233",
                          "id": 25659,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1003:4:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000000000000000000000_by_1",
                            "typeString": "int_const 100000000000000000000000"
                          },
                          "value": "1e23"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 25660,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1008:1:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "1003:6:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_99999999999999999999999_by_1",
                          "typeString": "int_const 99999999999999999999999"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_99999999999999999999999_by_1",
                          "typeString": "int_const 99999999999999999999999"
                        }
                      ],
                      "expression": {
                        "id": 25656,
                        "name": "consumer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25575,
                        "src": "985:8:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ConsumerContract_$25179",
                          "typeString": "contract ConsumerContract"
                        }
                      },
                      "id": 25658,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "994:8:22",
                      "memberName": "callSwap",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25178,
                      "src": "985:17:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) external returns (uint256)"
                      }
                    },
                    "id": 25662,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "985:25:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 25663,
                  "nodeType": "ExpressionStatement",
                  "src": "985:25:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "436f6e73756d65724578616d706c65207374617274696e67206d617469632062616c616e63653a20",
                        "id": 25667,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1032:42:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_15d47002aabd12e5b8088c398c146ebc238c8675fef2acd856ff6d4cca050ddf",
                          "typeString": "literal_string \"ConsumerExample starting matic balance: \""
                        },
                        "value": "ConsumerExample starting matic balance: "
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 25670,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "1084:4:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_testMaticFor677LinkSwap_$26047",
                                "typeString": "contract testMaticFor677LinkSwap"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_testMaticFor677LinkSwap_$26047",
                                "typeString": "contract testMaticFor677LinkSwap"
                              }
                            ],
                            "id": 25669,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1076:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 25668,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1076:7:22",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 25671,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1076:13:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 25672,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1090:7:22",
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "1076:21:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_15d47002aabd12e5b8088c398c146ebc238c8675fef2acd856ff6d4cca050ddf",
                          "typeString": "literal_string \"ConsumerExample starting matic balance: \""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 25664,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16624,
                        "src": "1020:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$16624_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 25666,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1028:3:22",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9268,
                      "src": "1020:11:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 25673,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1020:78:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25674,
                  "nodeType": "ExpressionStatement",
                  "src": "1020:78:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "436f6e73756d65724578616d706c652066696e616c206c696e6b2062616c616e63653a20",
                        "id": 25678,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1120:38:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_967f32c38243627907b0d78efd1785f725b42fa807373ca6efa07800c310e053",
                          "typeString": "literal_string \"ConsumerExample final link balance: \""
                        },
                        "value": "ConsumerExample final link balance: "
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 25685,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "1198:4:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_testMaticFor677LinkSwap_$26047",
                                  "typeString": "contract testMaticFor677LinkSwap"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_testMaticFor677LinkSwap_$26047",
                                  "typeString": "contract testMaticFor677LinkSwap"
                                }
                              ],
                              "id": 25684,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1190:7:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 25683,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1190:7:22",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 25686,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1190:13:22",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 25680,
                                "name": "ERC677_link",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 25374,
                                "src": "1167:11:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 25679,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24850,
                              "src": "1160:6:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$24850_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 25681,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1160:19:22",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$24850",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 25682,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1180:9:22",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 24807,
                          "src": "1160:29:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 25687,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1160:44:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_967f32c38243627907b0d78efd1785f725b42fa807373ca6efa07800c310e053",
                          "typeString": "literal_string \"ConsumerExample final link balance: \""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 25675,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16624,
                        "src": "1108:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$16624_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 25677,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1116:3:22",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9268,
                      "src": "1108:11:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 25688,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1108:97:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25689,
                  "nodeType": "ExpressionStatement",
                  "src": "1108:97:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "436f6e73756d65724578616d706c652066696e616c206d617469632062616c616e63653a20",
                        "id": 25693,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1227:39:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_27b7a62b8d08cdb34722bb1964c20b2855533a189ee77326a7c81dfb9f382220",
                          "typeString": "literal_string \"ConsumerExample final matic balance: \""
                        },
                        "value": "ConsumerExample final matic balance: "
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 25696,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "1276:4:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_testMaticFor677LinkSwap_$26047",
                                "typeString": "contract testMaticFor677LinkSwap"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_testMaticFor677LinkSwap_$26047",
                                "typeString": "contract testMaticFor677LinkSwap"
                              }
                            ],
                            "id": 25695,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1268:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 25694,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1268:7:22",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 25697,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1268:13:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 25698,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1282:7:22",
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "1268:21:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_27b7a62b8d08cdb34722bb1964c20b2855533a189ee77326a7c81dfb9f382220",
                          "typeString": "literal_string \"ConsumerExample final matic balance: \""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 25690,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16624,
                        "src": "1215:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$16624_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 25692,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1223:3:22",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9268,
                      "src": "1215:11:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 25699,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1215:75:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25700,
                  "nodeType": "ExpressionStatement",
                  "src": "1215:75:22"
                }
              ]
            },
            "functionSelector": "1188826b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testConsumerExampleCall",
            "nameLocation": "863:23:22",
            "parameters": {
              "id": 25635,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "886:2:22"
            },
            "returnParameters": {
              "id": 25636,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "896:0:22"
            },
            "scope": 26047,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 25825,
            "nodeType": "FunctionDefinition",
            "src": "1303:878:22",
            "nodes": [],
            "body": {
              "id": 25824,
              "nodeType": "Block",
              "src": "1336:845:22",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 25710,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1363:4:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_testMaticFor677LinkSwap_$26047",
                              "typeString": "contract testMaticFor677LinkSwap"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_testMaticFor677LinkSwap_$26047",
                              "typeString": "contract testMaticFor677LinkSwap"
                            }
                          ],
                          "id": 25709,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1355:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 25708,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1355:7:22",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25711,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1355:13:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 25705,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "1346:2:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8560",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 25707,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1349:5:22",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8283,
                      "src": "1346:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 25712,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1346:23:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25713,
                  "nodeType": "ExpressionStatement",
                  "src": "1346:23:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 25719,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1395:4:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_testMaticFor677LinkSwap_$26047",
                              "typeString": "contract testMaticFor677LinkSwap"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_testMaticFor677LinkSwap_$26047",
                              "typeString": "contract testMaticFor677LinkSwap"
                            }
                          ],
                          "id": 25718,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1387:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 25717,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1387:7:22",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25720,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1387:13:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31653330",
                        "id": 25721,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1402:4:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000000000000"
                        },
                        "value": "1e30"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 25714,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "1379:2:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8560",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 25716,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1382:4:22",
                      "memberName": "deal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8312,
                      "src": "1379:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 25722,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1379:28:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25723,
                  "nodeType": "ExpressionStatement",
                  "src": "1379:28:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "436f6e7472616374206d617469632042616c616e63653a20",
                        "id": 25727,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1429:26:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c29025efa2788326e1ab940fa8db7989e3a52fdc063e6d8ccbd0be6374085211",
                          "typeString": "literal_string \"Contract matic Balance: \""
                        },
                        "value": "Contract matic Balance: "
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 25730,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "1465:4:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_testMaticFor677LinkSwap_$26047",
                                "typeString": "contract testMaticFor677LinkSwap"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_testMaticFor677LinkSwap_$26047",
                                "typeString": "contract testMaticFor677LinkSwap"
                              }
                            ],
                            "id": 25729,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1457:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 25728,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1457:7:22",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 25731,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1457:13:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 25732,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1471:7:22",
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "1457:21:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c29025efa2788326e1ab940fa8db7989e3a52fdc063e6d8ccbd0be6374085211",
                          "typeString": "literal_string \"Contract matic Balance: \""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 25724,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16624,
                        "src": "1417:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$16624_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 25726,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1425:3:22",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9268,
                      "src": "1417:11:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 25733,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1417:62:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25734,
                  "nodeType": "ExpressionStatement",
                  "src": "1417:62:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "4d73672e76616c75652068617320746f20626520686967686572207468616e20312065746820286d6174696329",
                        "id": 25738,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1505:47:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d806cba1e4e4675319aefeca6c45b438368444ed859b371f005e8a2f196c6f75",
                          "typeString": "literal_string \"Msg.value has to be higher than 1 eth (matic)\""
                        },
                        "value": "Msg.value has to be higher than 1 eth (matic)"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_d806cba1e4e4675319aefeca6c45b438368444ed859b371f005e8a2f196c6f75",
                          "typeString": "literal_string \"Msg.value has to be higher than 1 eth (matic)\""
                        }
                      ],
                      "expression": {
                        "id": 25735,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "1489:2:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8560",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 25737,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1492:12:22",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8324,
                      "src": "1489:15:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 25739,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1489:64:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25740,
                  "nodeType": "ExpressionStatement",
                  "src": "1489:64:22"
                },
                {
                  "assignments": [
                    25742
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 25742,
                      "mutability": "mutable",
                      "name": "amountOut",
                      "nameLocation": "1571:9:22",
                      "nodeType": "VariableDeclaration",
                      "scope": 25824,
                      "src": "1563:17:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 25741,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1563:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 25748,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 25743,
                          "name": "swapMaticForLink677",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25572,
                          "src": "1583:19:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SwapMaticToLink677_$25337",
                            "typeString": "contract SwapMaticToLink677"
                          }
                        },
                        "id": 25744,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1603:4:22",
                        "memberName": "swap",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 25336,
                        "src": "1583:24:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$__$returns$_t_uint256_$",
                          "typeString": "function () payable external returns (uint256)"
                        }
                      },
                      "id": 25746,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "31",
                          "id": 25745,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1615:1:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "src": "1583:34:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$__$returns$_t_uint256_$value",
                        "typeString": "function () payable external returns (uint256)"
                      }
                    },
                    "id": 25747,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1583:36:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1563:56:22"
                },
                {
                  "expression": {
                    "id": 25755,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 25749,
                      "name": "amountOut",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25742,
                      "src": "1640:9:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 25750,
                            "name": "swapMaticForLink677",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25572,
                            "src": "1652:19:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SwapMaticToLink677_$25337",
                              "typeString": "contract SwapMaticToLink677"
                            }
                          },
                          "id": 25751,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1672:4:22",
                          "memberName": "swap",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 25336,
                          "src": "1652:24:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_payable$__$returns$_t_uint256_$",
                            "typeString": "function () payable external returns (uint256)"
                          }
                        },
                        "id": 25753,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "names": [
                          "value"
                        ],
                        "nodeType": "FunctionCallOptions",
                        "options": [
                          {
                            "hexValue": "3430303030653138",
                            "id": 25752,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1683:8:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_40000000000000000000000_by_1",
                              "typeString": "int_const 40000000000000000000000"
                            },
                            "value": "40000e18"
                          }
                        ],
                        "src": "1652:40:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$__$returns$_t_uint256_$value",
                          "typeString": "function () payable external returns (uint256)"
                        }
                      },
                      "id": 25754,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1652:42:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1640:54:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 25756,
                  "nodeType": "ExpressionStatement",
                  "src": "1640:54:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "416d6f756e744f7574",
                        "id": 25760,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1716:11:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_03d10ba828b0af9282cbe3d019399a176a074fe2ca77f84723d4d38d6fd8e321",
                          "typeString": "literal_string \"AmountOut\""
                        },
                        "value": "AmountOut"
                      },
                      {
                        "id": 25761,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25742,
                        "src": "1729:9:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_03d10ba828b0af9282cbe3d019399a176a074fe2ca77f84723d4d38d6fd8e321",
                          "typeString": "literal_string \"AmountOut\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 25757,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16624,
                        "src": "1704:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$16624_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 25759,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1712:3:22",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9268,
                      "src": "1704:11:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 25762,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1704:35:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25763,
                  "nodeType": "ExpressionStatement",
                  "src": "1704:35:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "4f70657261746573207377617028292066756e6374696f6e206f6e20737761704d61746963466f724c696e6b363737",
                        "id": 25767,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1761:49:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c4570cfa3d7f22f9e087b02dcbea980ebeedd06223608a7aa8f210f870dfc1dd",
                          "typeString": "literal_string \"Operates swap() function on swapMaticForLink677\""
                        },
                        "value": "Operates swap() function on swapMaticForLink677"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c4570cfa3d7f22f9e087b02dcbea980ebeedd06223608a7aa8f210f870dfc1dd",
                          "typeString": "literal_string \"Operates swap() function on swapMaticForLink677\""
                        }
                      ],
                      "expression": {
                        "id": 25764,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16624,
                        "src": "1749:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$16624_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 25766,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1757:3:22",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9155,
                      "src": "1749:11:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) view"
                      }
                    },
                    "id": 25768,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1749:62:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25769,
                  "nodeType": "ExpressionStatement",
                  "src": "1749:62:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "436f6e7472616374206d617469632042616c616e63653a20",
                        "id": 25773,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1833:26:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c29025efa2788326e1ab940fa8db7989e3a52fdc063e6d8ccbd0be6374085211",
                          "typeString": "literal_string \"Contract matic Balance: \""
                        },
                        "value": "Contract matic Balance: "
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 25776,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "1869:4:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_testMaticFor677LinkSwap_$26047",
                                "typeString": "contract testMaticFor677LinkSwap"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_testMaticFor677LinkSwap_$26047",
                                "typeString": "contract testMaticFor677LinkSwap"
                              }
                            ],
                            "id": 25775,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1861:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 25774,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1861:7:22",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 25777,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1861:13:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 25778,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1875:7:22",
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "1861:21:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c29025efa2788326e1ab940fa8db7989e3a52fdc063e6d8ccbd0be6374085211",
                          "typeString": "literal_string \"Contract matic Balance: \""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 25770,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16624,
                        "src": "1821:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$16624_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 25772,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1829:3:22",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9268,
                      "src": "1821:11:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 25779,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1821:62:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25780,
                  "nodeType": "ExpressionStatement",
                  "src": "1821:62:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "436f6e7472616374203637374c696e6b2042616c616e63653a20",
                        "id": 25784,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1905:28:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5aba935e114c3ad74aa1bab5631e1a55f1e63abb6c02b1967923e6a45f883668",
                          "typeString": "literal_string \"Contract 677Link Balance: \""
                        },
                        "value": "Contract 677Link Balance: "
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 25791,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "1973:4:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_testMaticFor677LinkSwap_$26047",
                                  "typeString": "contract testMaticFor677LinkSwap"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_testMaticFor677LinkSwap_$26047",
                                  "typeString": "contract testMaticFor677LinkSwap"
                                }
                              ],
                              "id": 25790,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1965:7:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 25789,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1965:7:22",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 25792,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1965:13:22",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 25786,
                                "name": "ERC677_link",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 25374,
                                "src": "1942:11:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 25785,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24850,
                              "src": "1935:6:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$24850_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 25787,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1935:19:22",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$24850",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 25788,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1955:9:22",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 24807,
                          "src": "1935:29:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 25793,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1935:44:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_5aba935e114c3ad74aa1bab5631e1a55f1e63abb6c02b1967923e6a45f883668",
                          "typeString": "literal_string \"Contract 677Link Balance: \""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 25781,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16624,
                        "src": "1893:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$16624_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 25783,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1901:3:22",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9268,
                      "src": "1893:11:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 25794,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1893:87:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25795,
                  "nodeType": "ExpressionStatement",
                  "src": "1893:87:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25797,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25742,
                        "src": "1999:9:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 25804,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "2048:4:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_testMaticFor677LinkSwap_$26047",
                                  "typeString": "contract testMaticFor677LinkSwap"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_testMaticFor677LinkSwap_$26047",
                                  "typeString": "contract testMaticFor677LinkSwap"
                                }
                              ],
                              "id": 25803,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2040:7:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 25802,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2040:7:22",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 25805,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2040:13:22",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 25799,
                                "name": "ERC677_link",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 25374,
                                "src": "2017:11:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 25798,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24850,
                              "src": "2010:6:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$24850_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 25800,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2010:19:22",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$24850",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 25801,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2030:9:22",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 24807,
                          "src": "2010:29:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 25806,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2010:44:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 25796,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "1990:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 25807,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1990:65:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25808,
                  "nodeType": "ExpressionStatement",
                  "src": "1990:65:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "436f6e7472616374203637374c696e6b2042616c616e63653a20",
                        "id": 25812,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2085:28:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5aba935e114c3ad74aa1bab5631e1a55f1e63abb6c02b1967923e6a45f883668",
                          "typeString": "literal_string \"Contract 677Link Balance: \""
                        },
                        "value": "Contract 677Link Balance: "
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 25819,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "2153:4:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_testMaticFor677LinkSwap_$26047",
                                  "typeString": "contract testMaticFor677LinkSwap"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_testMaticFor677LinkSwap_$26047",
                                  "typeString": "contract testMaticFor677LinkSwap"
                                }
                              ],
                              "id": 25818,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2145:7:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 25817,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2145:7:22",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 25820,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2145:13:22",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 25814,
                                "name": "ERC677_link",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 25374,
                                "src": "2122:11:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 25813,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24850,
                              "src": "2115:6:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$24850_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 25815,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2115:19:22",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$24850",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 25816,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2135:9:22",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 24807,
                          "src": "2115:29:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 25821,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2115:44:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_5aba935e114c3ad74aa1bab5631e1a55f1e63abb6c02b1967923e6a45f883668",
                          "typeString": "literal_string \"Contract 677Link Balance: \""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 25809,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16624,
                        "src": "2073:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$16624_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 25811,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2081:3:22",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9268,
                      "src": "2073:11:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 25822,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2073:87:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25823,
                  "nodeType": "ExpressionStatement",
                  "src": "2073:87:22"
                }
              ]
            },
            "functionSelector": "f9f56a8d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testSwapOutPut",
            "nameLocation": "1312:14:22",
            "parameters": {
              "id": 25703,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1326:2:22"
            },
            "returnParameters": {
              "id": 25704,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1336:0:22"
            },
            "scope": 26047,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 25846,
            "nodeType": "FunctionDefinition",
            "src": "2193:136:22",
            "nodes": [],
            "body": {
              "id": 25845,
              "nodeType": "Block",
              "src": "2256:73:22",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 25842,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 25839,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "31653138",
                                "id": 25830,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2275:4:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000"
                                },
                                "value": "1e18"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 25837,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "arguments": [
                                        {
                                          "arguments": [],
                                          "expression": {
                                            "argumentTypes": [],
                                            "id": 25833,
                                            "name": "getLatestPrice",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 25538,
                                            "src": "2291:14:22",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_internal_view$__$returns$_t_int256_$",
                                              "typeString": "function () view returns (int256)"
                                            }
                                          },
                                          "id": 25834,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "nameLocations": [],
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "2291:16:22",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_int256",
                                            "typeString": "int256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_int256",
                                            "typeString": "int256"
                                          }
                                        ],
                                        "id": 25832,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "2283:7:22",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_uint256_$",
                                          "typeString": "type(uint256)"
                                        },
                                        "typeName": {
                                          "id": 25831,
                                          "name": "uint256",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "2283:7:22",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 25835,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "2283:25:22",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "/",
                                    "rightExpression": {
                                      "hexValue": "31653130",
                                      "id": 25836,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "2309:4:22",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_10000000000_by_1",
                                        "typeString": "int_const 10000000000"
                                      },
                                      "value": "1e10"
                                    },
                                    "src": "2283:30:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 25838,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "2282:32:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2275:39:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 25840,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "2274:41:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "316538",
                          "id": 25841,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2318:3:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000000_by_1",
                            "typeString": "int_const 100000000"
                          },
                          "value": "1e8"
                        },
                        "src": "2274:47:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 25843,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2273:49:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 25829,
                  "id": 25844,
                  "nodeType": "Return",
                  "src": "2266:56:22"
                }
              ]
            },
            "functionSelector": "01f415b0",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testcheckLinkPerMatic",
            "nameLocation": "2202:21:22",
            "parameters": {
              "id": 25826,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2223:2:22"
            },
            "returnParameters": {
              "id": 25829,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25828,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 25846,
                  "src": "2248:7:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25827,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2248:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2247:9:22"
            },
            "scope": 26047,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 25922,
            "nodeType": "FunctionDefinition",
            "src": "2339:510:22",
            "nodes": [],
            "body": {
              "id": 25921,
              "nodeType": "Block",
              "src": "2377:472:22",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    25850
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 25850,
                      "mutability": "mutable",
                      "name": "price",
                      "nameLocation": "2395:5:22",
                      "nodeType": "VariableDeclaration",
                      "scope": 25921,
                      "src": "2387:13:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 25849,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2387:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 25856,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 25853,
                          "name": "getLatestPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25538,
                          "src": "2411:14:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_int256_$",
                            "typeString": "function () view returns (int256)"
                          }
                        },
                        "id": 25854,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2411:16:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      ],
                      "id": 25852,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2403:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 25851,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2403:7:22",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 25855,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2403:25:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2387:41:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31204c696e6b20697320",
                        "id": 25860,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2450:12:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f15f9d3d338882a26bc713eb2e18932d1d142a8ebe7aa7c4fc22c1492d6d02f8",
                          "typeString": "literal_string \"1 Link is \""
                        },
                        "value": "1 Link is "
                      },
                      {
                        "id": 25861,
                        "name": "price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25850,
                        "src": "2464:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "506f6c79676f6e206d6174696320776569",
                        "id": 25862,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2471:19:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ce01558f9d8f3ae19d41e64f220a67789479025088abd23826eef2f07786f69c",
                          "typeString": "literal_string \"Polygon matic wei\""
                        },
                        "value": "Polygon matic wei"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_f15f9d3d338882a26bc713eb2e18932d1d142a8ebe7aa7c4fc22c1492d6d02f8",
                          "typeString": "literal_string \"1 Link is \""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ce01558f9d8f3ae19d41e64f220a67789479025088abd23826eef2f07786f69c",
                          "typeString": "literal_string \"Polygon matic wei\""
                        }
                      ],
                      "expression": {
                        "id": 25857,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16624,
                        "src": "2438:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$16624_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 25859,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2446:3:22",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9815,
                      "src": "2438:11:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,uint256,string memory) view"
                      }
                    },
                    "id": 25863,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2438:53:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25864,
                  "nodeType": "ExpressionStatement",
                  "src": "2438:53:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 25868,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 25866,
                          "name": "price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25850,
                          "src": "2512:5:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 25867,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2520:1:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2512:9:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726963652072657475726e7320302120",
                        "id": 25869,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2523:19:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9d260051205c8c7eb9c02c4b5bbfe7da13862e82d8bbe52daa57ec02176ca75a",
                          "typeString": "literal_string \"Price returns 0! \""
                        },
                        "value": "Price returns 0! "
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9d260051205c8c7eb9c02c4b5bbfe7da13862e82d8bbe52daa57ec02176ca75a",
                          "typeString": "literal_string \"Price returns 0! \""
                        }
                      ],
                      "id": 25865,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        269,
                        290
                      ],
                      "referencedDeclaration": 290,
                      "src": "2501:10:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory)"
                      }
                    },
                    "id": 25870,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2501:42:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25871,
                  "nodeType": "ExpressionStatement",
                  "src": "2501:42:22"
                },
                {
                  "assignments": [
                    25873
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 25873,
                      "mutability": "mutable",
                      "name": "expectedOut",
                      "nameLocation": "2561:11:22",
                      "nodeType": "VariableDeclaration",
                      "scope": 25921,
                      "src": "2553:19:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 25872,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2553:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 25884,
                  "initialValue": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 25882,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 25879,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "31653138",
                                "id": 25874,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2577:4:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000"
                                },
                                "value": "1e18"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 25877,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 25875,
                                      "name": "price",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 25850,
                                      "src": "2585:5:22",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "/",
                                    "rightExpression": {
                                      "hexValue": "31653130",
                                      "id": 25876,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "2591:4:22",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_10000000000_by_1",
                                        "typeString": "int_const 10000000000"
                                      },
                                      "value": "1e10"
                                    },
                                    "src": "2585:10:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 25878,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "2584:12:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2577:19:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 25880,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "2576:21:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "316538",
                          "id": 25881,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2600:3:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000000_by_1",
                            "typeString": "int_const 100000000"
                          },
                          "value": "1e8"
                        },
                        "src": "2576:27:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 25883,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2575:29:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2553:51:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "636861696e6c696e6b20707269636520617070726f78696d6174696f6e207065722031653138207765693a20",
                        "id": 25888,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2626:46:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9fed2bf9c6222e12b565f03b1bc18b257299a8f21808622a3f169043c2f8071d",
                          "typeString": "literal_string \"chainlink price approximation per 1e18 wei: \""
                        },
                        "value": "chainlink price approximation per 1e18 wei: "
                      },
                      {
                        "id": 25889,
                        "name": "expectedOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25873,
                        "src": "2673:11:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_9fed2bf9c6222e12b565f03b1bc18b257299a8f21808622a3f169043c2f8071d",
                          "typeString": "literal_string \"chainlink price approximation per 1e18 wei: \""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 25885,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16624,
                        "src": "2614:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$16624_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 25887,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2622:3:22",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9268,
                      "src": "2614:11:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 25890,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2614:72:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25891,
                  "nodeType": "ExpressionStatement",
                  "src": "2614:72:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6d696e696d756d20707269636520746f206e6f742072657665727420737761703a20",
                        "id": 25895,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2709:36:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_88a90a5e3c5df832233363db4d22a61ddc85855ea7c5037d115285f47e2f89e3",
                          "typeString": "literal_string \"minimum price to not revert swap: \""
                        },
                        "value": "minimum price to not revert swap: "
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 25904,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 25896,
                          "name": "expectedOut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25873,
                          "src": "2747:11:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 25903,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 25900,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "components": [
                                    {
                                      "id": 25897,
                                      "name": "expectedOut",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 25873,
                                      "src": "2763:11:22",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 25898,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "2762:13:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "hexValue": "313030",
                                  "id": 25899,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2776:3:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_100_by_1",
                                    "typeString": "int_const 100"
                                  },
                                  "value": "100"
                                },
                                "src": "2762:17:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 25901,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "2761:19:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "33",
                            "id": 25902,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2781:1:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_3_by_1",
                              "typeString": "int_const 3"
                            },
                            "value": "3"
                          },
                          "src": "2761:21:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2747:35:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_88a90a5e3c5df832233363db4d22a61ddc85855ea7c5037d115285f47e2f89e3",
                          "typeString": "literal_string \"minimum price to not revert swap: \""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 25892,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16624,
                        "src": "2696:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$16624_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 25894,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2704:3:22",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9268,
                      "src": "2696:11:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 25905,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2696:87:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25906,
                  "nodeType": "ExpressionStatement",
                  "src": "2696:87:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 25910,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2805:2:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 25918,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 25915,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "components": [
                                  {
                                    "id": 25911,
                                    "name": "expectedOut",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 25873,
                                    "src": "2811:11:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 25912,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "2810:13:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "components": [
                                  {
                                    "hexValue": "31653233",
                                    "id": 25913,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2827:4:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_100000000000000000000000_by_1",
                                      "typeString": "int_const 100000000000000000000000"
                                    },
                                    "value": "1e23"
                                  }
                                ],
                                "id": 25914,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "2826:6:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100000000000000000000000_by_1",
                                  "typeString": "int_const 100000000000000000000000"
                                }
                              },
                              "src": "2810:22:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 25916,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "2809:24:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "hexValue": "31653138",
                          "id": 25917,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2836:4:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1e18"
                        },
                        "src": "2809:31:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 25907,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16624,
                        "src": "2793:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$16624_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 25909,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2801:3:22",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9268,
                      "src": "2793:11:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 25919,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2793:48:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25920,
                  "nodeType": "ExpressionStatement",
                  "src": "2793:48:22"
                }
              ]
            },
            "functionSelector": "4e49906d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testPriceConversions",
            "nameLocation": "2348:20:22",
            "parameters": {
              "id": 25847,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2368:2:22"
            },
            "returnParameters": {
              "id": 25848,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2377:0:22"
            },
            "scope": 26047,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 26020,
            "nodeType": "FunctionDefinition",
            "src": "2916:877:22",
            "nodes": [],
            "body": {
              "id": 26019,
              "nodeType": "Block",
              "src": "2974:819:22",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 25932,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3001:4:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_testMaticFor677LinkSwap_$26047",
                              "typeString": "contract testMaticFor677LinkSwap"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_testMaticFor677LinkSwap_$26047",
                              "typeString": "contract testMaticFor677LinkSwap"
                            }
                          ],
                          "id": 25931,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2993:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 25930,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2993:7:22",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25933,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2993:13:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 25927,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "2984:2:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8560",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 25929,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2987:5:22",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8283,
                      "src": "2984:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 25934,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2984:23:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25935,
                  "nodeType": "ExpressionStatement",
                  "src": "2984:23:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 25941,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3033:4:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_testMaticFor677LinkSwap_$26047",
                              "typeString": "contract testMaticFor677LinkSwap"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_testMaticFor677LinkSwap_$26047",
                              "typeString": "contract testMaticFor677LinkSwap"
                            }
                          ],
                          "id": 25940,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3025:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 25939,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3025:7:22",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25942,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3025:13:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31653333",
                        "id": 25943,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3040:4:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000000000000000_by_1",
                          "typeString": "int_const 1000...(26 digits omitted)...0000"
                        },
                        "value": "1e33"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000000000000000_by_1",
                          "typeString": "int_const 1000...(26 digits omitted)...0000"
                        }
                      ],
                      "expression": {
                        "id": 25936,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "3017:2:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8560",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 25938,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3020:4:22",
                      "memberName": "deal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8312,
                      "src": "3017:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 25944,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3017:28:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25945,
                  "nodeType": "ExpressionStatement",
                  "src": "3017:28:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "436f6e7472616374206d617469632042616c616e63653a20",
                        "id": 25949,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3067:26:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c29025efa2788326e1ab940fa8db7989e3a52fdc063e6d8ccbd0be6374085211",
                          "typeString": "literal_string \"Contract matic Balance: \""
                        },
                        "value": "Contract matic Balance: "
                      },
                      {
                        "id": 25950,
                        "name": "fuzzAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25924,
                        "src": "3095:10:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c29025efa2788326e1ab940fa8db7989e3a52fdc063e6d8ccbd0be6374085211",
                          "typeString": "literal_string \"Contract matic Balance: \""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 25946,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16624,
                        "src": "3055:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$16624_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 25948,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3063:3:22",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9268,
                      "src": "3055:11:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 25951,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3055:51:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25952,
                  "nodeType": "ExpressionStatement",
                  "src": "3055:51:22"
                },
                {
                  "assignments": [
                    25954
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 25954,
                      "mutability": "mutable",
                      "name": "amountOut",
                      "nameLocation": "3124:9:22",
                      "nodeType": "VariableDeclaration",
                      "scope": 26019,
                      "src": "3116:17:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 25953,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3116:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 25955,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3116:17:22"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 25958,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 25956,
                      "name": "fuzzAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25924,
                      "src": "3147:10:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "31653138",
                      "id": 25957,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3160:4:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      },
                      "value": "1e18"
                    },
                    "src": "3147:17:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 25976,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 25974,
                        "name": "fuzzAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25924,
                        "src": "3357:10:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "hexValue": "31653233",
                        "id": 25975,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3371:4:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000000"
                        },
                        "value": "1e23"
                      },
                      "src": "3357:18:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 25999,
                    "nodeType": "IfStatement",
                    "src": "3353:210:22",
                    "trueBody": {
                      "id": 25998,
                      "nodeType": "Block",
                      "src": "3376:187:22",
                      "statements": [
                        {
                          "expression": {
                            "id": 25983,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 25977,
                              "name": "amountOut",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25954,
                              "src": "3390:9:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "id": 25978,
                                    "name": "swapMaticForLink677",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 25572,
                                    "src": "3402:19:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_SwapMaticToLink677_$25337",
                                      "typeString": "contract SwapMaticToLink677"
                                    }
                                  },
                                  "id": 25979,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "3422:4:22",
                                  "memberName": "swap",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 25336,
                                  "src": "3402:24:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_payable$__$returns$_t_uint256_$",
                                    "typeString": "function () payable external returns (uint256)"
                                  }
                                },
                                "id": 25981,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "names": [
                                  "value"
                                ],
                                "nodeType": "FunctionCallOptions",
                                "options": [
                                  {
                                    "id": 25980,
                                    "name": "fuzzAmount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 25924,
                                    "src": "3434:10:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "src": "3402:43:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_payable$__$returns$_t_uint256_$value",
                                  "typeString": "function () payable external returns (uint256)"
                                }
                              },
                              "id": 25982,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3402:45:22",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "3390:57:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 25984,
                          "nodeType": "ExpressionStatement",
                          "src": "3390:57:22"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 25986,
                                "name": "amountOut",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 25954,
                                "src": "3483:9:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 25993,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -28,
                                        "src": "3532:4:22",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_testMaticFor677LinkSwap_$26047",
                                          "typeString": "contract testMaticFor677LinkSwap"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_testMaticFor677LinkSwap_$26047",
                                          "typeString": "contract testMaticFor677LinkSwap"
                                        }
                                      ],
                                      "id": 25992,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "3524:7:22",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 25991,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3524:7:22",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 25994,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3524:13:22",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 25988,
                                        "name": "ERC677_link",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 25374,
                                        "src": "3501:11:22",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 25987,
                                      "name": "IERC20",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 24850,
                                      "src": "3494:6:22",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IERC20_$24850_$",
                                        "typeString": "type(contract IERC20)"
                                      }
                                    },
                                    "id": 25989,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3494:19:22",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$24850",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 25990,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "3514:9:22",
                                  "memberName": "balanceOf",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 24807,
                                  "src": "3494:29:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address) view external returns (uint256)"
                                  }
                                },
                                "id": 25995,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3494:44:22",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 25985,
                              "name": "assertEq",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                320,
                                345,
                                375,
                                400,
                                459,
                                484,
                                514,
                                539,
                                1639,
                                1674
                              ],
                              "referencedDeclaration": 514,
                              "src": "3474:8:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                                "typeString": "function (uint256,uint256)"
                              }
                            },
                            "id": 25996,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3474:65:22",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 25997,
                          "nodeType": "ExpressionStatement",
                          "src": "3474:65:22"
                        }
                      ]
                    }
                  },
                  "id": 26000,
                  "nodeType": "IfStatement",
                  "src": "3143:420:22",
                  "trueBody": {
                    "id": 25973,
                    "nodeType": "Block",
                    "src": "3166:173:22",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "4d73672e76616c75652068617320746f20626520686967686572207468616e20312065746820286d6174696329",
                              "id": 25962,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3196:47:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_d806cba1e4e4675319aefeca6c45b438368444ed859b371f005e8a2f196c6f75",
                                "typeString": "literal_string \"Msg.value has to be higher than 1 eth (matic)\""
                              },
                              "value": "Msg.value has to be higher than 1 eth (matic)"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_d806cba1e4e4675319aefeca6c45b438368444ed859b371f005e8a2f196c6f75",
                                "typeString": "literal_string \"Msg.value has to be higher than 1 eth (matic)\""
                              }
                            ],
                            "expression": {
                              "id": 25959,
                              "name": "vm",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1837,
                              "src": "3180:2:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Vm_$8560",
                                "typeString": "contract Vm"
                              }
                            },
                            "id": 25961,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3183:12:22",
                            "memberName": "expectRevert",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8324,
                            "src": "3180:15:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (bytes memory) external"
                            }
                          },
                          "id": 25963,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3180:64:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 25964,
                        "nodeType": "ExpressionStatement",
                        "src": "3180:64:22"
                      },
                      {
                        "expression": {
                          "id": 25971,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 25965,
                            "name": "amountOut",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25954,
                            "src": "3259:9:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 25966,
                                  "name": "swapMaticForLink677",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 25572,
                                  "src": "3271:19:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_SwapMaticToLink677_$25337",
                                    "typeString": "contract SwapMaticToLink677"
                                  }
                                },
                                "id": 25967,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3291:4:22",
                                "memberName": "swap",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 25336,
                                "src": "3271:24:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_payable$__$returns$_t_uint256_$",
                                  "typeString": "function () payable external returns (uint256)"
                                }
                              },
                              "id": 25969,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "names": [
                                "value"
                              ],
                              "nodeType": "FunctionCallOptions",
                              "options": [
                                {
                                  "id": 25968,
                                  "name": "fuzzAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 25924,
                                  "src": "3303:10:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "src": "3271:43:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$_t_uint256_$value",
                                "typeString": "function () payable external returns (uint256)"
                              }
                            },
                            "id": 25970,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3271:45:22",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3259:57:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 25972,
                        "nodeType": "ExpressionStatement",
                        "src": "3259:57:22"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 26003,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 26001,
                      "name": "fuzzAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25924,
                      "src": "3568:10:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "31653233",
                      "id": 26002,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3581:4:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100000000000000000000000_by_1",
                        "typeString": "int_const 100000000000000000000000"
                      },
                      "value": "1e23"
                    },
                    "src": "3568:17:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 26018,
                  "nodeType": "IfStatement",
                  "src": "3564:222:22",
                  "trueBody": {
                    "id": 26017,
                    "nodeType": "Block",
                    "src": "3587:199:22",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 26004,
                              "name": "vm",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1837,
                              "src": "3687:2:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Vm_$8560",
                                "typeString": "contract Vm"
                              }
                            },
                            "id": 26006,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3690:12:22",
                            "memberName": "expectRevert",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8332,
                            "src": "3687:15:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                              "typeString": "function () external"
                            }
                          },
                          "id": 26007,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3687:17:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 26008,
                        "nodeType": "ExpressionStatement",
                        "src": "3687:17:22"
                      },
                      {
                        "expression": {
                          "id": 26015,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 26009,
                            "name": "amountOut",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25954,
                            "src": "3718:9:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 26010,
                                  "name": "swapMaticForLink677",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 25572,
                                  "src": "3730:19:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_SwapMaticToLink677_$25337",
                                    "typeString": "contract SwapMaticToLink677"
                                  }
                                },
                                "id": 26011,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3750:4:22",
                                "memberName": "swap",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 25336,
                                "src": "3730:24:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_payable$__$returns$_t_uint256_$",
                                  "typeString": "function () payable external returns (uint256)"
                                }
                              },
                              "id": 26013,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "names": [
                                "value"
                              ],
                              "nodeType": "FunctionCallOptions",
                              "options": [
                                {
                                  "id": 26012,
                                  "name": "fuzzAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 25924,
                                  "src": "3762:10:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "src": "3730:43:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$_t_uint256_$value",
                                "typeString": "function () payable external returns (uint256)"
                              }
                            },
                            "id": 26014,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3730:45:22",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3718:57:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 26016,
                        "nodeType": "ExpressionStatement",
                        "src": "3718:57:22"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "c8158759",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testSwapOutputWithFuzz",
            "nameLocation": "2925:22:22",
            "parameters": {
              "id": 25925,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25924,
                  "mutability": "mutable",
                  "name": "fuzzAmount",
                  "nameLocation": "2956:10:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 26020,
                  "src": "2948:18:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25923,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2948:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2947:20:22"
            },
            "returnParameters": {
              "id": 25926,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2974:0:22"
            },
            "scope": 26047,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 26046,
            "nodeType": "FunctionDefinition",
            "src": "3804:220:22",
            "nodes": [],
            "body": {
              "id": 26045,
              "nodeType": "Block",
              "src": "3857:167:22",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 26028,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 26023,
                      "name": "swapMaticForLink677",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25572,
                      "src": "3867:19:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SwapMaticToLink677_$25337",
                        "typeString": "contract SwapMaticToLink677"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 26026,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "3889:22:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_SwapMaticToLink677_$25337_$",
                          "typeString": "function () returns (contract SwapMaticToLink677)"
                        },
                        "typeName": {
                          "id": 26025,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 26024,
                            "name": "SwapMaticToLink677",
                            "nameLocations": [
                              "3893:18:22"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 25337,
                            "src": "3893:18:22"
                          },
                          "referencedDeclaration": 25337,
                          "src": "3893:18:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SwapMaticToLink677_$25337",
                            "typeString": "contract SwapMaticToLink677"
                          }
                        }
                      },
                      "id": 26027,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3889:24:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SwapMaticToLink677_$25337",
                        "typeString": "contract SwapMaticToLink677"
                      }
                    },
                    "src": "3867:46:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SwapMaticToLink677_$25337",
                      "typeString": "contract SwapMaticToLink677"
                    }
                  },
                  "id": 26029,
                  "nodeType": "ExpressionStatement",
                  "src": "3867:46:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "46756e6374696f6e2064697361626c6564",
                        "id": 26033,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3939:19:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_53fa91224b16cc52a1a3dc1bc1dcb46dcdc5f624e4cdb3506a62b0b5fe029819",
                          "typeString": "literal_string \"Function disabled\""
                        },
                        "value": "Function disabled"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_53fa91224b16cc52a1a3dc1bc1dcb46dcdc5f624e4cdb3506a62b0b5fe029819",
                          "typeString": "literal_string \"Function disabled\""
                        }
                      ],
                      "expression": {
                        "id": 26030,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "3923:2:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8560",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 26032,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3926:12:22",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8324,
                      "src": "3923:15:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 26034,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3923:36:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 26035,
                  "nodeType": "ExpressionStatement",
                  "src": "3923:36:22"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 26036,
                          "name": "swapMaticForLink677",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25572,
                          "src": "3969:19:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SwapMaticToLink677_$25337",
                            "typeString": "contract SwapMaticToLink677"
                          }
                        },
                        "id": 26038,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3989:11:22",
                        "memberName": "wrapAndSwap",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 25440,
                        "src": "3969:31:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$__$returns$_t_uint256_$",
                          "typeString": "function () payable external returns (uint256)"
                        }
                      },
                      "id": 26042,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_rational_99999999999999999999999_by_1",
                            "typeString": "int_const 99999999999999999999999"
                          },
                          "id": 26041,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "31653233",
                            "id": 26039,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4008:4:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100000000000000000000000_by_1",
                              "typeString": "int_const 100000000000000000000000"
                            },
                            "value": "1e23"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 26040,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4013:1:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "4008:6:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_99999999999999999999999_by_1",
                            "typeString": "int_const 99999999999999999999999"
                          }
                        }
                      ],
                      "src": "3969:46:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$__$returns$_t_uint256_$value",
                        "typeString": "function () payable external returns (uint256)"
                      }
                    },
                    "id": 26043,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3969:48:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 26044,
                  "nodeType": "ExpressionStatement",
                  "src": "3969:48:22"
                }
              ]
            },
            "functionSelector": "8f987edb",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testWrapAndSwapFailFromExternalCall",
            "nameLocation": "3813:35:22",
            "parameters": {
              "id": 26021,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3848:2:22"
            },
            "returnParameters": {
              "id": 26022,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3857:0:22"
            },
            "scope": 26047,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 25566,
              "name": "Test",
              "nameLocations": [
                "194:4:22"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 24707,
              "src": "194:4:22"
            },
            "id": 25567,
            "nodeType": "InheritanceSpecifier",
            "src": "194:4:22"
          },
          {
            "baseName": {
              "id": 25568,
              "name": "SwapMaticToLink677",
              "nameLocations": [
                "200:18:22"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 25337,
              "src": "200:18:22"
            },
            "id": 25569,
            "nodeType": "InheritanceSpecifier",
            "src": "200:18:22"
          }
        ],
        "canonicalName": "testMaticFor677LinkSwap",
        "contractDependencies": [
          25179,
          25337
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          26047,
          25337,
          24772,
          25560,
          24707,
          1786,
          24702,
          1841
        ],
        "name": "testMaticFor677LinkSwap",
        "nameLocation": "167:23:22",
        "scope": 26048,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 22
}