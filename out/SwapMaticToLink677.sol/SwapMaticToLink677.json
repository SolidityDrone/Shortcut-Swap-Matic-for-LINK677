{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "maticAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "linkAmount",
          "type": "uint256"
        }
      ],
      "name": "SwapCompleted",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "ChainlinkPegSwap",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ERC677_Link",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MaticLinkSwap",
      "outputs": [
        {
          "internalType": "contract UniV3WmaticLinkSwap",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "checkLinkPerMatic",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLatestPrice",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pegswap",
      "outputs": [
        {
          "internalType": "contract IPegSwap",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "poolFee",
      "outputs": [
        {
          "internalType": "uint24",
          "name": "",
          "type": "uint24"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "swap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "swapRouter",
      "outputs": [
        {
          "internalType": "contract ISwapRouter",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "wrapAndSwap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60c0604052600180546001600160a01b03191673e592427a0aece92de3edee1f18e0157c0586156417905534801561003657600080fd5b50600080546001600160a01b031916735787befdc0ecd210dfa948264631cd53e68f780217905560016002553060a05273aa1dc356dc4b18f30c347798fd5379f3d77abc5b60805260805160a051610e6f6100b16000396000818161015701526104e60152600081816101b301526106870152610e6f6000f3fe6080604052600436106100915760003560e01c8063c31c9c0711610059578063c31c9c071461010d578063e224ea0c14610145578063ec75ba4a14610179578063f009451e146101a1578063f2b1904f146101d557600080fd5b8063073485b714610096578063089fe6aa146100be5780632f065a2b146100e85780638119c065146100f05780638e15f473146100f8575b600080fd5b3480156100a257600080fd5b506100ab6101fd565b6040519081526020015b60405180910390f35b3480156100ca57600080fd5b506100d4610bb881565b60405162ffffff90911681526020016100b5565b6100ab61023c565b6100ab61037c565b34801561010457600080fd5b506100ab610822565b34801561011957600080fd5b5060015461012d906001600160a01b031681565b6040516001600160a01b0390911681526020016100b5565b34801561015157600080fd5b5061012d7f000000000000000000000000000000000000000000000000000000000000000081565b34801561018557600080fd5b5061012d73b0897686c545045afc77cf20ec7a532e3120e0f181565b3480156101ad57600080fd5b5061012d7f000000000000000000000000000000000000000000000000000000000000000081565b3480156101e157600080fd5b5061012d73aa1dc356dc4b18f30c347798fd5379f3d77abc5b81565b60006402540be40061020d610822565b6102179190610c90565b61022990670de0b6b3a7640000610c90565b610237906305f5e100610cb2565b905090565b60003330146102865760405162461bcd60e51b8152602060048201526011602482015270119d5b98dd1a5bdb88191a5cd8589b1959607a1b60448201526064015b60405180910390fd5b730d500b1d8e8ef31e21c99d1db9a6444d3adf12706001600160a01b031663d0e30db0346040518263ffffffff1660e01b81526004016000604051808303818588803b1580156102d557600080fd5b505af11580156102e9573d6000803e3d6000fd5b505060405163a9059cbb60e01b8152336004820152346024820152730d500b1d8e8ef31e21c99d1db9a6444d3adf1270935063a9059cbb925060440190506020604051808303816000875af1158015610346573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061036a9190610cc9565b5060006103763461089b565b92915050565b6000610386610a19565b670de0b6b3a76400003410156103f45760405162461bcd60e51b815260206004820152602d60248201527f4d73672e76616c75652068617320746f20626520686967686572207468616e2060448201526c312065746820286d617469632960981b606482015260840161027d565b69152d02c7e14af680000034106104665760405162461bcd60e51b815260206004820152603060248201527f4d73672e76616c75652068617320746f206265206c657373207468616e20313060448201526f303030302065746820286d617469632960801b606482015260840161027d565b60405163095ea7b360e01b8152306004820152346024820152730d500b1d8e8ef31e21c99d1db9a6444d3adf12709063095ea7b3906044016020604051808303816000875af11580156104bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104e19190610cc9565b5060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316632f065a2b346040518263ffffffff1660e01b815260040160206040518083038185885af1158015610544573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906105699190610cf2565b9050600081116105ac5760405162461bcd60e51b815260206004820152600e60248201526d0537761702072657475726e7320360941b604482015260640161027d565b60405163095ea7b360e01b815273aa1dc356dc4b18f30c347798fd5379f3d77abc5b6004820152602481018290527353e0bca35ec356bd5dddfebbd1fc0fd03fabad399063095ea7b3906044016020604051808303816000875af1158015610618573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061063c9190610cc9565b50604051632b7f092360e01b8152600481018290527353e0bca35ec356bd5dddfebbd1fc0fd03fabad39602482015273b0897686c545045afc77cf20ec7a532e3120e0f160448201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632b7f092390606401600060405180830381600087803b1580156106d357600080fd5b505af11580156106e7573d6000803e3d6000fd5b50506040516370a0823160e01b815230600482015273b0897686c545045afc77cf20ec7a532e3120e0f1925063a9059cbb9150339083906370a0823190602401602060405180830381865afa158015610744573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107689190610cf2565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af11580156107b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107d79190610cc9565b50604080513481526020810183905233917f68c14902a77c0b779e8d12c5eadac21e74962f4e4efaa8a01582d13b3945ae7f910160405180910390a2905061081f6001600255565b90565b6000805460408051633fabe5a360e21b8152905183926001600160a01b03169163feaf968c9160048083019260a09291908290030181865afa15801561086c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108909190610d2a565b509195945050505050565b60006108bd730d500b1d8e8ef31e21c99d1db9a6444d3adf1270333085610a70565b6001546108e990730d500b1d8e8ef31e21c99d1db9a6444d3adf1270906001600160a01b031684610b7a565b6000670de0b6b3a7640000836108fd6101fd565b6109079190610cb2565b6109119190610c90565b905060006064610922836005610cb2565b61092c9190610c90565b6109369083610d7a565b6040805161010081018252730d500b1d8e8ef31e21c99d1db9a6444d3adf127081527353e0bca35ec356bd5dddfebbd1fc0fd03fabad396020820152610bb88183015233606082015242608082015260a0810187905260c08101839052600060e0820152600154915163414bf38960e01b8152929350916001600160a01b039091169063414bf389906109cd908490600401610d8d565b6020604051808303816000875af11580156109ec573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a109190610cf2565b95945050505050565b6002805403610a6a5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161027d565b60028055565b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180516001600160e01b03166323b872dd60e01b1790529151600092839290881691610ad49190610e0a565b6000604051808303816000865af19150503d8060008114610b11576040519150601f19603f3d011682016040523d82523d6000602084013e610b16565b606091505b5091509150818015610b40575080511580610b40575080806020019051810190610b409190610cc9565b610b725760405162461bcd60e51b815260206004820152600360248201526229aa2360e91b604482015260640161027d565b505050505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663095ea7b360e01b1790529151600092839290871691610bd69190610e0a565b6000604051808303816000865af19150503d8060008114610c13576040519150601f19603f3d011682016040523d82523d6000602084013e610c18565b606091505b5091509150818015610c42575080511580610c42575080806020019051810190610c429190610cc9565b610c735760405162461bcd60e51b8152602060048201526002602482015261534160f01b604482015260640161027d565b5050505050565b634e487b7160e01b600052601160045260246000fd5b600082610cad57634e487b7160e01b600052601260045260246000fd5b500490565b808202811582820484141761037657610376610c7a565b600060208284031215610cdb57600080fd5b81518015158114610ceb57600080fd5b9392505050565b600060208284031215610d0457600080fd5b5051919050565b805169ffffffffffffffffffff81168114610d2557600080fd5b919050565b600080600080600060a08688031215610d4257600080fd5b610d4b86610d0b565b9450602086015193506040860151925060608601519150610d6e60808701610d0b565b90509295509295909350565b8181038181111561037657610376610c7a565b60006101008201905060018060a01b0380845116835280602085015116602084015262ffffff6040850151166040840152806060850151166060840152506080830151608083015260a083015160a083015260c083015160c083015260e0830151610e0360e08401826001600160a01b03169052565b5092915050565b6000825160005b81811015610e2b5760208186018101518583015201610e11565b50600092019182525091905056fea2646970667358221220e50de90acfcab82fdd0870e5b000242da86825246a4ceaec41dbe0774e5c275c64736f6c63430008110033",
    "sourceMap": "823:2403:20:-:0;;;973:88:21;;;-1:-1:-1;;;;;;973:88:21;1018:42;973:88;;;1420:129:20;;;;;;;;;-1:-1:-1;1768:9:21;:101;;-1:-1:-1;;;;;;1768:101:21;1816:42;1768:101;;;;1821:7:14;:22;1488:4:20;1444:50;;1188:42;1505:36;;823:2403;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106100915760003560e01c8063c31c9c0711610059578063c31c9c071461010d578063e224ea0c14610145578063ec75ba4a14610179578063f009451e146101a1578063f2b1904f146101d557600080fd5b8063073485b714610096578063089fe6aa146100be5780632f065a2b146100e85780638119c065146100f05780638e15f473146100f8575b600080fd5b3480156100a257600080fd5b506100ab6101fd565b6040519081526020015b60405180910390f35b3480156100ca57600080fd5b506100d4610bb881565b60405162ffffff90911681526020016100b5565b6100ab61023c565b6100ab61037c565b34801561010457600080fd5b506100ab610822565b34801561011957600080fd5b5060015461012d906001600160a01b031681565b6040516001600160a01b0390911681526020016100b5565b34801561015157600080fd5b5061012d7f000000000000000000000000000000000000000000000000000000000000000081565b34801561018557600080fd5b5061012d73b0897686c545045afc77cf20ec7a532e3120e0f181565b3480156101ad57600080fd5b5061012d7f000000000000000000000000000000000000000000000000000000000000000081565b3480156101e157600080fd5b5061012d73aa1dc356dc4b18f30c347798fd5379f3d77abc5b81565b60006402540be40061020d610822565b6102179190610c90565b61022990670de0b6b3a7640000610c90565b610237906305f5e100610cb2565b905090565b60003330146102865760405162461bcd60e51b8152602060048201526011602482015270119d5b98dd1a5bdb88191a5cd8589b1959607a1b60448201526064015b60405180910390fd5b730d500b1d8e8ef31e21c99d1db9a6444d3adf12706001600160a01b031663d0e30db0346040518263ffffffff1660e01b81526004016000604051808303818588803b1580156102d557600080fd5b505af11580156102e9573d6000803e3d6000fd5b505060405163a9059cbb60e01b8152336004820152346024820152730d500b1d8e8ef31e21c99d1db9a6444d3adf1270935063a9059cbb925060440190506020604051808303816000875af1158015610346573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061036a9190610cc9565b5060006103763461089b565b92915050565b6000610386610a19565b670de0b6b3a76400003410156103f45760405162461bcd60e51b815260206004820152602d60248201527f4d73672e76616c75652068617320746f20626520686967686572207468616e2060448201526c312065746820286d617469632960981b606482015260840161027d565b69152d02c7e14af680000034106104665760405162461bcd60e51b815260206004820152603060248201527f4d73672e76616c75652068617320746f206265206c657373207468616e20313060448201526f303030302065746820286d617469632960801b606482015260840161027d565b60405163095ea7b360e01b8152306004820152346024820152730d500b1d8e8ef31e21c99d1db9a6444d3adf12709063095ea7b3906044016020604051808303816000875af11580156104bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104e19190610cc9565b5060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316632f065a2b346040518263ffffffff1660e01b815260040160206040518083038185885af1158015610544573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906105699190610cf2565b9050600081116105ac5760405162461bcd60e51b815260206004820152600e60248201526d0537761702072657475726e7320360941b604482015260640161027d565b60405163095ea7b360e01b815273aa1dc356dc4b18f30c347798fd5379f3d77abc5b6004820152602481018290527353e0bca35ec356bd5dddfebbd1fc0fd03fabad399063095ea7b3906044016020604051808303816000875af1158015610618573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061063c9190610cc9565b50604051632b7f092360e01b8152600481018290527353e0bca35ec356bd5dddfebbd1fc0fd03fabad39602482015273b0897686c545045afc77cf20ec7a532e3120e0f160448201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632b7f092390606401600060405180830381600087803b1580156106d357600080fd5b505af11580156106e7573d6000803e3d6000fd5b50506040516370a0823160e01b815230600482015273b0897686c545045afc77cf20ec7a532e3120e0f1925063a9059cbb9150339083906370a0823190602401602060405180830381865afa158015610744573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107689190610cf2565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af11580156107b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107d79190610cc9565b50604080513481526020810183905233917f68c14902a77c0b779e8d12c5eadac21e74962f4e4efaa8a01582d13b3945ae7f910160405180910390a2905061081f6001600255565b90565b6000805460408051633fabe5a360e21b8152905183926001600160a01b03169163feaf968c9160048083019260a09291908290030181865afa15801561086c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108909190610d2a565b509195945050505050565b60006108bd730d500b1d8e8ef31e21c99d1db9a6444d3adf1270333085610a70565b6001546108e990730d500b1d8e8ef31e21c99d1db9a6444d3adf1270906001600160a01b031684610b7a565b6000670de0b6b3a7640000836108fd6101fd565b6109079190610cb2565b6109119190610c90565b905060006064610922836005610cb2565b61092c9190610c90565b6109369083610d7a565b6040805161010081018252730d500b1d8e8ef31e21c99d1db9a6444d3adf127081527353e0bca35ec356bd5dddfebbd1fc0fd03fabad396020820152610bb88183015233606082015242608082015260a0810187905260c08101839052600060e0820152600154915163414bf38960e01b8152929350916001600160a01b039091169063414bf389906109cd908490600401610d8d565b6020604051808303816000875af11580156109ec573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a109190610cf2565b95945050505050565b6002805403610a6a5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161027d565b60028055565b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180516001600160e01b03166323b872dd60e01b1790529151600092839290881691610ad49190610e0a565b6000604051808303816000865af19150503d8060008114610b11576040519150601f19603f3d011682016040523d82523d6000602084013e610b16565b606091505b5091509150818015610b40575080511580610b40575080806020019051810190610b409190610cc9565b610b725760405162461bcd60e51b815260206004820152600360248201526229aa2360e91b604482015260640161027d565b505050505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663095ea7b360e01b1790529151600092839290871691610bd69190610e0a565b6000604051808303816000865af19150503d8060008114610c13576040519150601f19603f3d011682016040523d82523d6000602084013e610c18565b606091505b5091509150818015610c42575080511580610c42575080806020019051810190610c429190610cc9565b610c735760405162461bcd60e51b8152602060048201526002602482015261534160f01b604482015260640161027d565b5050505050565b634e487b7160e01b600052601160045260246000fd5b600082610cad57634e487b7160e01b600052601260045260246000fd5b500490565b808202811582820484141761037657610376610c7a565b600060208284031215610cdb57600080fd5b81518015158114610ceb57600080fd5b9392505050565b600060208284031215610d0457600080fd5b5051919050565b805169ffffffffffffffffffff81168114610d2557600080fd5b919050565b600080600080600060a08688031215610d4257600080fd5b610d4b86610d0b565b9450602086015193506040860151925060608601519150610d6e60808701610d0b565b90509295509295909350565b8181038181111561037657610376610c7a565b60006101008201905060018060a01b0380845116835280602085015116602084015262ffffff6040850151166040840152806060850151166060840152506080830151608083015260a083015160a083015260c083015160c083015260e0830151610e0360e08401826001600160a01b03169052565b5092915050565b6000825160005b81811015610e2b5760208186018101518583015201610e11565b50600092019182525091905056fea2646970667358221220e50de90acfcab82fdd0870e5b000242da86825246a4ceaec41dbe0774e5c275c64736f6c63430008110033",
    "sourceMap": "823:2403:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5105:133:21;;;;;;;;;;;;;:::i;:::-;;;160:25:23;;;148:2;133:18;5105:133:21;;;;;;;;1493:37;;;;;;;;;;;;1526:4;1493:37;;;;;370:8:23;358:21;;;340:40;;328:2;313:18;1493:37:21;196:190:23;2235:332:21;;;:::i;1863:1351:20:-;;;:::i;4890:209:21:-;;;;;;;;;;;;;:::i;973:88::-;;;;;;;;;;-1:-1:-1;973:88:21;;;;-1:-1:-1;;;;;973:88:21;;;;;;-1:-1:-1;;;;;756:32:23;;;738:51;;726:2;711:18;973:88:21;571:224:23;1040:50:20;;;;;;;;;;;;;;;1239:88;;;;;;;;;;;;1285:42;1239:88;;1000:33;;;;;;;;;;;;;;;1142:88;;;;;;;;;;;;1188:42;1142:88;;5105:133:21;5155:7;5217:4;5199:16;:14;:16::i;:::-;5191:30;;;;:::i;:::-;5183:39;;:4;:39;:::i;:::-;5182:47;;5226:3;5182:47;:::i;:::-;5174:56;;5105:133;:::o;2235:332::-;2284:7;2311:10;2331:4;2311:25;2303:55;;;;-1:-1:-1;;;2303:55:21;;2309:2:23;2303:55:21;;;2291:21:23;2348:2;2328:18;;;2321:30;-1:-1:-1;;;2367:18:23;;;2360:47;2424:18;;2303:55:21;;;;;;;;;1384:42;-1:-1:-1;;;;;2369:23:21;;2400:9;2369:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2423:47:21;;-1:-1:-1;;;2423:47:21;;2448:10;2423:47;;;2627:51:23;2460:9:21;2694:18:23;;;2687:34;1384:42:21;;-1:-1:-1;2423:24:21;;-1:-1:-1;2600:18:23;;;-1:-1:-1;2423:47:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2481:17;2501:31;2522:9;2501:20;:31::i;:::-;2481:51;2235:332;-1:-1:-1;;2235:332:21:o;1863:1351:20:-;1918:7;2261:21:14;:19;:21::i;:::-;1958:4:20::1;1945:9;:17;;1937:75;;;::::0;-1:-1:-1;;;1937:75:20;;3216:2:23;1937:75:20::1;::::0;::::1;3198:21:23::0;3255:2;3235:18;;;3228:30;3294:34;3274:18;;;3267:62;-1:-1:-1;;;3345:18:23;;;3338:43;3398:19;;1937:75:20::1;3014:409:23::0;1937:75:20::1;2043:4;2031:9;:16;2023:77;;;::::0;-1:-1:-1;;;2023:77:20;;3630:2:23;2023:77:20::1;::::0;::::1;3612:21:23::0;3669:2;3649:18;;;3642:30;3708:34;3688:18;;;3681:62;-1:-1:-1;;;3759:18:23;;;3752:46;3815:19;;2023:77:20::1;3428:412:23::0;2023:77:20::1;2207:48;::::0;-1:-1:-1;;;2207:48:20;;2238:4:::1;2207:48;::::0;::::1;2627:51:23::0;2245:9:20::1;2694:18:23::0;;;2687:34;1384:42:21::1;::::0;2207:22:20::1;::::0;2600:18:23;;2207:48:20::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2336:21;2361:13;-1:-1:-1::0;;;;;2361:25:20::1;;2394:9;2361:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2336:70;;2535:1;2519:13;:17;2511:44;;;::::0;-1:-1:-1;;;2511:44:20;;4236:2:23;2511:44:20::1;::::0;::::1;4218:21:23::0;4275:2;4255:18;;;4248:30;-1:-1:-1;;;4294:18:23;;;4287:44;4348:18;;2511:44:20::1;4034:338:23::0;2511:44:20::1;2652:61;::::0;-1:-1:-1;;;2652:61:20;;1188:42:::1;2652:61;::::0;::::1;2627:51:23::0;2694:18;;;2687:34;;;1308:42:21::1;::::0;2652:28:20::1;::::0;2600:18:23;;2652:61:20::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;2825:54:20::1;::::0;-1:-1:-1;;;2825:54:20;;::::1;::::0;::::1;4579:25:23::0;;;1308:42:21::1;4658:18:23::0;;;4651:43;1285:42:20::1;4710:18:23::0;;;4703:43;2825:7:20::1;-1:-1:-1::0;;;;;2825:12:20::1;::::0;::::1;::::0;4552:18:23;;2825:54:20::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;3024:44:20::1;::::0;-1:-1:-1;;;3024:44:20;;3062:4:::1;3024:44;::::0;::::1;738:51:23::0;1285:42:20::1;::::0;-1:-1:-1;2983:28:20::1;::::0;-1:-1:-1;3012:10:20::1;::::0;1285:42;;3024:29:::1;::::0;711:18:23;;3024:44:20::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2983:86;::::0;-1:-1:-1;;;;;;2983:86:20::1;::::0;;;;;;-1:-1:-1;;;;;2645:32:23;;;2983:86:20::1;::::0;::::1;2627:51:23::0;2694:18;;;2687:34;2600:18;;2983:86:20::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;3124:51:20::1;::::0;;3150:9:::1;4931:25:23::0;;4987:2;4972:18;;4965:34;;;3138:10:20::1;::::0;3124:51:::1;::::0;4904:18:23;3124:51:20::1;;;;;;;3193:13:::0;-1:-1:-1;2303:20:14;1716:1;2809:7;:22;2629:209;2303:20;1863:1351:20;:::o;4890:209:21:-;4937:3;5037:9;;:27;;;-1:-1:-1;;;5037:27:21;;;;4937:3;;-1:-1:-1;;;;;5037:9:21;;:25;;:27;;;;;;;;;;;;;;:9;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;4953:111:21;;4890:209;-1:-1:-1;;;;;4890:209:21:o;3088:1491::-;3154:17;3306:76;1384:42;3346:10;3366:4;3373:8;3306:31;:76::i;:::-;3486:10;;3443:65;;1384:42;;-1:-1:-1;;;;;3486:10:21;3499:8;3443:26;:65::i;:::-;3595:14;3649:4;3637:8;3614:19;:17;:19::i;:::-;3613:32;;;;:::i;:::-;3612:41;;;;:::i;:::-;3595:58;-1:-1:-1;3755:14:21;3797:3;3785:10;3595:58;3794:1;3785:10;:::i;:::-;3784:16;;;;:::i;:::-;3774:27;;:6;:27;:::i;:::-;3964:486;;;;;;;;1384:42;3964:486;;1308:42;3964:486;;;;1526:4;3964:486;;;;4135:10;3964:486;;;;4174:15;3964:486;;;;;;;;;;;;;;;;-1:-1:-1;3964:486:21;;;;4536:10;;:35;;-1:-1:-1;;;4536:35:21;;3964:486;;-1:-1:-1;3964:486:21;-1:-1:-1;;;;;4536:10:21;;;;:27;;:35;;3964:486;;4536:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4524:47;3088:1491;-1:-1:-1;;;;;3088:1491:21:o;2336:287:14:-;1759:1;2468:7;;:19;2460:63;;;;-1:-1:-1;;;2460:63:14;;6853:2:23;2460:63:14;;;6835:21:23;6892:2;6872:18;;;6865:30;6931:33;6911:18;;;6904:61;6982:18;;2460:63:14;6651:355:23;2460:63:14;1759:1;2598:18;;2336:287::o;561:358:18:-;759:69;;;-1:-1:-1;;;;;7269:15:23;;;759:69:18;;;7251:34:23;7321:15;;;7301:18;;;7294:43;7353:18;;;;7346:34;;;759:69:18;;;;;;;;;;7186:18:23;;;;759:69:18;;;;;;;-1:-1:-1;;;;;759:69:18;-1:-1:-1;;;759:69:18;;;748:81;;-1:-1:-1;;;;748:10:18;;;;:81;;759:69;748:81;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;700:129;;;;847:7;:57;;;;-1:-1:-1;859:11:18;;:16;;:44;;;890:4;879:24;;;;;;;;;;;;:::i;:::-;839:73;;;;-1:-1:-1;;;839:73:18;;8010:2:23;839:73:18;;;7992:21:23;8049:1;8029:18;;;8022:29;-1:-1:-1;;;8067:18:23;;;8060:33;8110:18;;839:73:18;7808:326:23;839:73:18;690:229;;561:358;;;;:::o;1873:307::-;2032:58;;;-1:-1:-1;;;;;2645:32:23;;;2032:58:18;;;2627:51:23;2694:18;;;;2687:34;;;2032:58:18;;;;;;;;;;2600:18:23;;;;2032:58:18;;;;;;;-1:-1:-1;;;;;2032:58:18;-1:-1:-1;;;2032:58:18;;;2021:70;;-1:-1:-1;;;;2021:10:18;;;;:70;;2032:58;2021:70;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1985:106;;;;2109:7;:57;;;;-1:-1:-1;2121:11:18;;:16;;:44;;;2152:4;2141:24;;;;;;;;;;;;:::i;:::-;2101:72;;;;-1:-1:-1;;;2101:72:18;;8341:2:23;2101:72:18;;;8323:21:23;8380:1;8360:18;;;8353:29;-1:-1:-1;;;8398:18:23;;;8391:32;8440:18;;2101:72:18;8139:325:23;2101:72:18;1975:205;;1873:307;;;:::o;1580:127:23:-;1641:10;1636:3;1632:20;1629:1;1622:31;1672:4;1669:1;1662:15;1696:4;1693:1;1686:15;1712:217;1752:1;1778;1768:132;;1822:10;1817:3;1813:20;1810:1;1803:31;1857:4;1854:1;1847:15;1885:4;1882:1;1875:15;1768:132;-1:-1:-1;1914:9:23;;1712:217::o;1934:168::-;2007:9;;;2038;;2055:15;;;2049:22;;2035:37;2025:71;;2076:18;;:::i;2732:277::-;2799:6;2852:2;2840:9;2831:7;2827:23;2823:32;2820:52;;;2868:1;2865;2858:12;2820:52;2900:9;2894:16;2953:5;2946:13;2939:21;2932:5;2929:32;2919:60;;2975:1;2972;2965:12;2919:60;2998:5;2732:277;-1:-1:-1;;;2732:277:23:o;3845:184::-;3915:6;3968:2;3956:9;3947:7;3943:23;3939:32;3936:52;;;3984:1;3981;3974:12;3936:52;-1:-1:-1;4007:16:23;;3845:184;-1:-1:-1;3845:184:23:o;5010:179::-;5088:13;;5141:22;5130:34;;5120:45;;5110:73;;5179:1;5176;5169:12;5110:73;5010:179;;;:::o;5194:473::-;5297:6;5305;5313;5321;5329;5382:3;5370:9;5361:7;5357:23;5353:33;5350:53;;;5399:1;5396;5389:12;5350:53;5422:39;5451:9;5422:39;:::i;:::-;5412:49;;5501:2;5490:9;5486:18;5480:25;5470:35;;5545:2;5534:9;5530:18;5524:25;5514:35;;5589:2;5578:9;5574:18;5568:25;5558:35;;5612:49;5656:3;5645:9;5641:19;5612:49;:::i;:::-;5602:59;;5194:473;;;;;;;;:::o;5672:128::-;5739:9;;;5760:11;;;5757:37;;;5774:18;;:::i;5805:841::-;5979:4;6021:3;6010:9;6006:19;5998:27;;6061:1;6057;6052:3;6048:11;6044:19;6109:2;6100:6;6094:13;6090:22;6079:9;6072:41;6181:2;6173:4;6165:6;6161:17;6155:24;6151:33;6144:4;6133:9;6129:20;6122:63;6253:8;6245:4;6237:6;6233:17;6227:24;6223:39;6216:4;6205:9;6201:20;6194:69;6331:2;6323:4;6315:6;6311:17;6305:24;6301:33;6294:4;6283:9;6279:20;6272:63;;6391:4;6383:6;6379:17;6373:24;6366:4;6355:9;6351:20;6344:54;6454:4;6446:6;6442:17;6436:24;6429:4;6418:9;6414:20;6407:54;6517:4;6509:6;6505:17;6499:24;6492:4;6481:9;6477:20;6470:54;6571:4;6563:6;6559:17;6553:24;6586:54;6634:4;6623:9;6619:20;6605:12;-1:-1:-1;;;;;1103:31:23;1091:44;;1037:104;6586:54;;5805:841;;;;:::o;7391:412::-;7520:3;7558:6;7552:13;7583:1;7593:129;7607:6;7604:1;7601:13;7593:129;;;7705:4;7689:14;;;7685:25;;7679:32;7666:11;;;7659:53;7622:12;7593:129;;;-1:-1:-1;7777:1:23;7741:16;;7766:13;;;-1:-1:-1;7741:16:23;7391:412;-1:-1:-1;7391:412:23:o",
    "linkReferences": {},
    "immutableReferences": {
      "25211": [
        {
          "start": 435,
          "length": 32
        },
        {
          "start": 1671,
          "length": 32
        }
      ],
      "25214": [
        {
          "start": 343,
          "length": 32
        },
        {
          "start": 1254,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "ChainlinkPegSwap()": "f2b1904f",
    "ERC677_Link()": "ec75ba4a",
    "MaticLinkSwap()": "e224ea0c",
    "checkLinkPerMatic()": "073485b7",
    "getLatestPrice()": "8e15f473",
    "pegswap()": "f009451e",
    "poolFee()": "089fe6aa",
    "swap()": "8119c065",
    "swapRouter()": "c31c9c07",
    "wrapAndSwap()": "2f065a2b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maticAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"linkAmount\",\"type\":\"uint256\"}],\"name\":\"SwapCompleted\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ChainlinkPegSwap\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ERC677_Link\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MaticLinkSwap\",\"outputs\":[{\"internalType\":\"contract UniV3WmaticLinkSwap\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"checkLinkPerMatic\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLatestPrice\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pegswap\",\"outputs\":[{\"internalType\":\"contract IPegSwap\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolFee\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapRouter\",\"outputs\":[{\"internalType\":\"contract ISwapRouter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wrapAndSwap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"ZergDrone - See deployer address;\",\"details\":\"simply create an interface for swap() external payable returns(uint256) and call from a contract\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"intializes immutable contracts\"},\"swap()\":{\"details\":\"call this function with a msg.value greater than 0 to swap matic for 677Link\",\"params\":{\"\":\"(msg.value) requires to be greater than 0 and less than 1e23 (100000Eth)\"},\"returns\":{\"_0\":\"swapAmountOut of token returned from operations\"}},\"wrapAndSwap()\":{\"details\":\"this function is called by MaticLinkSwap contract to wrap matic and launch a Uni v3 single swap\",\"returns\":{\"_0\":\"amountOut the amount of token sent back after wrapping to wmatic and then swapping for bridged_Link\"}}},\"title\":\"Matic to Link ERC677 compatible in one function\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"constructor is called\"},\"swap()\":{\"notice\":\"Swaps matic for erc677 Link in one function\"},\"wrapAndSwap()\":{\"notice\":\"Uses IWmatic interface to deposit matic for wrapped matic, finally swaps wrapped matic for bridged_Link\"}},\"notice\":\"this contract contains and external function to swap matic to erc677 Link\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/SwapMaticToLink677.sol\":\"SwapMaticToLink677\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@uniswap/=lib/uniswap/\",\":ds-test/=lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":std/=lib/forge-std/src/\",\":uniswap/=lib/uniswap/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x03a26b0ce85afee2c16f3232bd123286b849ca576778781cf6e8bbf51cb7570a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13a4f5cec214760f14abaedfc0a1860d80c2267386fa62dc77e8eee51ec84d71\",\"dweb:/ipfs/QmWmEKeofHqLnNEeCivhzTepo1k5xZZqzMxyyyzNBYiYBW\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"lib/uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]},\"lib/uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":{\"keccak256\":\"0x9af98b0908c96320ca6d08b22f0efca864742f6adbe5794cafe2d1d2e808b0cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://da1d1e81e5bf534f0bf2934b3193db6cb1933f91ec006d2b88e9ad10a617a2d2\",\"dweb:/ipfs/QmcPBk47QLMFWcX2y2S9eMFsJgoYWBd3R8ey55Bgmv6w6v\"]},\"src/SwapMaticToLink677.sol\":{\"keccak256\":\"0x19d4d916c5a30d315d8cf916fbbeda68a9d860e7bb3ffe8d54940be7901b0624\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8a16a77dee605fd186b6fd3495ede9974a9fbcd791b27a2f6f250a11a82d36f7\",\"dweb:/ipfs/QmXHNzTPV7tDAKxzbUYNH1VG8aVvtmWoGRT9Trnjq1ojhh\"]},\"src/UniV3WmaticLinkSwap.sol\":{\"keccak256\":\"0xcd476e5f0bef3e49effa0b96dbee0477430041603e2d3007b0c172f53698cb7e\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5f1c3d80fb36bdee178a04d9a670cd532266d08908d63fee647a8249840b0a2c\",\"dweb:/ipfs/QmRxrM7vGTtrxjLT8sSTjUrBf7gRUQqk5cXXQod8rpMwAh\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "caller",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "maticAmount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "linkAmount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SwapCompleted",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ChainlinkPegSwap",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ERC677_Link",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MaticLinkSwap",
          "outputs": [
            {
              "internalType": "contract UniV3WmaticLinkSwap",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "checkLinkPerMatic",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getLatestPrice",
          "outputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "pegswap",
          "outputs": [
            {
              "internalType": "contract IPegSwap",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "poolFee",
          "outputs": [
            {
              "internalType": "uint24",
              "name": "",
              "type": "uint24"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "function",
          "name": "swap",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "swapRouter",
          "outputs": [
            {
              "internalType": "contract ISwapRouter",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "function",
          "name": "wrapAndSwap",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "constructor": {
            "details": "intializes immutable contracts"
          },
          "swap()": {
            "details": "call this function with a msg.value greater than 0 to swap matic for 677Link",
            "params": {
              "": "(msg.value) requires to be greater than 0 and less than 1e23 (100000Eth)"
            },
            "returns": {
              "_0": "swapAmountOut of token returned from operations"
            }
          },
          "wrapAndSwap()": {
            "details": "this function is called by MaticLinkSwap contract to wrap matic and launch a Uni v3 single swap",
            "returns": {
              "_0": "amountOut the amount of token sent back after wrapping to wmatic and then swapping for bridged_Link"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "constructor": {
            "notice": "constructor is called"
          },
          "swap()": {
            "notice": "Swaps matic for erc677 Link in one function"
          },
          "wrapAndSwap()": {
            "notice": "Uses IWmatic interface to deposit matic for wrapped matic, finally swaps wrapped matic for bridged_Link"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":@uniswap/=lib/uniswap/",
        ":ds-test/=lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        ":std/=lib/forge-std/src/",
        ":uniswap/=lib/uniswap/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/SwapMaticToLink677.sol": "SwapMaticToLink677"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol": {
        "keccak256": "0x03a26b0ce85afee2c16f3232bd123286b849ca576778781cf6e8bbf51cb7570a",
        "urls": [
          "bzz-raw://13a4f5cec214760f14abaedfc0a1860d80c2267386fa62dc77e8eee51ec84d71",
          "dweb:/ipfs/QmWmEKeofHqLnNEeCivhzTepo1k5xZZqzMxyyyzNBYiYBW"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "lib/uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
        "keccak256": "0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69",
        "urls": [
          "bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652",
          "dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
        "keccak256": "0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975",
        "urls": [
          "bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53",
          "dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/uniswap/v3-periphery/contracts/libraries/TransferHelper.sol": {
        "keccak256": "0x9af98b0908c96320ca6d08b22f0efca864742f6adbe5794cafe2d1d2e808b0cd",
        "urls": [
          "bzz-raw://da1d1e81e5bf534f0bf2934b3193db6cb1933f91ec006d2b88e9ad10a617a2d2",
          "dweb:/ipfs/QmcPBk47QLMFWcX2y2S9eMFsJgoYWBd3R8ey55Bgmv6w6v"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/SwapMaticToLink677.sol": {
        "keccak256": "0x19d4d916c5a30d315d8cf916fbbeda68a9d860e7bb3ffe8d54940be7901b0624",
        "urls": [
          "bzz-raw://8a16a77dee605fd186b6fd3495ede9974a9fbcd791b27a2f6f250a11a82d36f7",
          "dweb:/ipfs/QmXHNzTPV7tDAKxzbUYNH1VG8aVvtmWoGRT9Trnjq1ojhh"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/UniV3WmaticLinkSwap.sol": {
        "keccak256": "0xcd476e5f0bef3e49effa0b96dbee0477430041603e2d3007b0c172f53698cb7e",
        "urls": [
          "bzz-raw://5f1c3d80fb36bdee178a04d9a670cd532266d08908d63fee647a8249840b0a2c",
          "dweb:/ipfs/QmRxrM7vGTtrxjLT8sSTjUrBf7gRUQqk5cXXQod8rpMwAh"
        ],
        "license": "GPL-2.0-or-later"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/SwapMaticToLink677.sol",
    "id": 25338,
    "exportedSymbols": {
      "AggregatorV3Interface": [
        25362
      ],
      "IERC20": [
        24850
      ],
      "IPegSwap": [
        25195
      ],
      "ISwapRouter": [
        24964
      ],
      "IUniswapV3SwapCallback": [
        24864
      ],
      "IWMatic": [
        25348
      ],
      "ReentrancyGuard": [
        24772
      ],
      "SwapMaticToLink677": [
        25337
      ],
      "TransferHelper": [
        25135
      ],
      "UniV3WmaticLinkSwap": [
        25560
      ]
    },
    "nodeType": "SourceUnit",
    "src": "46:3182:20",
    "nodes": [
      {
        "id": 25181,
        "nodeType": "PragmaDirective",
        "src": "46:23:20",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".6"
        ]
      },
      {
        "id": 25182,
        "nodeType": "PragmaDirective",
        "src": "71:19:20",
        "nodes": [],
        "literals": [
          "abicoder",
          "v2"
        ]
      },
      {
        "id": 25183,
        "nodeType": "ImportDirective",
        "src": "96:40:20",
        "nodes": [],
        "absolutePath": "src/UniV3WmaticLinkSwap.sol",
        "file": "../src/UniV3WmaticLinkSwap.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 25338,
        "sourceUnit": 25561,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 25184,
        "nodeType": "ImportDirective",
        "src": "138:62:20",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol",
        "file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 25338,
        "sourceUnit": 24773,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 25195,
        "nodeType": "ContractDefinition",
        "src": "405:99:20",
        "nodes": [
          {
            "id": 25194,
            "nodeType": "FunctionDefinition",
            "src": "430:71:20",
            "nodes": [],
            "functionSelector": "2b7f0923",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "swap",
            "nameLocation": "439:4:20",
            "parameters": {
              "id": 25192,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25187,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "452:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 25194,
                  "src": "444:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25186,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "444:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25189,
                  "mutability": "mutable",
                  "name": "source",
                  "nameLocation": "468:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 25194,
                  "src": "460:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25188,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "460:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25191,
                  "mutability": "mutable",
                  "name": "target",
                  "nameLocation": "484:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 25194,
                  "src": "476:14:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25190,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "476:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "443:48:20"
            },
            "returnParameters": {
              "id": 25193,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "500:0:20"
            },
            "scope": 25195,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IPegSwap",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 25185,
          "nodeType": "StructuredDocumentation",
          "src": "210:195:20",
          "text": "@title interface for chainlink PegSwap\n @notice needed to interact with PegSwap contract \n @dev Interface for PegSwap contract at 0xAA1DC356dc4B18f30C347798FD5379F3D77ABC5b "
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          25195
        ],
        "name": "IPegSwap",
        "nameLocation": "415:8:20",
        "scope": 25338,
        "usedErrors": []
      },
      {
        "id": 25337,
        "nodeType": "ContractDefinition",
        "src": "823:2403:20",
        "nodes": [
          {
            "id": 25208,
            "nodeType": "EventDefinition",
            "src": "905:85:20",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "68c14902a77c0b779e8d12c5eadac21e74962f4e4efaa8a01582d13b3945ae7f",
            "name": "SwapCompleted",
            "nameLocation": "911:13:20",
            "parameters": {
              "id": 25207,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25202,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "caller",
                  "nameLocation": "941:6:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 25208,
                  "src": "925:22:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25201,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "925:7:20",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25204,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "maticAmount",
                  "nameLocation": "957:11:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 25208,
                  "src": "949:19:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25203,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "949:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25206,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "linkAmount",
                  "nameLocation": "978:10:20",
                  "nodeType": "VariableDeclaration",
                  "scope": 25208,
                  "src": "970:18:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25205,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "970:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "924:65:20"
            }
          },
          {
            "id": 25211,
            "nodeType": "VariableDeclaration",
            "src": "1000:33:20",
            "nodes": [],
            "constant": false,
            "functionSelector": "f009451e",
            "mutability": "immutable",
            "name": "pegswap",
            "nameLocation": "1026:7:20",
            "scope": 25337,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IPegSwap_$25195",
              "typeString": "contract IPegSwap"
            },
            "typeName": {
              "id": 25210,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 25209,
                "name": "IPegSwap",
                "nameLocations": [
                  "1000:8:20"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 25195,
                "src": "1000:8:20"
              },
              "referencedDeclaration": 25195,
              "src": "1000:8:20",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IPegSwap_$25195",
                "typeString": "contract IPegSwap"
              }
            },
            "visibility": "public"
          },
          {
            "id": 25214,
            "nodeType": "VariableDeclaration",
            "src": "1040:50:20",
            "nodes": [],
            "constant": false,
            "functionSelector": "e224ea0c",
            "mutability": "immutable",
            "name": "MaticLinkSwap",
            "nameLocation": "1077:13:20",
            "scope": 25337,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_UniV3WmaticLinkSwap_$25560",
              "typeString": "contract UniV3WmaticLinkSwap"
            },
            "typeName": {
              "id": 25213,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 25212,
                "name": "UniV3WmaticLinkSwap",
                "nameLocations": [
                  "1040:19:20"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 25560,
                "src": "1040:19:20"
              },
              "referencedDeclaration": 25560,
              "src": "1040:19:20",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_UniV3WmaticLinkSwap_$25560",
                "typeString": "contract UniV3WmaticLinkSwap"
              }
            },
            "visibility": "public"
          },
          {
            "id": 25217,
            "nodeType": "VariableDeclaration",
            "src": "1142:88:20",
            "nodes": [],
            "constant": true,
            "functionSelector": "f2b1904f",
            "mutability": "constant",
            "name": "ChainlinkPegSwap",
            "nameLocation": "1166:16:20",
            "scope": 25337,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 25215,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1142:7:20",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307841413144433335366463344231386633304333343737393846443533373946334437374142433562",
              "id": 25216,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1188:42:20",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xAA1DC356dc4B18f30C347798FD5379F3D77ABC5b"
            },
            "visibility": "public"
          },
          {
            "id": 25220,
            "nodeType": "VariableDeclaration",
            "src": "1239:88:20",
            "nodes": [],
            "constant": true,
            "functionSelector": "ec75ba4a",
            "mutability": "constant",
            "name": "ERC677_Link",
            "nameLocation": "1263:11:20",
            "scope": 25337,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 25218,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1239:7:20",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307862303839373638366335343530343561466337374346323065433741353332453331323045304631",
              "id": 25219,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1285:42:20",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xb0897686c545045aFc77CF20eC7A532E3120E0F1"
            },
            "visibility": "public"
          },
          {
            "id": 25240,
            "nodeType": "FunctionDefinition",
            "src": "1420:129:20",
            "nodes": [],
            "body": {
              "id": 25239,
              "nodeType": "Block",
              "src": "1433:116:20",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 25231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 25224,
                      "name": "MaticLinkSwap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25214,
                      "src": "1444:13:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_UniV3WmaticLinkSwap_$25560",
                        "typeString": "contract UniV3WmaticLinkSwap"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 25228,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "1488:4:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_SwapMaticToLink677_$25337",
                                "typeString": "contract SwapMaticToLink677"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_SwapMaticToLink677_$25337",
                                "typeString": "contract SwapMaticToLink677"
                              }
                            ],
                            "id": 25227,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1480:7:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 25226,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1480:7:20",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 25229,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1480:13:20",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 25225,
                        "name": "UniV3WmaticLinkSwap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25560,
                        "src": "1460:19:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_UniV3WmaticLinkSwap_$25560_$",
                          "typeString": "type(contract UniV3WmaticLinkSwap)"
                        }
                      },
                      "id": 25230,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1460:34:20",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_UniV3WmaticLinkSwap_$25560",
                        "typeString": "contract UniV3WmaticLinkSwap"
                      }
                    },
                    "src": "1444:50:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_UniV3WmaticLinkSwap_$25560",
                      "typeString": "contract UniV3WmaticLinkSwap"
                    }
                  },
                  "id": 25232,
                  "nodeType": "ExpressionStatement",
                  "src": "1444:50:20"
                },
                {
                  "expression": {
                    "id": 25237,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 25233,
                      "name": "pegswap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25211,
                      "src": "1505:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IPegSwap_$25195",
                        "typeString": "contract IPegSwap"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 25235,
                          "name": "ChainlinkPegSwap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25217,
                          "src": "1524:16:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 25234,
                        "name": "IPegSwap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25195,
                        "src": "1515:8:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IPegSwap_$25195_$",
                          "typeString": "type(contract IPegSwap)"
                        }
                      },
                      "id": 25236,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1515:26:20",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IPegSwap_$25195",
                        "typeString": "contract IPegSwap"
                      }
                    },
                    "src": "1505:36:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPegSwap_$25195",
                      "typeString": "contract IPegSwap"
                    }
                  },
                  "id": 25238,
                  "nodeType": "ExpressionStatement",
                  "src": "1505:36:20"
                }
              ]
            },
            "documentation": {
              "id": 25221,
              "nodeType": "StructuredDocumentation",
              "src": "1336:78:20",
              "text": "@notice constructor is called\n @dev intializes immutable contracts"
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 25222,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1431:2:20"
            },
            "returnParameters": {
              "id": 25223,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1433:0:20"
            },
            "scope": 25337,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 25336,
            "nodeType": "FunctionDefinition",
            "src": "1863:1351:20",
            "nodes": [],
            "body": {
              "id": 25335,
              "nodeType": "Block",
              "src": "1926:1288:20",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 25252,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 25249,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1945:3:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 25250,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1949:5:20",
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "1945:9:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "hexValue": "31653138",
                          "id": 25251,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1958:4:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1e18"
                        },
                        "src": "1945:17:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d73672e76616c75652068617320746f20626520686967686572207468616e20312065746820286d6174696329",
                        "id": 25253,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1964:47:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d806cba1e4e4675319aefeca6c45b438368444ed859b371f005e8a2f196c6f75",
                          "typeString": "literal_string \"Msg.value has to be higher than 1 eth (matic)\""
                        },
                        "value": "Msg.value has to be higher than 1 eth (matic)"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d806cba1e4e4675319aefeca6c45b438368444ed859b371f005e8a2f196c6f75",
                          "typeString": "literal_string \"Msg.value has to be higher than 1 eth (matic)\""
                        }
                      ],
                      "id": 25248,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1937:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 25254,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1937:75:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25255,
                  "nodeType": "ExpressionStatement",
                  "src": "1937:75:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 25260,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 25257,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2031:3:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 25258,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2035:5:20",
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "2031:9:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "hexValue": "31653233",
                          "id": 25259,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2043:4:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000000000000000000000_by_1",
                            "typeString": "int_const 100000000000000000000000"
                          },
                          "value": "1e23"
                        },
                        "src": "2031:16:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d73672e76616c75652068617320746f206265206c657373207468616e203130303030302065746820286d6174696329",
                        "id": 25261,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2049:50:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f02ae6b1861f6914b3a2a6b8913dde90aaa0a11fd1691cd9e4a56647f794a572",
                          "typeString": "literal_string \"Msg.value has to be less than 100000 eth (matic)\""
                        },
                        "value": "Msg.value has to be less than 100000 eth (matic)"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f02ae6b1861f6914b3a2a6b8913dde90aaa0a11fd1691cd9e4a56647f794a572",
                          "typeString": "literal_string \"Msg.value has to be less than 100000 eth (matic)\""
                        }
                      ],
                      "id": 25256,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2023:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 25262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2023:77:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25263,
                  "nodeType": "ExpressionStatement",
                  "src": "2023:77:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 25270,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2238:4:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SwapMaticToLink677_$25337",
                              "typeString": "contract SwapMaticToLink677"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SwapMaticToLink677_$25337",
                              "typeString": "contract SwapMaticToLink677"
                            }
                          ],
                          "id": 25269,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2230:7:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 25268,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2230:7:20",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25271,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2230:13:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 25272,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2245:3:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 25273,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2249:5:20",
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "2245:9:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 25265,
                            "name": "wmatic",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25380,
                            "src": "2214:6:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 25264,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24850,
                          "src": "2207:6:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$24850_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 25266,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2207:14:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$24850",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 25267,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2222:7:20",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24837,
                      "src": "2207:22:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 25274,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2207:48:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 25275,
                  "nodeType": "ExpressionStatement",
                  "src": "2207:48:20"
                },
                {
                  "assignments": [
                    25277
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 25277,
                      "mutability": "mutable",
                      "name": "swapAmountOut",
                      "nameLocation": "2344:13:20",
                      "nodeType": "VariableDeclaration",
                      "scope": 25335,
                      "src": "2336:21:20",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 25276,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2336:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 25284,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 25278,
                          "name": "MaticLinkSwap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25214,
                          "src": "2361:13:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_UniV3WmaticLinkSwap_$25560",
                            "typeString": "contract UniV3WmaticLinkSwap"
                          }
                        },
                        "id": 25279,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2375:11:20",
                        "memberName": "wrapAndSwap",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 25440,
                        "src": "2361:25:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$__$returns$_t_uint256_$",
                          "typeString": "function () payable external returns (uint256)"
                        }
                      },
                      "id": 25282,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "expression": {
                            "id": 25280,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2394:3:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 25281,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2398:5:20",
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "2394:9:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "2361:43:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$__$returns$_t_uint256_$value",
                        "typeString": "function () payable external returns (uint256)"
                      }
                    },
                    "id": 25283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2361:45:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2336:70:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 25288,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 25286,
                          "name": "swapAmountOut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25277,
                          "src": "2519:13:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 25287,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2535:1:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2519:17:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "537761702072657475726e732030",
                        "id": 25289,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2538:16:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7fa46db27e13e10a04bae6a1911fde7f9c4a7b038e3282b5c77f039034f8681a",
                          "typeString": "literal_string \"Swap returns 0\""
                        },
                        "value": "Swap returns 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7fa46db27e13e10a04bae6a1911fde7f9c4a7b038e3282b5c77f039034f8681a",
                          "typeString": "literal_string \"Swap returns 0\""
                        }
                      ],
                      "id": 25285,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2511:7:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 25290,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2511:44:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25291,
                  "nodeType": "ExpressionStatement",
                  "src": "2511:44:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25296,
                        "name": "ChainlinkPegSwap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25217,
                        "src": "2681:16:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25297,
                        "name": "swapAmountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25277,
                        "src": "2699:13:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 25293,
                            "name": "bridged_Link",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25377,
                            "src": "2659:12:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 25292,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24850,
                          "src": "2652:6:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$24850_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 25294,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2652:20:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$24850",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 25295,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2673:7:20",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24837,
                      "src": "2652:28:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 25298,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2652:61:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 25299,
                  "nodeType": "ExpressionStatement",
                  "src": "2652:61:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25303,
                        "name": "swapAmountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25277,
                        "src": "2838:13:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 25304,
                        "name": "bridged_Link",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25377,
                        "src": "2853:12:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25305,
                        "name": "ERC677_Link",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25220,
                        "src": "2867:11:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 25300,
                        "name": "pegswap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25211,
                        "src": "2825:7:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPegSwap_$25195",
                          "typeString": "contract IPegSwap"
                        }
                      },
                      "id": 25302,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2833:4:20",
                      "memberName": "swap",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25194,
                      "src": "2825:12:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address,address) external"
                      }
                    },
                    "id": 25306,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2825:54:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25307,
                  "nodeType": "ExpressionStatement",
                  "src": "2825:54:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 25312,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3012:3:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 25313,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3016:6:20",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3012:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 25320,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "3062:4:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_SwapMaticToLink677_$25337",
                                  "typeString": "contract SwapMaticToLink677"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_SwapMaticToLink677_$25337",
                                  "typeString": "contract SwapMaticToLink677"
                                }
                              ],
                              "id": 25319,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3054:7:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 25318,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3054:7:20",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 25321,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3054:13:20",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 25315,
                                "name": "ERC677_Link",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 25220,
                                "src": "3031:11:20",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 25314,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24850,
                              "src": "3024:6:20",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$24850_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 25316,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3024:19:20",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$24850",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 25317,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3044:9:20",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 24807,
                          "src": "3024:29:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 25322,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3024:44:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 25309,
                            "name": "ERC677_Link",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25220,
                            "src": "2990:11:20",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 25308,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24850,
                          "src": "2983:6:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$24850_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 25310,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2983:19:20",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$24850",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 25311,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3003:8:20",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24817,
                      "src": "2983:28:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 25323,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2983:86:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 25324,
                  "nodeType": "ExpressionStatement",
                  "src": "2983:86:20"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 25326,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3138:3:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 25327,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3142:6:20",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3138:10:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 25328,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3150:3:20",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 25329,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3154:5:20",
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "3150:9:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 25330,
                        "name": "swapAmountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25277,
                        "src": "3161:13:20",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 25325,
                      "name": "SwapCompleted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25208,
                      "src": "3124:13:20",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 25331,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3124:51:20",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25332,
                  "nodeType": "EmitStatement",
                  "src": "3119:56:20"
                },
                {
                  "expression": {
                    "id": 25333,
                    "name": "swapAmountOut",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 25277,
                    "src": "3193:13:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 25247,
                  "id": 25334,
                  "nodeType": "Return",
                  "src": "3186:20:20"
                }
              ]
            },
            "documentation": {
              "id": 25241,
              "nodeType": "StructuredDocumentation",
              "src": "1557:300:20",
              "text": "@notice Swaps matic for erc677 Link in one function\n @dev call this function with a msg.value greater than 0 to swap matic for 677Link\n @param (msg.value) requires to be greater than 0 and less than 1e23 (100000Eth)\n @return swapAmountOut of token returned from operations"
            },
            "functionSelector": "8119c065",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 25244,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 25243,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "1896:12:20"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 24737,
                  "src": "1896:12:20"
                },
                "nodeType": "ModifierInvocation",
                "src": "1896:12:20"
              }
            ],
            "name": "swap",
            "nameLocation": "1872:4:20",
            "parameters": {
              "id": 25242,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1876:2:20"
            },
            "returnParameters": {
              "id": 25247,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25246,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 25336,
                  "src": "1918:7:20",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25245,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1918:7:20",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1917:9:20"
            },
            "scope": 25337,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 25197,
              "name": "UniV3WmaticLinkSwap",
              "nameLocations": [
                "854:19:20"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 25560,
              "src": "854:19:20"
            },
            "id": 25198,
            "nodeType": "InheritanceSpecifier",
            "src": "854:19:20"
          },
          {
            "baseName": {
              "id": 25199,
              "name": "ReentrancyGuard",
              "nameLocations": [
                "875:15:20"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 24772,
              "src": "875:15:20"
            },
            "id": 25200,
            "nodeType": "InheritanceSpecifier",
            "src": "875:15:20"
          }
        ],
        "canonicalName": "SwapMaticToLink677",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 25196,
          "nodeType": "StructuredDocumentation",
          "src": "510:313:20",
          "text": "@title Matic to Link ERC677 compatible in one function\n @author ZergDrone - See deployer address;\n @notice this contract contains and external function to swap matic to erc677 Link\n @dev simply create an interface for swap() external payable returns(uint256) and call from a contract"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          25337,
          24772,
          25560
        ],
        "name": "SwapMaticToLink677",
        "nameLocation": "832:18:20",
        "scope": 25338,
        "usedErrors": []
      }
    ],
    "license": "GPL-2.0-or-later"
  },
  "id": 20
}