{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "maticAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "linkAmount",
          "type": "uint256"
        }
      ],
      "name": "SwapCompleted",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "ChainlinkPegSwap",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ERC677_Link",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "checkLinkPerMatic",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLatestPrice",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pegswap",
      "outputs": [
        {
          "internalType": "contract IPegSwap",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "poolFee",
      "outputs": [
        {
          "internalType": "uint24",
          "name": "",
          "type": "uint24"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "swap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "swapRouter",
      "outputs": [
        {
          "internalType": "contract ISwapRouter",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "univ3",
      "outputs": [
        {
          "internalType": "contract SwapWMaticBridgedLinkWithUniswap",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "wrapAndSwap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60a0604052600180546001600160a01b03191673e592427a0aece92de3edee1f18e0157c0586156417905534801561003657600080fd5b50600080546001600160a01b0319908116735787befdc0ecd210dfa948264631cd53e68f7802179091556001600255600380549091163017905573aa1dc356dc4b18f30c347798fd5379f3d77abc5b608052608051610e656100aa6000396000818161019f01526106680152610e656000f3fe6080604052600436106100915760003560e01c80638e15f473116100595780638e15f47314610130578063c31c9c0714610145578063ec75ba4a14610165578063f009451e1461018d578063f2b1904f146101c157600080fd5b8063073485b714610096578063089fe6aa146100be5780630bfd3d73146100e85780632f065a2b146101205780638119c06514610128575b600080fd5b3480156100a257600080fd5b506100ab6101e9565b6040519081526020015b60405180910390f35b3480156100ca57600080fd5b506100d4610bb881565b60405162ffffff90911681526020016100b5565b3480156100f457600080fd5b50600354610108906001600160a01b031681565b6040516001600160a01b0390911681526020016100b5565b6100ab610228565b6100ab610368565b34801561013c57600080fd5b506100ab610803565b34801561015157600080fd5b50600154610108906001600160a01b031681565b34801561017157600080fd5b5061010873b0897686c545045afc77cf20ec7a532e3120e0f181565b34801561019957600080fd5b506101087f000000000000000000000000000000000000000000000000000000000000000081565b3480156101cd57600080fd5b5061010873aa1dc356dc4b18f30c347798fd5379f3d77abc5b81565b60006402540be4006101f9610803565b6102039190610c86565b61021590670de0b6b3a7640000610c86565b610223906305f5e100610ca8565b905090565b60003330146102725760405162461bcd60e51b8152602060048201526011602482015270119d5b98dd1a5bdb88191a5cd8589b1959607a1b60448201526064015b60405180910390fd5b730d500b1d8e8ef31e21c99d1db9a6444d3adf12706001600160a01b031663d0e30db0346040518263ffffffff1660e01b81526004016000604051808303818588803b1580156102c157600080fd5b505af11580156102d5573d6000803e3d6000fd5b505060405163a9059cbb60e01b8152336004820152346024820152730d500b1d8e8ef31e21c99d1db9a6444d3adf1270935063a9059cbb925060440190506020604051808303816000875af1158015610332573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103569190610cbf565b5060006103623461087c565b92915050565b6000610372610a0f565b670de0b6b3a76400003410156103e05760405162461bcd60e51b815260206004820152602d60248201527f4d73672e76616c75652068617320746f20626520686967686572207468616e2060448201526c312065746820286d617469632960981b6064820152608401610269565b69152d02c7e14af680000034106104525760405162461bcd60e51b815260206004820152603060248201527f4d73672e76616c75652068617320746f206265206c657373207468616e20313060448201526f303030302065746820286d617469632960801b6064820152608401610269565b60405163095ea7b360e01b8152306004820152346024820152730d500b1d8e8ef31e21c99d1db9a6444d3adf12709063095ea7b3906044016020604051808303816000875af11580156104a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104cd9190610cbf565b506000600360009054906101000a90046001600160a01b03166001600160a01b0316632f065a2b346040518263ffffffff1660e01b815260040160206040518083038185885af1158015610525573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061054a9190610ce8565b90506000811161058d5760405162461bcd60e51b815260206004820152600e60248201526d0537761702072657475726e7320360941b6044820152606401610269565b60405163095ea7b360e01b815273aa1dc356dc4b18f30c347798fd5379f3d77abc5b6004820152602481018290527353e0bca35ec356bd5dddfebbd1fc0fd03fabad399063095ea7b3906044016020604051808303816000875af11580156105f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061061d9190610cbf565b50604051632b7f092360e01b8152600481018290527353e0bca35ec356bd5dddfebbd1fc0fd03fabad39602482015273b0897686c545045afc77cf20ec7a532e3120e0f160448201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632b7f092390606401600060405180830381600087803b1580156106b457600080fd5b505af11580156106c8573d6000803e3d6000fd5b50506040516370a0823160e01b815230600482015273b0897686c545045afc77cf20ec7a532e3120e0f1925063a9059cbb9150339083906370a0823190602401602060405180830381865afa158015610725573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107499190610ce8565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015610794573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107b89190610cbf565b50604080513481526020810183905233917f68c14902a77c0b779e8d12c5eadac21e74962f4e4efaa8a01582d13b3945ae7f910160405180910390a290506108006001600255565b90565b6000805460408051633fabe5a360e21b8152905183926001600160a01b03169163feaf968c9160048083019260a09291908290030181865afa15801561084d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108719190610d20565b509195945050505050565b600061089e730d500b1d8e8ef31e21c99d1db9a6444d3adf1270333085610a66565b6001546108ca90730d500b1d8e8ef31e21c99d1db9a6444d3adf1270906001600160a01b031684610b70565b60006108d4610803565b905060006108e76402540be40083610c86565b6108f990670de0b6b3a7640000610c86565b610907906305f5e100610ca8565b90506000610916606483610c86565b610921906003610ca8565b61092b9083610d70565b6040805161010081018252730d500b1d8e8ef31e21c99d1db9a6444d3adf127081527353e0bca35ec356bd5dddfebbd1fc0fd03fabad396020820152610bb88183015233606082015242608082015260a0810188905260c08101839052600060e0820152600154915163414bf38960e01b8152929350916001600160a01b039091169063414bf389906109c2908490600401610d83565b6020604051808303816000875af11580156109e1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a059190610ce8565b9695505050505050565b6002805403610a605760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610269565b60028055565b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180516001600160e01b03166323b872dd60e01b1790529151600092839290881691610aca9190610e00565b6000604051808303816000865af19150503d8060008114610b07576040519150601f19603f3d011682016040523d82523d6000602084013e610b0c565b606091505b5091509150818015610b36575080511580610b36575080806020019051810190610b369190610cbf565b610b685760405162461bcd60e51b815260206004820152600360248201526229aa2360e91b6044820152606401610269565b505050505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663095ea7b360e01b1790529151600092839290871691610bcc9190610e00565b6000604051808303816000865af19150503d8060008114610c09576040519150601f19603f3d011682016040523d82523d6000602084013e610c0e565b606091505b5091509150818015610c38575080511580610c38575080806020019051810190610c389190610cbf565b610c695760405162461bcd60e51b8152602060048201526002602482015261534160f01b6044820152606401610269565b5050505050565b634e487b7160e01b600052601160045260246000fd5b600082610ca357634e487b7160e01b600052601260045260246000fd5b500490565b808202811582820484141761036257610362610c70565b600060208284031215610cd157600080fd5b81518015158114610ce157600080fd5b9392505050565b600060208284031215610cfa57600080fd5b5051919050565b805169ffffffffffffffffffff81168114610d1b57600080fd5b919050565b600080600080600060a08688031215610d3857600080fd5b610d4186610d01565b9450602086015193506040860151925060608601519150610d6460808701610d01565b90509295509295909350565b8181038181111561036257610362610c70565b60006101008201905060018060a01b0380845116835280602085015116602084015262ffffff6040850151166040840152806060850151166060840152506080830151608083015260a083015160a083015260c083015160c083015260e0830151610df960e08401826001600160a01b03169052565b5092915050565b6000825160005b81811015610e215760208186018101518583015201610e07565b50600092019182525091905056fea264697066735822122090c96713c69e54ece92b3d8749aa533ec0f04a9331af8ce4f75059bacfcea2e164736f6c63430008110033",
    "sourceMap": "808:2406:19:-:0;;;1031:88:20;;;-1:-1:-1;;;;;;1031:88:20;1076:42;1031:88;;;1419:134:19;;;;;;;;;-1:-1:-1;1826:9:20;:101;;-1:-1:-1;;;;;;1826:101:20;;;1874:42;1826:101;;;;;1821:7:14;:22;1443:5:19;:55;;;;;1492:4;1443:55;;;1137:42;1509:36;;808:2406;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106100915760003560e01c80638e15f473116100595780638e15f47314610130578063c31c9c0714610145578063ec75ba4a14610165578063f009451e1461018d578063f2b1904f146101c157600080fd5b8063073485b714610096578063089fe6aa146100be5780630bfd3d73146100e85780632f065a2b146101205780638119c06514610128575b600080fd5b3480156100a257600080fd5b506100ab6101e9565b6040519081526020015b60405180910390f35b3480156100ca57600080fd5b506100d4610bb881565b60405162ffffff90911681526020016100b5565b3480156100f457600080fd5b50600354610108906001600160a01b031681565b6040516001600160a01b0390911681526020016100b5565b6100ab610228565b6100ab610368565b34801561013c57600080fd5b506100ab610803565b34801561015157600080fd5b50600154610108906001600160a01b031681565b34801561017157600080fd5b5061010873b0897686c545045afc77cf20ec7a532e3120e0f181565b34801561019957600080fd5b506101087f000000000000000000000000000000000000000000000000000000000000000081565b3480156101cd57600080fd5b5061010873aa1dc356dc4b18f30c347798fd5379f3d77abc5b81565b60006402540be4006101f9610803565b6102039190610c86565b61021590670de0b6b3a7640000610c86565b610223906305f5e100610ca8565b905090565b60003330146102725760405162461bcd60e51b8152602060048201526011602482015270119d5b98dd1a5bdb88191a5cd8589b1959607a1b60448201526064015b60405180910390fd5b730d500b1d8e8ef31e21c99d1db9a6444d3adf12706001600160a01b031663d0e30db0346040518263ffffffff1660e01b81526004016000604051808303818588803b1580156102c157600080fd5b505af11580156102d5573d6000803e3d6000fd5b505060405163a9059cbb60e01b8152336004820152346024820152730d500b1d8e8ef31e21c99d1db9a6444d3adf1270935063a9059cbb925060440190506020604051808303816000875af1158015610332573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103569190610cbf565b5060006103623461087c565b92915050565b6000610372610a0f565b670de0b6b3a76400003410156103e05760405162461bcd60e51b815260206004820152602d60248201527f4d73672e76616c75652068617320746f20626520686967686572207468616e2060448201526c312065746820286d617469632960981b6064820152608401610269565b69152d02c7e14af680000034106104525760405162461bcd60e51b815260206004820152603060248201527f4d73672e76616c75652068617320746f206265206c657373207468616e20313060448201526f303030302065746820286d617469632960801b6064820152608401610269565b60405163095ea7b360e01b8152306004820152346024820152730d500b1d8e8ef31e21c99d1db9a6444d3adf12709063095ea7b3906044016020604051808303816000875af11580156104a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104cd9190610cbf565b506000600360009054906101000a90046001600160a01b03166001600160a01b0316632f065a2b346040518263ffffffff1660e01b815260040160206040518083038185885af1158015610525573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061054a9190610ce8565b90506000811161058d5760405162461bcd60e51b815260206004820152600e60248201526d0537761702072657475726e7320360941b6044820152606401610269565b60405163095ea7b360e01b815273aa1dc356dc4b18f30c347798fd5379f3d77abc5b6004820152602481018290527353e0bca35ec356bd5dddfebbd1fc0fd03fabad399063095ea7b3906044016020604051808303816000875af11580156105f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061061d9190610cbf565b50604051632b7f092360e01b8152600481018290527353e0bca35ec356bd5dddfebbd1fc0fd03fabad39602482015273b0897686c545045afc77cf20ec7a532e3120e0f160448201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632b7f092390606401600060405180830381600087803b1580156106b457600080fd5b505af11580156106c8573d6000803e3d6000fd5b50506040516370a0823160e01b815230600482015273b0897686c545045afc77cf20ec7a532e3120e0f1925063a9059cbb9150339083906370a0823190602401602060405180830381865afa158015610725573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107499190610ce8565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015610794573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107b89190610cbf565b50604080513481526020810183905233917f68c14902a77c0b779e8d12c5eadac21e74962f4e4efaa8a01582d13b3945ae7f910160405180910390a290506108006001600255565b90565b6000805460408051633fabe5a360e21b8152905183926001600160a01b03169163feaf968c9160048083019260a09291908290030181865afa15801561084d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108719190610d20565b509195945050505050565b600061089e730d500b1d8e8ef31e21c99d1db9a6444d3adf1270333085610a66565b6001546108ca90730d500b1d8e8ef31e21c99d1db9a6444d3adf1270906001600160a01b031684610b70565b60006108d4610803565b905060006108e76402540be40083610c86565b6108f990670de0b6b3a7640000610c86565b610907906305f5e100610ca8565b90506000610916606483610c86565b610921906003610ca8565b61092b9083610d70565b6040805161010081018252730d500b1d8e8ef31e21c99d1db9a6444d3adf127081527353e0bca35ec356bd5dddfebbd1fc0fd03fabad396020820152610bb88183015233606082015242608082015260a0810188905260c08101839052600060e0820152600154915163414bf38960e01b8152929350916001600160a01b039091169063414bf389906109c2908490600401610d83565b6020604051808303816000875af11580156109e1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a059190610ce8565b9695505050505050565b6002805403610a605760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610269565b60028055565b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180516001600160e01b03166323b872dd60e01b1790529151600092839290881691610aca9190610e00565b6000604051808303816000865af19150503d8060008114610b07576040519150601f19603f3d011682016040523d82523d6000602084013e610b0c565b606091505b5091509150818015610b36575080511580610b36575080806020019051810190610b369190610cbf565b610b685760405162461bcd60e51b815260206004820152600360248201526229aa2360e91b6044820152606401610269565b505050505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663095ea7b360e01b1790529151600092839290871691610bcc9190610e00565b6000604051808303816000865af19150503d8060008114610c09576040519150601f19603f3d011682016040523d82523d6000602084013e610c0e565b606091505b5091509150818015610c38575080511580610c38575080806020019051810190610c389190610cbf565b610c695760405162461bcd60e51b8152602060048201526002602482015261534160f01b6044820152606401610269565b5050505050565b634e487b7160e01b600052601160045260246000fd5b600082610ca357634e487b7160e01b600052601260045260246000fd5b500490565b808202811582820484141761036257610362610c70565b600060208284031215610cd157600080fd5b81518015158114610ce157600080fd5b9392505050565b600060208284031215610cfa57600080fd5b5051919050565b805169ffffffffffffffffffff81168114610d1b57600080fd5b919050565b600080600080600060a08688031215610d3857600080fd5b610d4186610d01565b9450602086015193506040860151925060608601519150610d6460808701610d01565b90509295509295909350565b8181038181111561036257610362610c70565b60006101008201905060018060a01b0380845116835280602085015116602084015262ffffff6040850151166040840152806060850151166060840152506080830151608083015260a083015160a083015260c083015160c083015260e0830151610df960e08401826001600160a01b03169052565b5092915050565b6000825160005b81811015610e215760208186018101518583015201610e07565b50600092019182525091905056fea264697066735822122090c96713c69e54ece92b3d8749aa533ec0f04a9331af8ce4f75059bacfcea2e164736f6c63430008110033",
    "sourceMap": "808:2406:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5212:133:20;;;;;;;;;;;;;:::i;:::-;;;160:25:22;;;148:2;133:18;5212:133:20;;;;;;;;1551:37;;;;;;;;;;;;1584:4;1551:37;;;;;370:8:22;358:21;;;340:40;;328:2;313:18;1551:37:20;196:190:22;1186:45:19;;;;;;;;;;-1:-1:-1;1186:45:19;;;;-1:-1:-1;;;;;1186:45:19;;;;;;-1:-1:-1;;;;;597:32:22;;;579:51;;567:2;552:18;1186:45:19;391:245:22;2293:332:20;;;:::i;1867:1335:19:-;;;:::i;4997:209:20:-;;;;;;;;;;;;;:::i;1031:88::-;;;;;;;;;;-1:-1:-1;1031:88:20;;;;-1:-1:-1;;;;;1031:88:20;;;1238::19;;;;;;;;;;;;1284:42;1238:88;;1006:33;;;;;;;;;;;;;;;1091:88;;;;;;;;;;;;1137:42;1091:88;;5212:133:20;5262:7;5324:4;5306:16;:14;:16::i;:::-;5298:30;;;;:::i;:::-;5290:39;;:4;:39;:::i;:::-;5289:47;;5333:3;5289:47;:::i;:::-;5281:56;;5212:133;:::o;2293:332::-;2342:7;2369:10;2389:4;2369:25;2361:55;;;;-1:-1:-1;;;2361:55:20;;2322:2:22;2361:55:20;;;2304:21:22;2361:2;2341:18;;;2334:30;-1:-1:-1;;;2380:18:22;;;2373:47;2437:18;;2361:55:20;;;;;;;;;1442:42;-1:-1:-1;;;;;2427:23:20;;2458:9;2427:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2481:47:20;;-1:-1:-1;;;2481:47:20;;2506:10;2481:47;;;2640:51:22;2518:9:20;2707:18:22;;;2700:34;1442:42:20;;-1:-1:-1;2481:24:20;;-1:-1:-1;2613:18:22;;;-1:-1:-1;2481:47:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2539:17;2559:31;2580:9;2559:20;:31::i;:::-;2539:51;2293:332;-1:-1:-1;;2293:332:20:o;1867:1335:19:-;1922:7;2261:21:14;:19;:21::i;:::-;1962:4:19::1;1949:9;:17;;1941:75;;;::::0;-1:-1:-1;;;1941:75:19;;3229:2:22;1941:75:19::1;::::0;::::1;3211:21:22::0;3268:2;3248:18;;;3241:30;3307:34;3287:18;;;3280:62;-1:-1:-1;;;3358:18:22;;;3351:43;3411:19;;1941:75:19::1;3027:409:22::0;1941:75:19::1;2047:4;2035:9;:16;2027:77;;;::::0;-1:-1:-1;;;2027:77:19;;3643:2:22;2027:77:19::1;::::0;::::1;3625:21:22::0;3682:2;3662:18;;;3655:30;3721:34;3701:18;;;3694:62;-1:-1:-1;;;3772:18:22;;;3765:46;3828:19;;2027:77:19::1;3441:412:22::0;2027:77:19::1;2211:48;::::0;-1:-1:-1;;;2211:48:19;;2242:4:::1;2211:48;::::0;::::1;2640:51:22::0;2249:9:19::1;2707:18:22::0;;;2700:34;1442:42:20::1;::::0;2211:22:19::1;::::0;2613:18:22;;2211:48:19::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2332:21;2357:5;;;;;;;;;-1:-1:-1::0;;;;;2357:5:19::1;-1:-1:-1::0;;;;;2357:17:19::1;;2382:9;2357:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2332:62;;2523:1;2507:13;:17;2499:44;;;::::0;-1:-1:-1;;;2499:44:19;;4249:2:22;2499:44:19::1;::::0;::::1;4231:21:22::0;4288:2;4268:18;;;4261:30;-1:-1:-1;;;4307:18:22;;;4300:44;4361:18;;2499:44:19::1;4047:338:22::0;2499:44:19::1;2640:61;::::0;-1:-1:-1;;;2640:61:19;;1137:42:::1;2640:61;::::0;::::1;:51:22::0;2707:18;;;2700:34;;;1366:42:20::1;::::0;2640:28:19::1;::::0;2613:18:22;;2640:61:19::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;2813:54:19::1;::::0;-1:-1:-1;;;2813:54:19;;::::1;::::0;::::1;4592:25:22::0;;;1366:42:20::1;4671:18:22::0;;;4664:43;1284:42:19::1;4723:18:22::0;;;4716:43;2813:7:19::1;-1:-1:-1::0;;;;;2813:12:19::1;::::0;::::1;::::0;4565:18:22;;2813:54:19::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;3012:44:19::1;::::0;-1:-1:-1;;;3012:44:19;;3050:4:::1;3012:44;::::0;::::1;579:51:22::0;1284:42:19::1;::::0;-1:-1:-1;2971:28:19::1;::::0;-1:-1:-1;3000:10:19::1;::::0;1284:42;;3012:29:::1;::::0;552:18:22;;3012:44:19::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2971:86;::::0;-1:-1:-1;;;;;;2971:86:19::1;::::0;;;;;;-1:-1:-1;;;;;2658:32:22;;;2971:86:19::1;::::0;::::1;2640:51:22::0;2707:18;;;2700:34;2613:18;;2971:86:19::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;3112:51:19::1;::::0;;3138:9:::1;4944:25:22::0;;5000:2;4985:18;;4978:34;;;3126:10:19::1;::::0;3112:51:::1;::::0;4917:18:22;3112:51:19::1;;;;;;;3181:13:::0;-1:-1:-1;2303:20:14;1716:1;2809:7;:22;2629:209;2303:20;1867:1335:19;:::o;4997:209:20:-;5044:3;5144:9;;:27;;;-1:-1:-1;;;5144:27:20;;;;5044:3;;-1:-1:-1;;;;;5144:9:20;;:25;;:27;;;;;;;;;;;;;;:9;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5060:111:20;;4997:209;-1:-1:-1;;;;;4997:209:20:o;3146:1550::-;3212:17;3364:76;1442:42;3404:10;3424:4;3431:8;3364:31;:76::i;:::-;3544:10;;3501:65;;1442:42;;-1:-1:-1;;;;;3544:10:20;3557:8;3501:26;:65::i;:::-;3624:13;3648:16;:14;:16::i;:::-;3624:41;-1:-1:-1;3734:14:20;3761:10;3767:4;3624:41;3761:10;:::i;:::-;3753:19;;:4;:19;:::i;:::-;3752:27;;3776:3;3752:27;:::i;:::-;3734:46;-1:-1:-1;3874:14:20;3903:12;3912:3;3734:46;3903:12;:::i;:::-;3902:16;;3917:1;3902:16;:::i;:::-;3893:25;;:6;:25;:::i;:::-;4081:486;;;;;;;;1442:42;4081:486;;1366:42;4081:486;;;;1584:4;4081:486;;;;4252:10;4081:486;;;;4291:15;4081:486;;;;;;;;;;;;;;;;-1:-1:-1;4081:486:20;;;;4653:10;;:35;;-1:-1:-1;;;4653:35:20;;4081:486;;-1:-1:-1;4081:486:20;-1:-1:-1;;;;;4653:10:20;;;;:27;;:35;;4081:486;;4653:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4641:47;3146:1550;-1:-1:-1;;;;;;3146:1550:20:o;2336:287:14:-;1759:1;2468:7;;:19;2460:63;;;;-1:-1:-1;;;2460:63:14;;6866:2:22;2460:63:14;;;6848:21:22;6905:2;6885:18;;;6878:30;6944:33;6924:18;;;6917:61;6995:18;;2460:63:14;6664:355:22;2460:63:14;1759:1;2598:18;;2336:287::o;561:358:18:-;759:69;;;-1:-1:-1;;;;;7282:15:22;;;759:69:18;;;7264:34:22;7334:15;;;7314:18;;;7307:43;7366:18;;;;7359:34;;;759:69:18;;;;;;;;;;7199:18:22;;;;759:69:18;;;;;;;-1:-1:-1;;;;;759:69:18;-1:-1:-1;;;759:69:18;;;748:81;;-1:-1:-1;;;;748:10:18;;;;:81;;759:69;748:81;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;700:129;;;;847:7;:57;;;;-1:-1:-1;859:11:18;;:16;;:44;;;890:4;879:24;;;;;;;;;;;;:::i;:::-;839:73;;;;-1:-1:-1;;;839:73:18;;8023:2:22;839:73:18;;;8005:21:22;8062:1;8042:18;;;8035:29;-1:-1:-1;;;8080:18:22;;;8073:33;8123:18;;839:73:18;7821:326:22;839:73:18;690:229;;561:358;;;;:::o;1873:307::-;2032:58;;;-1:-1:-1;;;;;2658:32:22;;;2032:58:18;;;2640:51:22;2707:18;;;;2700:34;;;2032:58:18;;;;;;;;;;2613:18:22;;;;2032:58:18;;;;;;;-1:-1:-1;;;;;2032:58:18;-1:-1:-1;;;2032:58:18;;;2021:70;;-1:-1:-1;;;;2021:10:18;;;;:70;;2032:58;2021:70;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1985:106;;;;2109:7;:57;;;;-1:-1:-1;2121:11:18;;:16;;:44;;;2152:4;2141:24;;;;;;;;;;;;:::i;:::-;2101:72;;;;-1:-1:-1;;;2101:72:18;;8354:2:22;2101:72:18;;;8336:21:22;8393:1;8373:18;;;8366:29;-1:-1:-1;;;8411:18:22;;;8404:32;8453:18;;2101:72:18;8152:325:22;2101:72:18;1975:205;;1873:307;;;:::o;1593:127:22:-;1654:10;1649:3;1645:20;1642:1;1635:31;1685:4;1682:1;1675:15;1709:4;1706:1;1699:15;1725:217;1765:1;1791;1781:132;;1835:10;1830:3;1826:20;1823:1;1816:31;1870:4;1867:1;1860:15;1898:4;1895:1;1888:15;1781:132;-1:-1:-1;1927:9:22;;1725:217::o;1947:168::-;2020:9;;;2051;;2068:15;;;2062:22;;2048:37;2038:71;;2089:18;;:::i;2745:277::-;2812:6;2865:2;2853:9;2844:7;2840:23;2836:32;2833:52;;;2881:1;2878;2871:12;2833:52;2913:9;2907:16;2966:5;2959:13;2952:21;2945:5;2942:32;2932:60;;2988:1;2985;2978:12;2932:60;3011:5;2745:277;-1:-1:-1;;;2745:277:22:o;3858:184::-;3928:6;3981:2;3969:9;3960:7;3956:23;3952:32;3949:52;;;3997:1;3994;3987:12;3949:52;-1:-1:-1;4020:16:22;;3858:184;-1:-1:-1;3858:184:22:o;5023:179::-;5101:13;;5154:22;5143:34;;5133:45;;5123:73;;5192:1;5189;5182:12;5123:73;5023:179;;;:::o;5207:473::-;5310:6;5318;5326;5334;5342;5395:3;5383:9;5374:7;5370:23;5366:33;5363:53;;;5412:1;5409;5402:12;5363:53;5435:39;5464:9;5435:39;:::i;:::-;5425:49;;5514:2;5503:9;5499:18;5493:25;5483:35;;5558:2;5547:9;5543:18;5537:25;5527:35;;5602:2;5591:9;5587:18;5581:25;5571:35;;5625:49;5669:3;5658:9;5654:19;5625:49;:::i;:::-;5615:59;;5207:473;;;;;;;;:::o;5685:128::-;5752:9;;;5773:11;;;5770:37;;;5787:18;;:::i;5818:841::-;5992:4;6034:3;6023:9;6019:19;6011:27;;6074:1;6070;6065:3;6061:11;6057:19;6122:2;6113:6;6107:13;6103:22;6092:9;6085:41;6194:2;6186:4;6178:6;6174:17;6168:24;6164:33;6157:4;6146:9;6142:20;6135:63;6266:8;6258:4;6250:6;6246:17;6240:24;6236:39;6229:4;6218:9;6214:20;6207:69;6344:2;6336:4;6328:6;6324:17;6318:24;6314:33;6307:4;6296:9;6292:20;6285:63;;6404:4;6396:6;6392:17;6386:24;6379:4;6368:9;6364:20;6357:54;6467:4;6459:6;6455:17;6449:24;6442:4;6431:9;6427:20;6420:54;6530:4;6522:6;6518:17;6512:24;6505:4;6494:9;6490:20;6483:54;6584:4;6576:6;6572:17;6566:24;6599:54;6647:4;6636:9;6632:20;6618:12;-1:-1:-1;;;;;1116:31:22;1104:44;;1050:104;6599:54;;5818:841;;;;:::o;7404:412::-;7533:3;7571:6;7565:13;7596:1;7606:129;7620:6;7617:1;7614:13;7606:129;;;7718:4;7702:14;;;7698:25;;7692:32;7679:11;;;7672:53;7635:12;7606:129;;;-1:-1:-1;7790:1:22;7754:16;;7779:13;;;-1:-1:-1;7754:16:22;7404:412;-1:-1:-1;7404:412:22:o",
    "linkReferences": {},
    "immutableReferences": {
      "25167": [
        {
          "start": 415,
          "length": 32
        },
        {
          "start": 1640,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "ChainlinkPegSwap()": "f2b1904f",
    "ERC677_Link()": "ec75ba4a",
    "checkLinkPerMatic()": "073485b7",
    "getLatestPrice()": "8e15f473",
    "pegswap()": "f009451e",
    "poolFee()": "089fe6aa",
    "swap()": "8119c065",
    "swapRouter()": "c31c9c07",
    "univ3()": "0bfd3d73",
    "wrapAndSwap()": "2f065a2b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maticAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"linkAmount\",\"type\":\"uint256\"}],\"name\":\"SwapCompleted\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ChainlinkPegSwap\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ERC677_Link\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"checkLinkPerMatic\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLatestPrice\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pegswap\",\"outputs\":[{\"internalType\":\"contract IPegSwap\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolFee\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapRouter\",\"outputs\":[{\"internalType\":\"contract ISwapRouter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"univ3\",\"outputs\":[{\"internalType\":\"contract SwapWMaticBridgedLinkWithUniswap\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wrapAndSwap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"ZergDrone - See deployer address;\",\"details\":\"simply create an interface for swap() external payable returns(uint256) and call from a contract\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"intializes immutable contracts\"},\"swap()\":{\"details\":\"call this function with a msg.value greater than 0 to swap matic for 677Link\",\"params\":{\"\":\"(msg.value) requires to be greater than 0 and less than 1e23 (100000Eth)\"},\"returns\":{\"_0\":\"swapAmountOut of token returned from operations\"}},\"wrapAndSwap()\":{\"details\":\"this function is called by MaticLinkSwap contract to wrap matic and launch a Uni v3 single swap\",\"returns\":{\"_0\":\"amountOut the amount of token sent back after wrapping to wmatic and then swapping for bridged_Link\"}}},\"title\":\"Matic to Link ERC677 compatible in one function\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"constructor is called\"},\"swap()\":{\"notice\":\"Swaps matic for erc677 Link in one function\"},\"wrapAndSwap()\":{\"notice\":\"Uses IWmatic interface to deposit matic for wrapped matic, finally swaps wrapped matic for bridged_Link\"}},\"notice\":\"this contract contains and external function to swap matic to erc677 Link\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/MaticTo677LinkSwap.sol\":\"MaticTo677LinkSwap\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@uniswap/=lib/uniswap/\",\":ds-test/=lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":std/=lib/forge-std/src/\",\":uniswap/=lib/uniswap/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x03a26b0ce85afee2c16f3232bd123286b849ca576778781cf6e8bbf51cb7570a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13a4f5cec214760f14abaedfc0a1860d80c2267386fa62dc77e8eee51ec84d71\",\"dweb:/ipfs/QmWmEKeofHqLnNEeCivhzTepo1k5xZZqzMxyyyzNBYiYBW\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"lib/uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]},\"lib/uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":{\"keccak256\":\"0x9af98b0908c96320ca6d08b22f0efca864742f6adbe5794cafe2d1d2e808b0cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://da1d1e81e5bf534f0bf2934b3193db6cb1933f91ec006d2b88e9ad10a617a2d2\",\"dweb:/ipfs/QmcPBk47QLMFWcX2y2S9eMFsJgoYWBd3R8ey55Bgmv6w6v\"]},\"src/MaticTo677LinkSwap.sol\":{\"keccak256\":\"0x0171727a9a79df3ddfa2d16bb51d027c862e954057b235b850aa05d5f4997354\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f776ae06fa498995fe2e41a9e4f0c8a3dab5126f266586795f16cb548c4b52c3\",\"dweb:/ipfs/QmXatN3PNdAWUy9QJGciemBXNWr82ouUKCGMMfFcV8Yxb5\"]},\"src/Swap.sol\":{\"keccak256\":\"0x21055de39164c449a4aead189e85c531740d7a13e042ce8be2eff099216e96aa\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5ff599eff892a2cfdfbf02f45f6bdbd0d400df85a15d437101f8cc6097258fa7\",\"dweb:/ipfs/QmeQUVWfkKsUbn3AduU1GH2Z9Gvk91YtQJbzxg8NDDu6hE\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "caller",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "maticAmount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "linkAmount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SwapCompleted",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ChainlinkPegSwap",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ERC677_Link",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "checkLinkPerMatic",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getLatestPrice",
          "outputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "pegswap",
          "outputs": [
            {
              "internalType": "contract IPegSwap",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "poolFee",
          "outputs": [
            {
              "internalType": "uint24",
              "name": "",
              "type": "uint24"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "function",
          "name": "swap",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "swapRouter",
          "outputs": [
            {
              "internalType": "contract ISwapRouter",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "univ3",
          "outputs": [
            {
              "internalType": "contract SwapWMaticBridgedLinkWithUniswap",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "function",
          "name": "wrapAndSwap",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "constructor": {
            "details": "intializes immutable contracts"
          },
          "swap()": {
            "details": "call this function with a msg.value greater than 0 to swap matic for 677Link",
            "params": {
              "": "(msg.value) requires to be greater than 0 and less than 1e23 (100000Eth)"
            },
            "returns": {
              "_0": "swapAmountOut of token returned from operations"
            }
          },
          "wrapAndSwap()": {
            "details": "this function is called by MaticLinkSwap contract to wrap matic and launch a Uni v3 single swap",
            "returns": {
              "_0": "amountOut the amount of token sent back after wrapping to wmatic and then swapping for bridged_Link"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "constructor": {
            "notice": "constructor is called"
          },
          "swap()": {
            "notice": "Swaps matic for erc677 Link in one function"
          },
          "wrapAndSwap()": {
            "notice": "Uses IWmatic interface to deposit matic for wrapped matic, finally swaps wrapped matic for bridged_Link"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":@uniswap/=lib/uniswap/",
        ":ds-test/=lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        ":std/=lib/forge-std/src/",
        ":uniswap/=lib/uniswap/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/MaticTo677LinkSwap.sol": "MaticTo677LinkSwap"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol": {
        "keccak256": "0x03a26b0ce85afee2c16f3232bd123286b849ca576778781cf6e8bbf51cb7570a",
        "urls": [
          "bzz-raw://13a4f5cec214760f14abaedfc0a1860d80c2267386fa62dc77e8eee51ec84d71",
          "dweb:/ipfs/QmWmEKeofHqLnNEeCivhzTepo1k5xZZqzMxyyyzNBYiYBW"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "lib/uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
        "keccak256": "0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69",
        "urls": [
          "bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652",
          "dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
        "keccak256": "0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975",
        "urls": [
          "bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53",
          "dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/uniswap/v3-periphery/contracts/libraries/TransferHelper.sol": {
        "keccak256": "0x9af98b0908c96320ca6d08b22f0efca864742f6adbe5794cafe2d1d2e808b0cd",
        "urls": [
          "bzz-raw://da1d1e81e5bf534f0bf2934b3193db6cb1933f91ec006d2b88e9ad10a617a2d2",
          "dweb:/ipfs/QmcPBk47QLMFWcX2y2S9eMFsJgoYWBd3R8ey55Bgmv6w6v"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/MaticTo677LinkSwap.sol": {
        "keccak256": "0x0171727a9a79df3ddfa2d16bb51d027c862e954057b235b850aa05d5f4997354",
        "urls": [
          "bzz-raw://f776ae06fa498995fe2e41a9e4f0c8a3dab5126f266586795f16cb548c4b52c3",
          "dweb:/ipfs/QmXatN3PNdAWUy9QJGciemBXNWr82ouUKCGMMfFcV8Yxb5"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/Swap.sol": {
        "keccak256": "0x21055de39164c449a4aead189e85c531740d7a13e042ce8be2eff099216e96aa",
        "urls": [
          "bzz-raw://5ff599eff892a2cfdfbf02f45f6bdbd0d400df85a15d437101f8cc6097258fa7",
          "dweb:/ipfs/QmeQUVWfkKsUbn3AduU1GH2Z9Gvk91YtQJbzxg8NDDu6hE"
        ],
        "license": "GPL-2.0-or-later"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/MaticTo677LinkSwap.sol",
    "id": 25294,
    "exportedSymbols": {
      "AggregatorV3Interface": [
        25323
      ],
      "IERC20": [
        24850
      ],
      "IPegSwap": [
        25151
      ],
      "ISwapRouter": [
        24964
      ],
      "IUniswapV3SwapCallback": [
        24864
      ],
      "IWMatic": [
        25309
      ],
      "MaticTo677LinkSwap": [
        25293
      ],
      "ReentrancyGuard": [
        24772
      ],
      "SwapWMaticBridgedLinkWithUniswap": [
        25530
      ],
      "TransferHelper": [
        25135
      ]
    },
    "nodeType": "SourceUnit",
    "src": "46:3170:19",
    "nodes": [
      {
        "id": 25137,
        "nodeType": "PragmaDirective",
        "src": "46:23:19",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".6"
        ]
      },
      {
        "id": 25138,
        "nodeType": "PragmaDirective",
        "src": "71:19:19",
        "nodes": [],
        "literals": [
          "abicoder",
          "v2"
        ]
      },
      {
        "id": 25139,
        "nodeType": "ImportDirective",
        "src": "96:25:19",
        "nodes": [],
        "absolutePath": "src/Swap.sol",
        "file": "../src/Swap.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 25294,
        "sourceUnit": 25531,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 25140,
        "nodeType": "ImportDirective",
        "src": "123:62:19",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol",
        "file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 25294,
        "sourceUnit": 24773,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 25151,
        "nodeType": "ContractDefinition",
        "src": "390:99:19",
        "nodes": [
          {
            "id": 25150,
            "nodeType": "FunctionDefinition",
            "src": "415:71:19",
            "nodes": [],
            "functionSelector": "2b7f0923",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "swap",
            "nameLocation": "424:4:19",
            "parameters": {
              "id": 25148,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25143,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "437:6:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 25150,
                  "src": "429:14:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25142,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "429:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25145,
                  "mutability": "mutable",
                  "name": "source",
                  "nameLocation": "453:6:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 25150,
                  "src": "445:14:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25144,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "445:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25147,
                  "mutability": "mutable",
                  "name": "target",
                  "nameLocation": "469:6:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 25150,
                  "src": "461:14:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25146,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "461:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "428:48:19"
            },
            "returnParameters": {
              "id": 25149,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "485:0:19"
            },
            "scope": 25151,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IPegSwap",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 25141,
          "nodeType": "StructuredDocumentation",
          "src": "195:195:19",
          "text": "@title interface for chainlink PegSwap\n @notice needed to interact with PegSwap contract \n @dev Interface for PegSwap contract at 0xAA1DC356dc4B18f30C347798FD5379F3D77ABC5b "
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          25151
        ],
        "name": "IPegSwap",
        "nameLocation": "400:8:19",
        "scope": 25294,
        "usedErrors": []
      },
      {
        "id": 25293,
        "nodeType": "ContractDefinition",
        "src": "808:2406:19",
        "nodes": [
          {
            "id": 25164,
            "nodeType": "EventDefinition",
            "src": "903:85:19",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "68c14902a77c0b779e8d12c5eadac21e74962f4e4efaa8a01582d13b3945ae7f",
            "name": "SwapCompleted",
            "nameLocation": "909:13:19",
            "parameters": {
              "id": 25163,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25158,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "caller",
                  "nameLocation": "939:6:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 25164,
                  "src": "923:22:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25157,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "923:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25160,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "maticAmount",
                  "nameLocation": "955:11:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 25164,
                  "src": "947:19:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25159,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "947:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25162,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "linkAmount",
                  "nameLocation": "976:10:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 25164,
                  "src": "968:18:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25161,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "968:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "922:65:19"
            }
          },
          {
            "id": 25167,
            "nodeType": "VariableDeclaration",
            "src": "1006:33:19",
            "nodes": [],
            "constant": false,
            "functionSelector": "f009451e",
            "mutability": "immutable",
            "name": "pegswap",
            "nameLocation": "1032:7:19",
            "scope": 25293,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IPegSwap_$25151",
              "typeString": "contract IPegSwap"
            },
            "typeName": {
              "id": 25166,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 25165,
                "name": "IPegSwap",
                "nameLocations": [
                  "1006:8:19"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 25151,
                "src": "1006:8:19"
              },
              "referencedDeclaration": 25151,
              "src": "1006:8:19",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IPegSwap_$25151",
                "typeString": "contract IPegSwap"
              }
            },
            "visibility": "public"
          },
          {
            "id": 25170,
            "nodeType": "VariableDeclaration",
            "src": "1091:88:19",
            "nodes": [],
            "constant": true,
            "functionSelector": "f2b1904f",
            "mutability": "constant",
            "name": "ChainlinkPegSwap",
            "nameLocation": "1115:16:19",
            "scope": 25293,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 25168,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1091:7:19",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307841413144433335366463344231386633304333343737393846443533373946334437374142433562",
              "id": 25169,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1137:42:19",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xAA1DC356dc4B18f30C347798FD5379F3D77ABC5b"
            },
            "visibility": "public"
          },
          {
            "id": 25173,
            "nodeType": "VariableDeclaration",
            "src": "1186:45:19",
            "nodes": [],
            "constant": false,
            "functionSelector": "0bfd3d73",
            "mutability": "mutable",
            "name": "univ3",
            "nameLocation": "1226:5:19",
            "scope": 25293,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_SwapWMaticBridgedLinkWithUniswap_$25530",
              "typeString": "contract SwapWMaticBridgedLinkWithUniswap"
            },
            "typeName": {
              "id": 25172,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 25171,
                "name": "SwapWMaticBridgedLinkWithUniswap",
                "nameLocations": [
                  "1186:32:19"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 25530,
                "src": "1186:32:19"
              },
              "referencedDeclaration": 25530,
              "src": "1186:32:19",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SwapWMaticBridgedLinkWithUniswap_$25530",
                "typeString": "contract SwapWMaticBridgedLinkWithUniswap"
              }
            },
            "visibility": "public"
          },
          {
            "id": 25176,
            "nodeType": "VariableDeclaration",
            "src": "1238:88:19",
            "nodes": [],
            "constant": true,
            "functionSelector": "ec75ba4a",
            "mutability": "constant",
            "name": "ERC677_Link",
            "nameLocation": "1262:11:19",
            "scope": 25293,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 25174,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1238:7:19",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307862303839373638366335343530343561466337374346323065433741353332453331323045304631",
              "id": 25175,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1284:42:19",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xb0897686c545045aFc77CF20eC7A532E3120E0F1"
            },
            "visibility": "public"
          },
          {
            "id": 25196,
            "nodeType": "FunctionDefinition",
            "src": "1419:134:19",
            "nodes": [],
            "body": {
              "id": 25195,
              "nodeType": "Block",
              "src": "1432:121:19",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 25187,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 25180,
                      "name": "univ3",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25173,
                      "src": "1443:5:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SwapWMaticBridgedLinkWithUniswap_$25530",
                        "typeString": "contract SwapWMaticBridgedLinkWithUniswap"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 25184,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "1492:4:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MaticTo677LinkSwap_$25293",
                                "typeString": "contract MaticTo677LinkSwap"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_MaticTo677LinkSwap_$25293",
                                "typeString": "contract MaticTo677LinkSwap"
                              }
                            ],
                            "id": 25183,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1484:7:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 25182,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1484:7:19",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 25185,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1484:13:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 25181,
                        "name": "SwapWMaticBridgedLinkWithUniswap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25530,
                        "src": "1451:32:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SwapWMaticBridgedLinkWithUniswap_$25530_$",
                          "typeString": "type(contract SwapWMaticBridgedLinkWithUniswap)"
                        }
                      },
                      "id": 25186,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1451:47:19",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SwapWMaticBridgedLinkWithUniswap_$25530",
                        "typeString": "contract SwapWMaticBridgedLinkWithUniswap"
                      }
                    },
                    "src": "1443:55:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SwapWMaticBridgedLinkWithUniswap_$25530",
                      "typeString": "contract SwapWMaticBridgedLinkWithUniswap"
                    }
                  },
                  "id": 25188,
                  "nodeType": "ExpressionStatement",
                  "src": "1443:55:19"
                },
                {
                  "expression": {
                    "id": 25193,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 25189,
                      "name": "pegswap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25167,
                      "src": "1509:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IPegSwap_$25151",
                        "typeString": "contract IPegSwap"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 25191,
                          "name": "ChainlinkPegSwap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25170,
                          "src": "1528:16:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 25190,
                        "name": "IPegSwap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25151,
                        "src": "1519:8:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IPegSwap_$25151_$",
                          "typeString": "type(contract IPegSwap)"
                        }
                      },
                      "id": 25192,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1519:26:19",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IPegSwap_$25151",
                        "typeString": "contract IPegSwap"
                      }
                    },
                    "src": "1509:36:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPegSwap_$25151",
                      "typeString": "contract IPegSwap"
                    }
                  },
                  "id": 25194,
                  "nodeType": "ExpressionStatement",
                  "src": "1509:36:19"
                }
              ]
            },
            "documentation": {
              "id": 25177,
              "nodeType": "StructuredDocumentation",
              "src": "1335:78:19",
              "text": "@notice constructor is called\n @dev intializes immutable contracts"
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 25178,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1430:2:19"
            },
            "returnParameters": {
              "id": 25179,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1432:0:19"
            },
            "scope": 25293,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 25292,
            "nodeType": "FunctionDefinition",
            "src": "1867:1335:19",
            "nodes": [],
            "body": {
              "id": 25291,
              "nodeType": "Block",
              "src": "1930:1272:19",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 25208,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 25205,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1949:3:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 25206,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1953:5:19",
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "1949:9:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "hexValue": "31653138",
                          "id": 25207,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1962:4:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1e18"
                        },
                        "src": "1949:17:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d73672e76616c75652068617320746f20626520686967686572207468616e20312065746820286d6174696329",
                        "id": 25209,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1968:47:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d806cba1e4e4675319aefeca6c45b438368444ed859b371f005e8a2f196c6f75",
                          "typeString": "literal_string \"Msg.value has to be higher than 1 eth (matic)\""
                        },
                        "value": "Msg.value has to be higher than 1 eth (matic)"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d806cba1e4e4675319aefeca6c45b438368444ed859b371f005e8a2f196c6f75",
                          "typeString": "literal_string \"Msg.value has to be higher than 1 eth (matic)\""
                        }
                      ],
                      "id": 25204,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1941:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 25210,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1941:75:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25211,
                  "nodeType": "ExpressionStatement",
                  "src": "1941:75:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 25216,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 25213,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2035:3:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 25214,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2039:5:19",
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "2035:9:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "hexValue": "31653233",
                          "id": 25215,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2047:4:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000000000000000000000_by_1",
                            "typeString": "int_const 100000000000000000000000"
                          },
                          "value": "1e23"
                        },
                        "src": "2035:16:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d73672e76616c75652068617320746f206265206c657373207468616e203130303030302065746820286d6174696329",
                        "id": 25217,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2053:50:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f02ae6b1861f6914b3a2a6b8913dde90aaa0a11fd1691cd9e4a56647f794a572",
                          "typeString": "literal_string \"Msg.value has to be less than 100000 eth (matic)\""
                        },
                        "value": "Msg.value has to be less than 100000 eth (matic)"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f02ae6b1861f6914b3a2a6b8913dde90aaa0a11fd1691cd9e4a56647f794a572",
                          "typeString": "literal_string \"Msg.value has to be less than 100000 eth (matic)\""
                        }
                      ],
                      "id": 25212,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2027:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 25218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2027:77:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25219,
                  "nodeType": "ExpressionStatement",
                  "src": "2027:77:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 25226,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2242:4:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MaticTo677LinkSwap_$25293",
                              "typeString": "contract MaticTo677LinkSwap"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MaticTo677LinkSwap_$25293",
                              "typeString": "contract MaticTo677LinkSwap"
                            }
                          ],
                          "id": 25225,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2234:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 25224,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2234:7:19",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25227,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2234:13:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 25228,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2249:3:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 25229,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2253:5:19",
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "2249:9:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 25221,
                            "name": "wmatic",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25341,
                            "src": "2218:6:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 25220,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24850,
                          "src": "2211:6:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$24850_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 25222,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2211:14:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$24850",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 25223,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2226:7:19",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24837,
                      "src": "2211:22:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 25230,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2211:48:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 25231,
                  "nodeType": "ExpressionStatement",
                  "src": "2211:48:19"
                },
                {
                  "assignments": [
                    25233
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 25233,
                      "mutability": "mutable",
                      "name": "swapAmountOut",
                      "nameLocation": "2340:13:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 25291,
                      "src": "2332:21:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 25232,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2332:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 25240,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 25234,
                          "name": "univ3",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25173,
                          "src": "2357:5:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SwapWMaticBridgedLinkWithUniswap_$25530",
                            "typeString": "contract SwapWMaticBridgedLinkWithUniswap"
                          }
                        },
                        "id": 25235,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2363:11:19",
                        "memberName": "wrapAndSwap",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 25401,
                        "src": "2357:17:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$__$returns$_t_uint256_$",
                          "typeString": "function () payable external returns (uint256)"
                        }
                      },
                      "id": 25238,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "expression": {
                            "id": 25236,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2382:3:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 25237,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2386:5:19",
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "2382:9:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "2357:35:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$__$returns$_t_uint256_$value",
                        "typeString": "function () payable external returns (uint256)"
                      }
                    },
                    "id": 25239,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2357:37:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2332:62:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 25244,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 25242,
                          "name": "swapAmountOut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25233,
                          "src": "2507:13:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 25243,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2523:1:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2507:17:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "537761702072657475726e732030",
                        "id": 25245,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2526:16:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7fa46db27e13e10a04bae6a1911fde7f9c4a7b038e3282b5c77f039034f8681a",
                          "typeString": "literal_string \"Swap returns 0\""
                        },
                        "value": "Swap returns 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7fa46db27e13e10a04bae6a1911fde7f9c4a7b038e3282b5c77f039034f8681a",
                          "typeString": "literal_string \"Swap returns 0\""
                        }
                      ],
                      "id": 25241,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2499:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 25246,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2499:44:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25247,
                  "nodeType": "ExpressionStatement",
                  "src": "2499:44:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25252,
                        "name": "ChainlinkPegSwap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25170,
                        "src": "2669:16:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25253,
                        "name": "swapAmountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25233,
                        "src": "2687:13:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 25249,
                            "name": "bridged_Link",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25338,
                            "src": "2647:12:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 25248,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24850,
                          "src": "2640:6:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$24850_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 25250,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2640:20:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$24850",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 25251,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2661:7:19",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24837,
                      "src": "2640:28:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 25254,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2640:61:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 25255,
                  "nodeType": "ExpressionStatement",
                  "src": "2640:61:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25259,
                        "name": "swapAmountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25233,
                        "src": "2826:13:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 25260,
                        "name": "bridged_Link",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25338,
                        "src": "2841:12:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25261,
                        "name": "ERC677_Link",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25176,
                        "src": "2855:11:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 25256,
                        "name": "pegswap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25167,
                        "src": "2813:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPegSwap_$25151",
                          "typeString": "contract IPegSwap"
                        }
                      },
                      "id": 25258,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2821:4:19",
                      "memberName": "swap",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25150,
                      "src": "2813:12:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address,address) external"
                      }
                    },
                    "id": 25262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2813:54:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25263,
                  "nodeType": "ExpressionStatement",
                  "src": "2813:54:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 25268,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3000:3:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 25269,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3004:6:19",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3000:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 25276,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "3050:4:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MaticTo677LinkSwap_$25293",
                                  "typeString": "contract MaticTo677LinkSwap"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_MaticTo677LinkSwap_$25293",
                                  "typeString": "contract MaticTo677LinkSwap"
                                }
                              ],
                              "id": 25275,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3042:7:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 25274,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3042:7:19",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 25277,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3042:13:19",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 25271,
                                "name": "ERC677_Link",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 25176,
                                "src": "3019:11:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 25270,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24850,
                              "src": "3012:6:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$24850_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 25272,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3012:19:19",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$24850",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 25273,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3032:9:19",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 24807,
                          "src": "3012:29:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 25278,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3012:44:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 25265,
                            "name": "ERC677_Link",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25176,
                            "src": "2978:11:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 25264,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24850,
                          "src": "2971:6:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$24850_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 25266,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2971:19:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$24850",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 25267,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2991:8:19",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24817,
                      "src": "2971:28:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 25279,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2971:86:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 25280,
                  "nodeType": "ExpressionStatement",
                  "src": "2971:86:19"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 25282,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3126:3:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 25283,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3130:6:19",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3126:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 25284,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3138:3:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 25285,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3142:5:19",
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "3138:9:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 25286,
                        "name": "swapAmountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25233,
                        "src": "3149:13:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 25281,
                      "name": "SwapCompleted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25164,
                      "src": "3112:13:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 25287,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3112:51:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25288,
                  "nodeType": "EmitStatement",
                  "src": "3107:56:19"
                },
                {
                  "expression": {
                    "id": 25289,
                    "name": "swapAmountOut",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 25233,
                    "src": "3181:13:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 25203,
                  "id": 25290,
                  "nodeType": "Return",
                  "src": "3174:20:19"
                }
              ]
            },
            "documentation": {
              "id": 25197,
              "nodeType": "StructuredDocumentation",
              "src": "1561:300:19",
              "text": "@notice Swaps matic for erc677 Link in one function\n @dev call this function with a msg.value greater than 0 to swap matic for 677Link\n @param (msg.value) requires to be greater than 0 and less than 1e23 (100000Eth)\n @return swapAmountOut of token returned from operations"
            },
            "functionSelector": "8119c065",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 25200,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 25199,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "1900:12:19"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 24737,
                  "src": "1900:12:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "1900:12:19"
              }
            ],
            "name": "swap",
            "nameLocation": "1876:4:19",
            "parameters": {
              "id": 25198,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1880:2:19"
            },
            "returnParameters": {
              "id": 25203,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25202,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 25292,
                  "src": "1922:7:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25201,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1922:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1921:9:19"
            },
            "scope": 25293,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 25153,
              "name": "SwapWMaticBridgedLinkWithUniswap",
              "nameLocations": [
                "839:32:19"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 25530,
              "src": "839:32:19"
            },
            "id": 25154,
            "nodeType": "InheritanceSpecifier",
            "src": "839:32:19"
          },
          {
            "baseName": {
              "id": 25155,
              "name": "ReentrancyGuard",
              "nameLocations": [
                "873:15:19"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 24772,
              "src": "873:15:19"
            },
            "id": 25156,
            "nodeType": "InheritanceSpecifier",
            "src": "873:15:19"
          }
        ],
        "canonicalName": "MaticTo677LinkSwap",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 25152,
          "nodeType": "StructuredDocumentation",
          "src": "495:313:19",
          "text": "@title Matic to Link ERC677 compatible in one function\n @author ZergDrone - See deployer address;\n @notice this contract contains and external function to swap matic to erc677 Link\n @dev simply create an interface for swap() external payable returns(uint256) and call from a contract"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          25293,
          24772,
          25530
        ],
        "name": "MaticTo677LinkSwap",
        "nameLocation": "817:18:19",
        "scope": 25294,
        "usedErrors": []
      }
    ],
    "license": "GPL-2.0-or-later"
  },
  "id": 19
}